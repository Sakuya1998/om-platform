// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.27.3
// source: api/user/service/v1/user.proto

package v1

import (
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	v1 "om-platform/pkg/utils/pagination/v1"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 验证密码结果码
type VerifyPasswordResult int32

const (
	VerifyPasswordResult_SUCCESS            VerifyPasswordResult = 0 // 验证成功
	VerifyPasswordResult_ACCOUNT_NOT_EXISTS VerifyPasswordResult = 1 // 账号不存在
	VerifyPasswordResult_WRONG_PASSWORD     VerifyPasswordResult = 2 // 密码错误
	VerifyPasswordResult_FREEZE             VerifyPasswordResult = 3 // 已冻结
	VerifyPasswordResult_DELETED            VerifyPasswordResult = 4 // 已删除
)

// Enum value maps for VerifyPasswordResult.
var (
	VerifyPasswordResult_name = map[int32]string{
		0: "SUCCESS",
		1: "ACCOUNT_NOT_EXISTS",
		2: "WRONG_PASSWORD",
		3: "FREEZE",
		4: "DELETED",
	}
	VerifyPasswordResult_value = map[string]int32{
		"SUCCESS":            0,
		"ACCOUNT_NOT_EXISTS": 1,
		"WRONG_PASSWORD":     2,
		"FREEZE":             3,
		"DELETED":            4,
	}
)

func (x VerifyPasswordResult) Enum() *VerifyPasswordResult {
	p := new(VerifyPasswordResult)
	*p = x
	return p
}

func (x VerifyPasswordResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerifyPasswordResult) Descriptor() protoreflect.EnumDescriptor {
	return file_api_user_service_v1_user_proto_enumTypes[0].Descriptor()
}

func (VerifyPasswordResult) Type() protoreflect.EnumType {
	return &file_api_user_service_v1_user_proto_enumTypes[0]
}

func (x VerifyPasswordResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerifyPasswordResult.Descriptor instead.
func (VerifyPasswordResult) EnumDescriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{0}
}

// 用户权限
type UserAuthority int32

const (
	UserAuthority_SYS_ADMIN     UserAuthority = 0 // 系统超级用户
	UserAuthority_SYS_MANAGER   UserAuthority = 1 // 系统管理员
	UserAuthority_CUSTOMER_USER UserAuthority = 2 // 普通用户
	UserAuthority_GUEST_USER    UserAuthority = 3 // 游客
	UserAuthority_REFRESH_TOKEN UserAuthority = 4 // 刷新令牌
)

// Enum value maps for UserAuthority.
var (
	UserAuthority_name = map[int32]string{
		0: "SYS_ADMIN",
		1: "SYS_MANAGER",
		2: "CUSTOMER_USER",
		3: "GUEST_USER",
		4: "REFRESH_TOKEN",
	}
	UserAuthority_value = map[string]int32{
		"SYS_ADMIN":     0,
		"SYS_MANAGER":   1,
		"CUSTOMER_USER": 2,
		"GUEST_USER":    3,
		"REFRESH_TOKEN": 4,
	}
)

func (x UserAuthority) Enum() *UserAuthority {
	p := new(UserAuthority)
	*p = x
	return p
}

func (x UserAuthority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserAuthority) Descriptor() protoreflect.EnumDescriptor {
	return file_api_user_service_v1_user_proto_enumTypes[1].Descriptor()
}

func (UserAuthority) Type() protoreflect.EnumType {
	return &file_api_user_service_v1_user_proto_enumTypes[1]
}

func (x UserAuthority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserAuthority.Descriptor instead.
func (UserAuthority) EnumDescriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{1}
}

// 用户性别
type UserGender int32

const (
	UserGender_SECRET UserGender = 0 // 未知
	UserGender_MALE   UserGender = 1 // 男性
	UserGender_FEMALE UserGender = 2 // 女性
)

// Enum value maps for UserGender.
var (
	UserGender_name = map[int32]string{
		0: "SECRET",
		1: "MALE",
		2: "FEMALE",
	}
	UserGender_value = map[string]int32{
		"SECRET": 0,
		"MALE":   1,
		"FEMALE": 2,
	}
)

func (x UserGender) Enum() *UserGender {
	p := new(UserGender)
	*p = x
	return p
}

func (x UserGender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserGender) Descriptor() protoreflect.EnumDescriptor {
	return file_api_user_service_v1_user_proto_enumTypes[2].Descriptor()
}

func (UserGender) Type() protoreflect.EnumType {
	return &file_api_user_service_v1_user_proto_enumTypes[2]
}

func (x UserGender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserGender.Descriptor instead.
func (UserGender) EnumDescriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{2}
}

// 用户账户状态
type UserAccountStatus int32

const (
	UserAccountStatus_ACTIVE          UserAccountStatus = 0 // 活跃状态
	UserAccountStatus_INACTIVE        UserAccountStatus = 1 // 未激活
	UserAccountStatus_LOCKED          UserAccountStatus = 2 // 已锁定
	UserAccountStatus_DISABLED        UserAccountStatus = 3 // 已禁用
	UserAccountStatus_ACCOUNT_DELETED UserAccountStatus = 4 // 已删除
)

// Enum value maps for UserAccountStatus.
var (
	UserAccountStatus_name = map[int32]string{
		0: "ACTIVE",
		1: "INACTIVE",
		2: "LOCKED",
		3: "DISABLED",
		4: "ACCOUNT_DELETED",
	}
	UserAccountStatus_value = map[string]int32{
		"ACTIVE":          0,
		"INACTIVE":        1,
		"LOCKED":          2,
		"DISABLED":        3,
		"ACCOUNT_DELETED": 4,
	}
)

func (x UserAccountStatus) Enum() *UserAccountStatus {
	p := new(UserAccountStatus)
	*p = x
	return p
}

func (x UserAccountStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserAccountStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_user_service_v1_user_proto_enumTypes[3].Descriptor()
}

func (UserAccountStatus) Type() protoreflect.EnumType {
	return &file_api_user_service_v1_user_proto_enumTypes[3]
}

func (x UserAccountStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserAccountStatus.Descriptor instead.
func (UserAccountStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{3}
}

// 用户
type User struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`                                                             // 用户ID
	RoleIds            []uint32               `protobuf:"varint,2,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`                                   // 角色ID列表
	WorkId             *uint32                `protobuf:"varint,3,opt,name=work_id,json=workId,proto3,oneof" json:"work_id,omitempty"`                                       // 工号
	OrgId              *uint32                `protobuf:"varint,4,opt,name=org_id,json=orgId,proto3,oneof" json:"org_id,omitempty"`                                          // 部门ID
	PositionId         *uint32                `protobuf:"varint,5,opt,name=position_id,json=positionId,proto3,oneof" json:"position_id,omitempty"`                           // 岗位ID
	PermissionCacheTtl *uint32                `protobuf:"varint,6,opt,name=permission_cache_ttl,json=permissionCacheTtl,proto3,oneof" json:"permission_cache_ttl,omitempty"` // 权限缓存生存时间
	TenantId           *uint32                `protobuf:"varint,9,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenant_id,omitempty"`                                 // 租户ID
	CreateBy           *uint32                `protobuf:"varint,7,opt,name=create_by,json=createBy,proto3,oneof" json:"create_by,omitempty"`                                 // 创建者ID
	UpdateBy           *uint32                `protobuf:"varint,8,opt,name=update_by,json=updateBy,proto3,oneof" json:"update_by,omitempty"`                                 // 更新者ID
	UserName           *string                `protobuf:"bytes,10,opt,name=user_name,json=userName,proto3,oneof" json:"user_name,omitempty"`                                 // 登录名
	NickName           *string                `protobuf:"bytes,11,opt,name=nick_name,json=nickName,proto3,oneof" json:"nick_name,omitempty"`                                 // 昵称
	RealName           *string                `protobuf:"bytes,12,opt,name=real_name,json=realName,proto3,oneof" json:"real_name,omitempty"`                                 // 真实姓名
	Avatar             *string                `protobuf:"bytes,13,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`                                                     // 头像
	Email              *string                `protobuf:"bytes,14,opt,name=email,proto3,oneof" json:"email,omitempty"`                                                       // 邮箱
	Mobile             *string                `protobuf:"bytes,15,opt,name=mobile,proto3,oneof" json:"mobile,omitempty"`                                                     // 手机号
	Telephone          *string                `protobuf:"bytes,16,opt,name=telephone,proto3,oneof" json:"telephone,omitempty"`                                               // 手机号
	Gender             *UserGender            `protobuf:"varint,17,opt,name=gender,proto3,enum=api.user.service.v1.UserGender,oneof" json:"gender,omitempty"`                // 性别
	Address            *string                `protobuf:"bytes,18,opt,name=address,proto3,oneof" json:"address,omitempty"`                                                   // 住址
	Region             *string                `protobuf:"bytes,19,opt,name=region,proto3,oneof" json:"region,omitempty"`                                                     // 国家地区
	Description        *string                `protobuf:"bytes,20,opt,name=description,proto3,oneof" json:"description,omitempty"`                                           // 个人描述
	Remark             *string                `protobuf:"bytes,21,opt,name=remark,proto3,oneof" json:"remark,omitempty"`                                                     // 备注名
	LastLoginTime      *int64                 `protobuf:"varint,30,opt,name=last_login_time,json=lastLoginTime,proto3,oneof" json:"last_login_time,omitempty"`               // 最后登录时间
	LastLoginIp        *string                `protobuf:"bytes,31,opt,name=last_login_ip,json=lastLoginIp,proto3,oneof" json:"last_login_ip,omitempty"`                      // 最后登录IP
	Status             *UserAccountStatus     `protobuf:"varint,32,opt,name=status,proto3,enum=api.user.service.v1.UserAccountStatus,oneof" json:"status,omitempty"`         // 用户状态
	Authority          *UserAuthority         `protobuf:"varint,33,opt,name=authority,proto3,enum=api.user.service.v1.UserAuthority,oneof" json:"authority,omitempty"`       // 权限
	Roles              []string               `protobuf:"bytes,34,rep,name=roles,proto3" json:"roles,omitempty"`                                                             // 角色码
	// ========== 账户状态相关字段（从AccountService迁移） ==========
	AccountStatus          *UserAccountStatus     `protobuf:"varint,35,opt,name=account_status,json=accountStatus,proto3,enum=api.user.service.v1.UserAccountStatus,oneof" json:"account_status,omitempty"` // 账户状态
	LastPasswordChangeTime *timestamppb.Timestamp `protobuf:"bytes,36,opt,name=last_password_change_time,json=lastPasswordChangeTime,proto3,oneof" json:"last_password_change_time,omitempty"`              // 最后密码修改时间
	LoginAttempts          *uint32                `protobuf:"varint,37,opt,name=login_attempts,json=loginAttempts,proto3,oneof" json:"login_attempts,omitempty"`                                            // 登录尝试次数
	TwoFactorEnabled       *bool                  `protobuf:"varint,38,opt,name=two_factor_enabled,json=twoFactorEnabled,proto3,oneof" json:"two_factor_enabled,omitempty"`                                 // 是否启用双因素认证
	LockExpiresAt          *timestamppb.Timestamp `protobuf:"bytes,39,opt,name=lock_expires_at,json=lockExpiresAt,proto3,oneof" json:"lock_expires_at,omitempty"`                                           // 锁定过期时间
	Metadata               map[string]string      `protobuf:"bytes,40,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`        // 用户相关元数据
	CreateTime             *timestamppb.Timestamp `protobuf:"bytes,200,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`                                                     // 创建时间
	UpdateTime             *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=update_time,json=updateTime,proto3,oneof" json:"update_time,omitempty"`                                                     // 更新时间
	DeleteTime             *timestamppb.Timestamp `protobuf:"bytes,202,opt,name=delete_time,json=deleteTime,proto3,oneof" json:"delete_time,omitempty"`                                                     // 删除时间
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *User) GetRoleIds() []uint32 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *User) GetWorkId() uint32 {
	if x != nil && x.WorkId != nil {
		return *x.WorkId
	}
	return 0
}

func (x *User) GetOrgId() uint32 {
	if x != nil && x.OrgId != nil {
		return *x.OrgId
	}
	return 0
}

func (x *User) GetPositionId() uint32 {
	if x != nil && x.PositionId != nil {
		return *x.PositionId
	}
	return 0
}

func (x *User) GetPermissionCacheTtl() uint32 {
	if x != nil && x.PermissionCacheTtl != nil {
		return *x.PermissionCacheTtl
	}
	return 0
}

func (x *User) GetTenantId() uint32 {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return 0
}

func (x *User) GetCreateBy() uint32 {
	if x != nil && x.CreateBy != nil {
		return *x.CreateBy
	}
	return 0
}

func (x *User) GetUpdateBy() uint32 {
	if x != nil && x.UpdateBy != nil {
		return *x.UpdateBy
	}
	return 0
}

func (x *User) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *User) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *User) GetRealName() string {
	if x != nil && x.RealName != nil {
		return *x.RealName
	}
	return ""
}

func (x *User) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *User) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *User) GetTelephone() string {
	if x != nil && x.Telephone != nil {
		return *x.Telephone
	}
	return ""
}

func (x *User) GetGender() UserGender {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return UserGender_SECRET
}

func (x *User) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *User) GetRegion() string {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return ""
}

func (x *User) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *User) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *User) GetLastLoginTime() int64 {
	if x != nil && x.LastLoginTime != nil {
		return *x.LastLoginTime
	}
	return 0
}

func (x *User) GetLastLoginIp() string {
	if x != nil && x.LastLoginIp != nil {
		return *x.LastLoginIp
	}
	return ""
}

func (x *User) GetStatus() UserAccountStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return UserAccountStatus_ACTIVE
}

func (x *User) GetAuthority() UserAuthority {
	if x != nil && x.Authority != nil {
		return *x.Authority
	}
	return UserAuthority_SYS_ADMIN
}

func (x *User) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *User) GetAccountStatus() UserAccountStatus {
	if x != nil && x.AccountStatus != nil {
		return *x.AccountStatus
	}
	return UserAccountStatus_ACTIVE
}

func (x *User) GetLastPasswordChangeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastPasswordChangeTime
	}
	return nil
}

func (x *User) GetLoginAttempts() uint32 {
	if x != nil && x.LoginAttempts != nil {
		return *x.LoginAttempts
	}
	return 0
}

func (x *User) GetTwoFactorEnabled() bool {
	if x != nil && x.TwoFactorEnabled != nil {
		return *x.TwoFactorEnabled
	}
	return false
}

func (x *User) GetLockExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LockExpiresAt
	}
	return nil
}

func (x *User) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *User) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *User) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *User) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

// 获取用户列表 - 答复
type ListUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*User                `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserResponse) Reset() {
	*x = ListUserResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResponse) ProtoMessage() {}

func (x *ListUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResponse.ProtoReflect.Descriptor instead.
func (*ListUserResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *ListUserResponse) GetItems() []*User {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListUserResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 获取用户数据 - 请求
type GetUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量获取用户信息 - 请求
type BatchGetUsersByIdsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIds       []uint32               `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"` // 用户ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetUsersByIdsRequest) Reset() {
	*x = BatchGetUsersByIdsRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUsersByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUsersByIdsRequest) ProtoMessage() {}

func (x *BatchGetUsersByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUsersByIdsRequest.ProtoReflect.Descriptor instead.
func (*BatchGetUsersByIdsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{3}
}

func (x *BatchGetUsersByIdsRequest) GetUserIds() []uint32 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

// 批量获取用户信息 - 响应
type BatchGetUsersByIdsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Users []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"` // 用户信息列表
	// 未找到的用户ID列表
	NotFoundUserIds []uint32 `protobuf:"varint,2,rep,packed,name=not_found_user_ids,json=notFoundUserIds,proto3" json:"not_found_user_ids,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BatchGetUsersByIdsResponse) Reset() {
	*x = BatchGetUsersByIdsResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUsersByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUsersByIdsResponse) ProtoMessage() {}

func (x *BatchGetUsersByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUsersByIdsResponse.ProtoReflect.Descriptor instead.
func (*BatchGetUsersByIdsResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{4}
}

func (x *BatchGetUsersByIdsResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *BatchGetUsersByIdsResponse) GetNotFoundUserIds() []uint32 {
	if x != nil {
		return x.NotFoundUserIds
	}
	return nil
}

type GetUserByUserNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserName      string                 `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"` // 用户登录名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserByUserNameRequest) Reset() {
	*x = GetUserByUserNameRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserByUserNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByUserNameRequest) ProtoMessage() {}

func (x *GetUserByUserNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByUserNameRequest.ProtoReflect.Descriptor instead.
func (*GetUserByUserNameRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserByUserNameRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

// 创建用户 - 请求
type CreateUserRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	OperatorId *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	Data       *User                  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                                      // 用户基本信息
	Password   *string                `protobuf:"bytes,3,opt,name=password,proto3,oneof" json:"password,omitempty"`                        // 用户登录密码
	// 用户账户初始状态设置
	InitialStatus *UserAccountStatus `protobuf:"varint,4,opt,name=initial_status,json=initialStatus,proto3,enum=api.user.service.v1.UserAccountStatus,oneof" json:"initial_status,omitempty"` // 初始账户状态
	// 是否需要激活
	RequireActivation *bool `protobuf:"varint,5,opt,name=require_activation,json=requireActivation,proto3,oneof" json:"require_activation,omitempty"` // 是否需要激活
	// 是否发送欢迎邮件
	SendWelcomeEmail *bool `protobuf:"varint,6,opt,name=send_welcome_email,json=sendWelcomeEmail,proto3,oneof" json:"send_welcome_email,omitempty"` // 是否发送欢迎邮件
	// 初始安全策略
	SecurityPolicy *UserSecurityPolicy `protobuf:"bytes,7,opt,name=security_policy,json=securityPolicy,proto3,oneof" json:"security_policy,omitempty"` // 初始安全策略
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{6}
}

func (x *CreateUserRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *CreateUserRequest) GetData() *User {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateUserRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *CreateUserRequest) GetInitialStatus() UserAccountStatus {
	if x != nil && x.InitialStatus != nil {
		return *x.InitialStatus
	}
	return UserAccountStatus_ACTIVE
}

func (x *CreateUserRequest) GetRequireActivation() bool {
	if x != nil && x.RequireActivation != nil {
		return *x.RequireActivation
	}
	return false
}

func (x *CreateUserRequest) GetSendWelcomeEmail() bool {
	if x != nil && x.SendWelcomeEmail != nil {
		return *x.SendWelcomeEmail
	}
	return false
}

func (x *CreateUserRequest) GetSecurityPolicy() *UserSecurityPolicy {
	if x != nil {
		return x.SecurityPolicy
	}
	return nil
}

// 更新用户 - 请求
type UpdateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"`       // 操作用户ID
	Data          *User                  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                                            // 用户的数据
	Password      *string                `protobuf:"bytes,3,opt,name=password,proto3,oneof" json:"password,omitempty"`                              // 用户登录密码
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`              // 要更新的字段列表
	AllowMissing  *bool                  `protobuf:"varint,5,opt,name=allow_missing,json=allowMissing,proto3,oneof" json:"allow_missing,omitempty"` // 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUserRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *UpdateUserRequest) GetData() *User {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateUserRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *UpdateUserRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateUserRequest) GetAllowMissing() bool {
	if x != nil && x.AllowMissing != nil {
		return *x.AllowMissing
	}
	return false
}

// 创建用户 - 响应
type CreateUserResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	UserId    uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`         // 新创建的用户ID
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // 创建时间
	// 激活码(如果需要激活)
	ActivationCode *string `protobuf:"bytes,3,opt,name=activation_code,json=activationCode,proto3,oneof" json:"activation_code,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{8}
}

func (x *CreateUserResponse) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateUserResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateUserResponse) GetActivationCode() string {
	if x != nil && x.ActivationCode != nil {
		return *x.ActivationCode
	}
	return ""
}

// 删除用户 - 请求
type DeleteUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	Id            uint32                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteUserRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *DeleteUserRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 验证密码 - 请求
type VerifyPasswordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserName      string                 `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"` // 用户登录名
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`                 // 用户登录密码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyPasswordRequest) Reset() {
	*x = VerifyPasswordRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPasswordRequest) ProtoMessage() {}

func (x *VerifyPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPasswordRequest.ProtoReflect.Descriptor instead.
func (*VerifyPasswordRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{10}
}

func (x *VerifyPasswordRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *VerifyPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 验证密码 - 答复
type VerifyPasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        VerifyPasswordResult   `protobuf:"varint,1,opt,name=result,proto3,enum=api.user.service.v1.VerifyPasswordResult" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyPasswordResponse) Reset() {
	*x = VerifyPasswordResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPasswordResponse) ProtoMessage() {}

func (x *VerifyPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPasswordResponse.ProtoReflect.Descriptor instead.
func (*VerifyPasswordResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{11}
}

func (x *VerifyPasswordResponse) GetResult() VerifyPasswordResult {
	if x != nil {
		return x.Result
	}
	return VerifyPasswordResult_SUCCESS
}

// 用户是否存在 - 请求
type UserExistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserName      string                 `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"` // 用户登录名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserExistsRequest) Reset() {
	*x = UserExistsRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExistsRequest) ProtoMessage() {}

func (x *UserExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExistsRequest.ProtoReflect.Descriptor instead.
func (*UserExistsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{12}
}

func (x *UserExistsRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

// 用户是否存在 - 答复
type UserExistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exist         bool                   `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserExistsResponse) Reset() {
	*x = UserExistsResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExistsResponse) ProtoMessage() {}

func (x *UserExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExistsResponse.ProtoReflect.Descriptor instead.
func (*UserExistsResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{13}
}

func (x *UserExistsResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

// 获取用户角色列表 - 请求
type GetUserRolesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRolesRequest) Reset() {
	*x = GetUserRolesRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRolesRequest) ProtoMessage() {}

func (x *GetUserRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRolesRequest.ProtoReflect.Descriptor instead.
func (*GetUserRolesRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserRolesRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 用户角色信息（简化版，避免循环依赖）
type UserRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Remark        string                 `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRole) Reset() {
	*x = UserRole{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRole) ProtoMessage() {}

func (x *UserRole) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRole.ProtoReflect.Descriptor instead.
func (*UserRole) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{15}
}

func (x *UserRole) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserRole) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserRole) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserRole) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 获取用户角色列表 - 响应
type GetUserRolesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Roles         []*UserRole            `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRolesResponse) Reset() {
	*x = GetUserRolesResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRolesResponse) ProtoMessage() {}

func (x *GetUserRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRolesResponse.ProtoReflect.Descriptor instead.
func (*GetUserRolesResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserRolesResponse) GetRoles() []*UserRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

// 分配用户角色 - 请求
type AssignUserRolesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleIds       []uint32               `protobuf:"varint,3,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignUserRolesRequest) Reset() {
	*x = AssignUserRolesRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignUserRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignUserRolesRequest) ProtoMessage() {}

func (x *AssignUserRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignUserRolesRequest.ProtoReflect.Descriptor instead.
func (*AssignUserRolesRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{17}
}

func (x *AssignUserRolesRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *AssignUserRolesRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AssignUserRolesRequest) GetRoleIds() []uint32 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

// 撤销用户角色 - 请求
type RevokeUserRolesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleIds       []uint32               `protobuf:"varint,3,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeUserRolesRequest) Reset() {
	*x = RevokeUserRolesRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeUserRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeUserRolesRequest) ProtoMessage() {}

func (x *RevokeUserRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeUserRolesRequest.ProtoReflect.Descriptor instead.
func (*RevokeUserRolesRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{18}
}

func (x *RevokeUserRolesRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *RevokeUserRolesRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RevokeUserRolesRequest) GetRoleIds() []uint32 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

// 修改用户密码 - 请求
type ChangePasswordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OldPassword   string                 `protobuf:"bytes,3,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword   string                 `protobuf:"bytes,4,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePasswordRequest) Reset() {
	*x = ChangePasswordRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordRequest) ProtoMessage() {}

func (x *ChangePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordRequest.ProtoReflect.Descriptor instead.
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{19}
}

func (x *ChangePasswordRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *ChangePasswordRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ChangePasswordRequest) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *ChangePasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

// 重置用户密码 - 请求
type ResetPasswordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetPasswordRequest) Reset() {
	*x = ResetPasswordRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRequest) ProtoMessage() {}

func (x *ResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{20}
}

func (x *ResetPasswordRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *ResetPasswordRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 重置用户密码 - 响应
type ResetPasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Password      string                 `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetPasswordResponse) Reset() {
	*x = ResetPasswordResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordResponse) ProtoMessage() {}

func (x *ResetPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordResponse.ProtoReflect.Descriptor instead.
func (*ResetPasswordResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{21}
}

func (x *ResetPasswordResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 获取用户有效权限 - 请求
type GetUserEffectivePermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceType  *string                `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3,oneof" json:"resource_type,omitempty"` // 可选，按资源类型过滤
	SkipCache     bool                   `protobuf:"varint,3,opt,name=skip_cache,json=skipCache,proto3" json:"skip_cache,omitempty"`               // 是否跳过缓存，强制重新计算权限
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserEffectivePermissionsRequest) Reset() {
	*x = GetUserEffectivePermissionsRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserEffectivePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserEffectivePermissionsRequest) ProtoMessage() {}

func (x *GetUserEffectivePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserEffectivePermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetUserEffectivePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{22}
}

func (x *GetUserEffectivePermissionsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserEffectivePermissionsRequest) GetResourceType() string {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return ""
}

func (x *GetUserEffectivePermissionsRequest) GetSkipCache() bool {
	if x != nil {
		return x.SkipCache
	}
	return false
}

// 获取用户有效权限 - 响应
type GetUserEffectivePermissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permissions   []*Permission          `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	PermissionMap map[string]bool        `protobuf:"bytes,2,rep,name=permission_map,json=permissionMap,proto3" json:"permission_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 权限编码到布尔值的映射，方便客户端快速查询
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserEffectivePermissionsResponse) Reset() {
	*x = GetUserEffectivePermissionsResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserEffectivePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserEffectivePermissionsResponse) ProtoMessage() {}

func (x *GetUserEffectivePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserEffectivePermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetUserEffectivePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{23}
}

func (x *GetUserEffectivePermissionsResponse) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *GetUserEffectivePermissionsResponse) GetPermissionMap() map[string]bool {
	if x != nil {
		return x.PermissionMap
	}
	return nil
}

// 检查用户权限 - 请求
type CheckUserPermissionRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserId             uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceIdentifier string                 `protobuf:"bytes,2,opt,name=resource_identifier,json=resourceIdentifier,proto3" json:"resource_identifier,omitempty"`
	Action             string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Context            map[string]string      `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 上下文信息，用于条件表达式求值
	SkipCache          bool                   `protobuf:"varint,5,opt,name=skip_cache,json=skipCache,proto3" json:"skip_cache,omitempty"`                                                     // 是否跳过缓存，强制重新检查权限
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CheckUserPermissionRequest) Reset() {
	*x = CheckUserPermissionRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserPermissionRequest) ProtoMessage() {}

func (x *CheckUserPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserPermissionRequest.ProtoReflect.Descriptor instead.
func (*CheckUserPermissionRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{24}
}

func (x *CheckUserPermissionRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckUserPermissionRequest) GetResourceIdentifier() string {
	if x != nil {
		return x.ResourceIdentifier
	}
	return ""
}

func (x *CheckUserPermissionRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *CheckUserPermissionRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CheckUserPermissionRequest) GetSkipCache() bool {
	if x != nil {
		return x.SkipCache
	}
	return false
}

// 检查用户权限 - 响应
type CheckUserPermissionResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	HasPermission       bool                   `protobuf:"varint,1,opt,name=has_permission,json=hasPermission,proto3" json:"has_permission,omitempty"`
	DenyReason          string                 `protobuf:"bytes,2,opt,name=deny_reason,json=denyReason,proto3" json:"deny_reason,omitempty"`
	MatchedPermissionId uint32                 `protobuf:"varint,3,opt,name=matched_permission_id,json=matchedPermissionId,proto3" json:"matched_permission_id,omitempty"`
	FromCache           bool                   `protobuf:"varint,4,opt,name=from_cache,json=fromCache,proto3" json:"from_cache,omitempty"` // 结果是否来自缓存
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CheckUserPermissionResponse) Reset() {
	*x = CheckUserPermissionResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserPermissionResponse) ProtoMessage() {}

func (x *CheckUserPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserPermissionResponse.ProtoReflect.Descriptor instead.
func (*CheckUserPermissionResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{25}
}

func (x *CheckUserPermissionResponse) GetHasPermission() bool {
	if x != nil {
		return x.HasPermission
	}
	return false
}

func (x *CheckUserPermissionResponse) GetDenyReason() string {
	if x != nil {
		return x.DenyReason
	}
	return ""
}

func (x *CheckUserPermissionResponse) GetMatchedPermissionId() uint32 {
	if x != nil {
		return x.MatchedPermissionId
	}
	return 0
}

func (x *CheckUserPermissionResponse) GetFromCache() bool {
	if x != nil {
		return x.FromCache
	}
	return false
}

// 清除用户权限缓存 - 请求
type ClearUserPermissionCacheRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"`      // 操作用户ID
	UserId        *uint32                `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`                  // 指定用户ID，为空则清除所有用户的权限缓存
	ResourceType  *string                `protobuf:"bytes,3,opt,name=resource_type,json=resourceType,proto3,oneof" json:"resource_type,omitempty"` // 指定资源类型，为空则不按资源类型过滤
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearUserPermissionCacheRequest) Reset() {
	*x = ClearUserPermissionCacheRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearUserPermissionCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUserPermissionCacheRequest) ProtoMessage() {}

func (x *ClearUserPermissionCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUserPermissionCacheRequest.ProtoReflect.Descriptor instead.
func (*ClearUserPermissionCacheRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{26}
}

func (x *ClearUserPermissionCacheRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *ClearUserPermissionCacheRequest) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ClearUserPermissionCacheRequest) GetResourceType() string {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return ""
}

// 获取用户动态角色 - 请求
type GetUserDynamicRolesRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserId             uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EvaluateConditions bool                   `protobuf:"varint,2,opt,name=evaluate_conditions,json=evaluateConditions,proto3" json:"evaluate_conditions,omitempty"`                          // 是否评估动态条件
	Context            map[string]string      `protobuf:"bytes,3,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 上下文信息，用于条件表达式求值
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetUserDynamicRolesRequest) Reset() {
	*x = GetUserDynamicRolesRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserDynamicRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDynamicRolesRequest) ProtoMessage() {}

func (x *GetUserDynamicRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDynamicRolesRequest.ProtoReflect.Descriptor instead.
func (*GetUserDynamicRolesRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{27}
}

func (x *GetUserDynamicRolesRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserDynamicRolesRequest) GetEvaluateConditions() bool {
	if x != nil {
		return x.EvaluateConditions
	}
	return false
}

func (x *GetUserDynamicRolesRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

// 获取用户动态角色 - 响应
type GetUserDynamicRolesResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Roles            []*Role                `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	ConditionResults map[uint32]bool        `protobuf:"bytes,2,rep,name=condition_results,json=conditionResults,proto3" json:"condition_results,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 角色ID到条件评估结果的映射
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetUserDynamicRolesResponse) Reset() {
	*x = GetUserDynamicRolesResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserDynamicRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDynamicRolesResponse) ProtoMessage() {}

func (x *GetUserDynamicRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDynamicRolesResponse.ProtoReflect.Descriptor instead.
func (*GetUserDynamicRolesResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserDynamicRolesResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GetUserDynamicRolesResponse) GetConditionResults() map[uint32]bool {
	if x != nil {
		return x.ConditionResults
	}
	return nil
}

// 获取用户权限审计日志 - 请求
type GetUserPermissionAuditLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`             // 开始时间
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`                   // 结束时间
	OperationType *string                `protobuf:"bytes,4,opt,name=operation_type,json=operationType,proto3,oneof" json:"operation_type,omitempty"` // 操作类型
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                     // 分页大小
	PageNum       int32                  `protobuf:"varint,6,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                        // 页码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserPermissionAuditLogsRequest) Reset() {
	*x = GetUserPermissionAuditLogsRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserPermissionAuditLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPermissionAuditLogsRequest) ProtoMessage() {}

func (x *GetUserPermissionAuditLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPermissionAuditLogsRequest.ProtoReflect.Descriptor instead.
func (*GetUserPermissionAuditLogsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserPermissionAuditLogsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserPermissionAuditLogsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetUserPermissionAuditLogsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetUserPermissionAuditLogsRequest) GetOperationType() string {
	if x != nil && x.OperationType != nil {
		return *x.OperationType
	}
	return ""
}

func (x *GetUserPermissionAuditLogsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserPermissionAuditLogsRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

// 获取用户权限审计日志 - 响应
type GetUserPermissionAuditLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*OperationLog        `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 总记录数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserPermissionAuditLogsResponse) Reset() {
	*x = GetUserPermissionAuditLogsResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserPermissionAuditLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPermissionAuditLogsResponse) ProtoMessage() {}

func (x *GetUserPermissionAuditLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPermissionAuditLogsResponse.ProtoReflect.Descriptor instead.
func (*GetUserPermissionAuditLogsResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{30}
}

func (x *GetUserPermissionAuditLogsResponse) GetLogs() []*OperationLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *GetUserPermissionAuditLogsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 激活用户账户 - 请求
type ActivateUserRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OperatorId     *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	UserId         uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActivationCode string                 `protobuf:"bytes,3,opt,name=activation_code,json=activationCode,proto3" json:"activation_code,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ActivateUserRequest) Reset() {
	*x = ActivateUserRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateUserRequest) ProtoMessage() {}

func (x *ActivateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateUserRequest.ProtoReflect.Descriptor instead.
func (*ActivateUserRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{31}
}

func (x *ActivateUserRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *ActivateUserRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ActivateUserRequest) GetActivationCode() string {
	if x != nil {
		return x.ActivationCode
	}
	return ""
}

// 锁定用户账户 - 请求
type LockUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	LockDuration  uint32                 `protobuf:"varint,4,opt,name=lock_duration,json=lockDuration,proto3" json:"lock_duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockUserRequest) Reset() {
	*x = LockUserRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockUserRequest) ProtoMessage() {}

func (x *LockUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockUserRequest.ProtoReflect.Descriptor instead.
func (*LockUserRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{32}
}

func (x *LockUserRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *LockUserRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LockUserRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *LockUserRequest) GetLockDuration() uint32 {
	if x != nil {
		return x.LockDuration
	}
	return 0
}

// 解锁用户账户 - 请求
type UnlockUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlockUserRequest) Reset() {
	*x = UnlockUserRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockUserRequest) ProtoMessage() {}

func (x *UnlockUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockUserRequest.ProtoReflect.Descriptor instead.
func (*UnlockUserRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{33}
}

func (x *UnlockUserRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *UnlockUserRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UnlockUserRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 禁用用户账户 - 请求
type DisableUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableUserRequest) Reset() {
	*x = DisableUserRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableUserRequest) ProtoMessage() {}

func (x *DisableUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableUserRequest.ProtoReflect.Descriptor instead.
func (*DisableUserRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{34}
}

func (x *DisableUserRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *DisableUserRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DisableUserRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 启用用户账户 - 请求
type EnableUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableUserRequest) Reset() {
	*x = EnableUserRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableUserRequest) ProtoMessage() {}

func (x *EnableUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableUserRequest.ProtoReflect.Descriptor instead.
func (*EnableUserRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{35}
}

func (x *EnableUserRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *EnableUserRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EnableUserRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 验证用户账户状态 - 请求
type VerifyUserAccountStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyUserAccountStatusRequest) Reset() {
	*x = VerifyUserAccountStatusRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyUserAccountStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyUserAccountStatusRequest) ProtoMessage() {}

func (x *VerifyUserAccountStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyUserAccountStatusRequest.ProtoReflect.Descriptor instead.
func (*VerifyUserAccountStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{36}
}

func (x *VerifyUserAccountStatusRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 验证用户账户状态 - 响应
type VerifyUserAccountStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        UserAccountStatus      `protobuf:"varint,1,opt,name=status,proto3,enum=api.user.service.v1.UserAccountStatus" json:"status,omitempty"`
	CanLogin      bool                   `protobuf:"varint,2,opt,name=can_login,json=canLogin,proto3" json:"can_login,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	LockExpiresAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=lock_expires_at,json=lockExpiresAt,proto3" json:"lock_expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyUserAccountStatusResponse) Reset() {
	*x = VerifyUserAccountStatusResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyUserAccountStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyUserAccountStatusResponse) ProtoMessage() {}

func (x *VerifyUserAccountStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyUserAccountStatusResponse.ProtoReflect.Descriptor instead.
func (*VerifyUserAccountStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{37}
}

func (x *VerifyUserAccountStatusResponse) GetStatus() UserAccountStatus {
	if x != nil {
		return x.Status
	}
	return UserAccountStatus_ACTIVE
}

func (x *VerifyUserAccountStatusResponse) GetCanLogin() bool {
	if x != nil {
		return x.CanLogin
	}
	return false
}

func (x *VerifyUserAccountStatusResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *VerifyUserAccountStatusResponse) GetLockExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LockExpiresAt
	}
	return nil
}

// 用户安全策略
type UserSecurityPolicy struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	UserId                    uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PasswordExpiryEnabled     bool                   `protobuf:"varint,2,opt,name=password_expiry_enabled,json=passwordExpiryEnabled,proto3" json:"password_expiry_enabled,omitempty"`
	PasswordExpiryDays        uint32                 `protobuf:"varint,3,opt,name=password_expiry_days,json=passwordExpiryDays,proto3" json:"password_expiry_days,omitempty"`
	PasswordHistoryEnabled    bool                   `protobuf:"varint,4,opt,name=password_history_enabled,json=passwordHistoryEnabled,proto3" json:"password_history_enabled,omitempty"`
	PasswordHistoryCount      uint32                 `protobuf:"varint,5,opt,name=password_history_count,json=passwordHistoryCount,proto3" json:"password_history_count,omitempty"`
	AccountLockoutEnabled     bool                   `protobuf:"varint,6,opt,name=account_lockout_enabled,json=accountLockoutEnabled,proto3" json:"account_lockout_enabled,omitempty"`
	AccountLockoutThreshold   uint32                 `protobuf:"varint,7,opt,name=account_lockout_threshold,json=accountLockoutThreshold,proto3" json:"account_lockout_threshold,omitempty"`
	AccountLockoutDuration    uint32                 `protobuf:"varint,8,opt,name=account_lockout_duration,json=accountLockoutDuration,proto3" json:"account_lockout_duration,omitempty"`
	TwoFactorRequired         bool                   `protobuf:"varint,9,opt,name=two_factor_required,json=twoFactorRequired,proto3" json:"two_factor_required,omitempty"`
	AllowedIpRanges           []string               `protobuf:"bytes,10,rep,name=allowed_ip_ranges,json=allowedIpRanges,proto3" json:"allowed_ip_ranges,omitempty"`
	AllowedDevices            []string               `protobuf:"bytes,11,rep,name=allowed_devices,json=allowedDevices,proto3" json:"allowed_devices,omitempty"`
	ConcurrentSessionsLimited bool                   `protobuf:"varint,12,opt,name=concurrent_sessions_limited,json=concurrentSessionsLimited,proto3" json:"concurrent_sessions_limited,omitempty"`
	MaxConcurrentSessions     uint32                 `protobuf:"varint,13,opt,name=max_concurrent_sessions,json=maxConcurrentSessions,proto3" json:"max_concurrent_sessions,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UserSecurityPolicy) Reset() {
	*x = UserSecurityPolicy{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSecurityPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSecurityPolicy) ProtoMessage() {}

func (x *UserSecurityPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSecurityPolicy.ProtoReflect.Descriptor instead.
func (*UserSecurityPolicy) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{38}
}

func (x *UserSecurityPolicy) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserSecurityPolicy) GetPasswordExpiryEnabled() bool {
	if x != nil {
		return x.PasswordExpiryEnabled
	}
	return false
}

func (x *UserSecurityPolicy) GetPasswordExpiryDays() uint32 {
	if x != nil {
		return x.PasswordExpiryDays
	}
	return 0
}

func (x *UserSecurityPolicy) GetPasswordHistoryEnabled() bool {
	if x != nil {
		return x.PasswordHistoryEnabled
	}
	return false
}

func (x *UserSecurityPolicy) GetPasswordHistoryCount() uint32 {
	if x != nil {
		return x.PasswordHistoryCount
	}
	return 0
}

func (x *UserSecurityPolicy) GetAccountLockoutEnabled() bool {
	if x != nil {
		return x.AccountLockoutEnabled
	}
	return false
}

func (x *UserSecurityPolicy) GetAccountLockoutThreshold() uint32 {
	if x != nil {
		return x.AccountLockoutThreshold
	}
	return 0
}

func (x *UserSecurityPolicy) GetAccountLockoutDuration() uint32 {
	if x != nil {
		return x.AccountLockoutDuration
	}
	return 0
}

func (x *UserSecurityPolicy) GetTwoFactorRequired() bool {
	if x != nil {
		return x.TwoFactorRequired
	}
	return false
}

func (x *UserSecurityPolicy) GetAllowedIpRanges() []string {
	if x != nil {
		return x.AllowedIpRanges
	}
	return nil
}

func (x *UserSecurityPolicy) GetAllowedDevices() []string {
	if x != nil {
		return x.AllowedDevices
	}
	return nil
}

func (x *UserSecurityPolicy) GetConcurrentSessionsLimited() bool {
	if x != nil {
		return x.ConcurrentSessionsLimited
	}
	return false
}

func (x *UserSecurityPolicy) GetMaxConcurrentSessions() uint32 {
	if x != nil {
		return x.MaxConcurrentSessions
	}
	return 0
}

// 获取用户安全策略 - 请求
type GetUserSecurityPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserSecurityPolicyRequest) Reset() {
	*x = GetUserSecurityPolicyRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserSecurityPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSecurityPolicyRequest) ProtoMessage() {}

func (x *GetUserSecurityPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSecurityPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetUserSecurityPolicyRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{39}
}

func (x *GetUserSecurityPolicyRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 更新用户安全策略 - 请求
type UpdateUserSecurityPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Policy        *UserSecurityPolicy    `protobuf:"bytes,3,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserSecurityPolicyRequest) Reset() {
	*x = UpdateUserSecurityPolicyRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserSecurityPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserSecurityPolicyRequest) ProtoMessage() {}

func (x *UpdateUserSecurityPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserSecurityPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserSecurityPolicyRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateUserSecurityPolicyRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *UpdateUserSecurityPolicyRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserSecurityPolicyRequest) GetPolicy() *UserSecurityPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

// 用户活动日志
type UserActivityLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogId         string                 `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActivityType  string                 `protobuf:"bytes,3,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	ClientIp      string                 `protobuf:"bytes,4,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	UserAgent     string                 `protobuf:"bytes,5,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Details       map[string]string      `protobuf:"bytes,7,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserActivityLog) Reset() {
	*x = UserActivityLog{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserActivityLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivityLog) ProtoMessage() {}

func (x *UserActivityLog) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivityLog.ProtoReflect.Descriptor instead.
func (*UserActivityLog) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{41}
}

func (x *UserActivityLog) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *UserActivityLog) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserActivityLog) GetActivityType() string {
	if x != nil {
		return x.ActivityType
	}
	return ""
}

func (x *UserActivityLog) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *UserActivityLog) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *UserActivityLog) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *UserActivityLog) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// 获取用户活动日志 - 请求
type GetUserActivityLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Paging        *v1.PagingRequest      `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	ActivityType  string                 `protobuf:"bytes,3,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserActivityLogsRequest) Reset() {
	*x = GetUserActivityLogsRequest{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserActivityLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserActivityLogsRequest) ProtoMessage() {}

func (x *GetUserActivityLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserActivityLogsRequest.ProtoReflect.Descriptor instead.
func (*GetUserActivityLogsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{42}
}

func (x *GetUserActivityLogsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserActivityLogsRequest) GetPaging() *v1.PagingRequest {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *GetUserActivityLogsRequest) GetActivityType() string {
	if x != nil {
		return x.ActivityType
	}
	return ""
}

func (x *GetUserActivityLogsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetUserActivityLogsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// 获取用户活动日志 - 响应
type GetUserActivityLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Logs          []*UserActivityLog     `protobuf:"bytes,2,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserActivityLogsResponse) Reset() {
	*x = GetUserActivityLogsResponse{}
	mi := &file_api_user_service_v1_user_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserActivityLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserActivityLogsResponse) ProtoMessage() {}

func (x *GetUserActivityLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserActivityLogsResponse.ProtoReflect.Descriptor instead.
func (*GetUserActivityLogsResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_proto_rawDescGZIP(), []int{43}
}

func (x *GetUserActivityLogsResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *GetUserActivityLogsResponse) GetLogs() []*UserActivityLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

var File_api_user_service_v1_user_proto protoreflect.FileDescriptor

const file_api_user_service_v1_user_proto_rawDesc = "" +
	"\n" +
	"\x1eapi/user/service/v1/user.proto\x12\x13api.user.service.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a google/protobuf/field_mask.proto\x1a$gnostic/openapi/v3/annotations.proto\x1a(pkg/utils/pagination/v1/pagination.proto\x1a$api/user/service/v1/permission.proto\x1a\x1eapi/user/service/v1/role.proto\x1a'api/user/service/v1/operation_log.proto\"\xbd\x16\n" +
	"\x04User\x12#\n" +
	"\x02id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDH\x00R\x02id\x88\x01\x01\x12/\n" +
	"\brole_ids\x18\x02 \x03(\rB\x14\xbaG\x11\x92\x02\x0e角色ID列表R\aroleIds\x12*\n" +
	"\awork_id\x18\x03 \x01(\rB\f\xbaG\t\x92\x02\x06工号H\x01R\x06workId\x88\x01\x01\x12*\n" +
	"\x06org_id\x18\x04 \x01(\rB\x0e\xbaG\v\x92\x02\b部门IDH\x02R\x05orgId\x88\x01\x01\x124\n" +
	"\vposition_id\x18\x05 \x01(\rB\x0e\xbaG\v\x92\x02\b岗位IDH\x03R\n" +
	"positionId\x88\x01\x01\x12Z\n" +
	"\x14permission_cache_ttl\x18\x06 \x01(\rB#\xbaG \x92\x02\x1d权限缓存生存时间(秒)H\x04R\x12permissionCacheTtl\x88\x01\x01\x120\n" +
	"\ttenant_id\x18\t \x01(\rB\x0e\xbaG\v\x92\x02\b租户IDH\x05R\btenantId\x88\x01\x01\x123\n" +
	"\tcreate_by\x18\a \x01(\rB\x11\xbaG\x0e\x92\x02\v创建者IDH\x06R\bcreateBy\x88\x01\x01\x123\n" +
	"\tupdate_by\x18\b \x01(\rB\x11\xbaG\x0e\x92\x02\v更新者IDH\aR\bupdateBy\x88\x01\x01\x121\n" +
	"\tuser_name\x18\n" +
	" \x01(\tB\x0f\xbaG\f\x92\x02\t登录名H\bR\buserName\x88\x01\x01\x12.\n" +
	"\tnick_name\x18\v \x01(\tB\f\xbaG\t\x92\x02\x06昵称H\tR\bnickName\x88\x01\x01\x124\n" +
	"\treal_name\x18\f \x01(\tB\x12\xbaG\x0f\x92\x02\f真实姓名H\n" +
	"R\brealName\x88\x01\x01\x12)\n" +
	"\x06avatar\x18\r \x01(\tB\f\xbaG\t\x92\x02\x06头像H\vR\x06avatar\x88\x01\x01\x12'\n" +
	"\x05email\x18\x0e \x01(\tB\f\xbaG\t\x92\x02\x06邮箱H\fR\x05email\x88\x01\x01\x12,\n" +
	"\x06mobile\x18\x0f \x01(\tB\x0f\xbaG\f\x92\x02\t手机号H\rR\x06mobile\x88\x01\x01\x122\n" +
	"\ttelephone\x18\x10 \x01(\tB\x0f\xbaG\f\x92\x02\t座机号H\x0eR\ttelephone\x88\x01\x01\x12J\n" +
	"\x06gender\x18\x11 \x01(\x0e2\x1f.api.user.service.v1.UserGenderB\f\xbaG\t\x92\x02\x06性别H\x0fR\x06gender\x88\x01\x01\x12+\n" +
	"\aaddress\x18\x12 \x01(\tB\f\xbaG\t\x92\x02\x06住址H\x10R\aaddress\x88\x01\x01\x12/\n" +
	"\x06region\x18\x13 \x01(\tB\x12\xbaG\x0f\x92\x02\f国家地区H\x11R\x06region\x88\x01\x01\x129\n" +
	"\vdescription\x18\x14 \x01(\tB\x12\xbaG\x0f\x92\x02\f个人描述H\x12R\vdescription\x88\x01\x01\x12,\n" +
	"\x06remark\x18\x15 \x01(\tB\x0f\xbaG\f\x92\x02\t备注名H\x13R\x06remark\x88\x01\x01\x12E\n" +
	"\x0flast_login_time\x18\x1e \x01(\x03B\x18\xbaG\x15\x92\x02\x12最后登录时间H\x14R\rlastLoginTime\x88\x01\x01\x12=\n" +
	"\rlast_login_ip\x18\x1f \x01(\tB\x14\xbaG\x11\x92\x02\x0e最后登录IPH\x15R\vlastLoginIp\x88\x01\x01\x12m\n" +
	"\x06status\x18  \x01(\x0e2&.api.user.service.v1.UserAccountStatusB(\xbaG%\xc2\x01\x04\x12\x02ON\xc2\x01\x05\x12\x03OFF\x8a\x02\x04\x1a\x02ON\x92\x02\f用户状态H\x16R\x06status\x88\x01\x01\x12e\n" +
	"\tauthority\x18! \x01(\x0e2\".api.user.service.v1.UserAuthorityB\x1e\xbaG\x1b\x8a\x02\x0f\x1a\rCUSTOMER_USER\x92\x02\x06权限H\x17R\tauthority\x88\x01\x01\x12%\n" +
	"\x05roles\x18\" \x03(\tB\x0f\xbaG\f\x92\x02\t角色码R\x05roles\x12q\n" +
	"\x0eaccount_status\x18# \x01(\x0e2&.api.user.service.v1.UserAccountStatusB\x1d\xbaG\x1a\x8a\x02\b\x1a\x06ACTIVE\x92\x02\f账户状态H\x18R\raccountStatus\x88\x01\x01\x12z\n" +
	"\x19last_password_change_time\x18$ \x01(\v2\x1a.google.protobuf.TimestampB\x1e\xbaG\x1b\x92\x02\x18最后密码修改时间H\x19R\x16lastPasswordChangeTime\x88\x01\x01\x12D\n" +
	"\x0elogin_attempts\x18% \x01(\rB\x18\xbaG\x15\x92\x02\x12登录尝试次数H\x1aR\rloginAttempts\x88\x01\x01\x12T\n" +
	"\x12two_factor_enabled\x18& \x01(\bB!\xbaG\x1e\x92\x02\x1b是否启用双因素认证H\x1bR\x10twoFactorEnabled\x88\x01\x01\x12a\n" +
	"\x0flock_expires_at\x18' \x01(\v2\x1a.google.protobuf.TimestampB\x18\xbaG\x15\x92\x02\x12锁定过期时间H\x1cR\rlockExpiresAt\x88\x01\x01\x12`\n" +
	"\bmetadata\x18( \x03(\v2'.api.user.service.v1.User.MetadataEntryB\x1b\xbaG\x18\x92\x02\x15用户相关元数据R\bmetadata\x12U\n" +
	"\vcreate_time\x18\xc8\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f创建时间H\x1dR\n" +
	"createTime\x88\x01\x01\x12U\n" +
	"\vupdate_time\x18\xc9\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f更新时间H\x1eR\n" +
	"updateTime\x88\x01\x01\x12U\n" +
	"\vdelete_time\x18\xca\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f删除时间H\x1fR\n" +
	"deleteTime\x88\x01\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x05\n" +
	"\x03_idB\n" +
	"\n" +
	"\b_work_idB\t\n" +
	"\a_org_idB\x0e\n" +
	"\f_position_idB\x17\n" +
	"\x15_permission_cache_ttlB\f\n" +
	"\n" +
	"_tenant_idB\f\n" +
	"\n" +
	"_create_byB\f\n" +
	"\n" +
	"_update_byB\f\n" +
	"\n" +
	"_user_nameB\f\n" +
	"\n" +
	"_nick_nameB\f\n" +
	"\n" +
	"_real_nameB\t\n" +
	"\a_avatarB\b\n" +
	"\x06_emailB\t\n" +
	"\a_mobileB\f\n" +
	"\n" +
	"_telephoneB\t\n" +
	"\a_genderB\n" +
	"\n" +
	"\b_addressB\t\n" +
	"\a_regionB\x0e\n" +
	"\f_descriptionB\t\n" +
	"\a_remarkB\x12\n" +
	"\x10_last_login_timeB\x10\n" +
	"\x0e_last_login_ipB\t\n" +
	"\a_statusB\f\n" +
	"\n" +
	"_authorityB\x11\n" +
	"\x0f_account_statusB\x1c\n" +
	"\x1a_last_password_change_timeB\x11\n" +
	"\x0f_login_attemptsB\x15\n" +
	"\x13_two_factor_enabledB\x12\n" +
	"\x10_lock_expires_atB\x0e\n" +
	"\f_create_timeB\x0e\n" +
	"\f_update_timeB\x0e\n" +
	"\f_delete_time\"Y\n" +
	"\x10ListUserResponse\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.api.user.service.v1.UserR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\" \n" +
	"\x0eGetUserRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"L\n" +
	"\x19BatchGetUsersByIdsRequest\x12/\n" +
	"\buser_ids\x18\x01 \x03(\rB\x14\xbaG\x11\x92\x02\x0e用户ID列表R\auserIds\"\xb6\x01\n" +
	"\x1aBatchGetUsersByIdsResponse\x12I\n" +
	"\x05users\x18\x01 \x03(\v2\x19.api.user.service.v1.UserB\x18\xbaG\x15\x92\x02\x12用户信息列表R\x05users\x12M\n" +
	"\x12not_found_user_ids\x18\x02 \x03(\rB \xbaG\x1d\x92\x02\x1a未找到的用户ID列表R\x0fnotFoundUserIds\"P\n" +
	"\x18GetUserByUserNameRequest\x124\n" +
	"\tuser_name\x18\x01 \x01(\tB\x17\xbaG\x14\x18\x01\x92\x02\x0f用户登录名R\buserName\"\xc4\x05\n" +
	"\x11CreateUserRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12-\n" +
	"\x04data\x18\x02 \x01(\v2\x19.api.user.service.v1.UserR\x04data\x12;\n" +
	"\bpassword\x18\x03 \x01(\tB\x1a\xbaG\x17\x18\x01\x92\x02\x12用户登录密码H\x01R\bpassword\x88\x01\x01\x12w\n" +
	"\x0einitial_status\x18\x04 \x01(\x0e2&.api.user.service.v1.UserAccountStatusB#\xbaG \x8a\x02\b\x1a\x06ACTIVE\x92\x02\x12初始账户状态H\x02R\rinitialStatus\x88\x01\x01\x12Q\n" +
	"\x12require_activation\x18\x05 \x01(\bB\x1d\xbaG\x1a\x8a\x02\x02\x10\x00\x92\x02\x12是否需要激活H\x03R\x11requireActivation\x88\x01\x01\x12V\n" +
	"\x12send_welcome_email\x18\x06 \x01(\bB#\xbaG \x8a\x02\x02\x10\x00\x92\x02\x18是否发送欢迎邮件H\x04R\x10sendWelcomeEmail\x88\x01\x01\x12o\n" +
	"\x0fsecurity_policy\x18\a \x01(\v2'.api.user.service.v1.UserSecurityPolicyB\x18\xbaG\x15\x92\x02\x12初始安全策略H\x05R\x0esecurityPolicy\x88\x01\x01B\x0e\n" +
	"\f_operator_idB\v\n" +
	"\t_passwordB\x11\n" +
	"\x0f_initial_statusB\x15\n" +
	"\x13_require_activationB\x15\n" +
	"\x13_send_welcome_emailB\x12\n" +
	"\x10_security_policy\"\xb3\x04\n" +
	"\x11UpdateUserRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12H\n" +
	"\x04data\x18\x02 \x01(\v2\x19.api.user.service.v1.UserB\x19\xe2A\x01\x02\xbaG\x12\x92\x02\x0f用户的数据R\x04data\x12;\n" +
	"\bpassword\x18\x03 \x01(\tB\x1a\xbaG\x17\x18\x01\x92\x02\x12用户登录密码H\x01R\bpassword\x88\x01\x01\x12s\n" +
	"\vupdate_mask\x18\x04 \x01(\v2\x1a.google.protobuf.FieldMaskB6\xbaG3:\x16\x12\x14id,realName,userName\x92\x02\x18要更新的字段列表R\n" +
	"updateMask\x12\xb4\x01\n" +
	"\rallow_missing\x18\x05 \x01(\bB\x89\x01\xbaG\x85\x01\x92\x02\x81\x01如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。H\x02R\fallowMissing\x88\x01\x01B\x0e\n" +
	"\f_operator_idB\v\n" +
	"\t_passwordB\x10\n" +
	"\x0e_allow_missing\"\xff\x01\n" +
	"\x12CreateUserResponse\x123\n" +
	"\auser_id\x18\x01 \x01(\rB\x1a\xbaG\x17\x92\x02\x14新创建的用户IDR\x06userId\x12M\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f创建时间R\tcreatedAt\x12Q\n" +
	"\x0factivation_code\x18\x03 \x01(\tB#\xbaG \x92\x02\x1d激活码(如果需要激活)H\x00R\x0eactivationCode\x88\x01\x01B\x12\n" +
	"\x10_activation_code\"q\n" +
	"\x11DeleteUserRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\rR\x02idB\x0e\n" +
	"\f_operator_id\"\x85\x01\n" +
	"\x15VerifyPasswordRequest\x124\n" +
	"\tuser_name\x18\x01 \x01(\tB\x17\xbaG\x14\x18\x01\x92\x02\x0f用户登录名R\buserName\x126\n" +
	"\bpassword\x18\x02 \x01(\tB\x1a\xbaG\x17\x18\x01\x92\x02\x12用户登录密码R\bpassword\"[\n" +
	"\x16VerifyPasswordResponse\x12A\n" +
	"\x06result\x18\x01 \x01(\x0e2).api.user.service.v1.VerifyPasswordResultR\x06result\"I\n" +
	"\x11UserExistsRequest\x124\n" +
	"\tuser_name\x18\x01 \x01(\tB\x17\xbaG\x14\x18\x01\x92\x02\x0f用户登录名R\buserName\"*\n" +
	"\x12UserExistsResponse\x12\x14\n" +
	"\x05exist\x18\x01 \x01(\bR\x05exist\">\n" +
	"\x13GetUserRolesRequest\x12'\n" +
	"\auser_id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\"r\n" +
	"\bUserRole\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x16\n" +
	"\x06remark\x18\x05 \x01(\tR\x06remark\"K\n" +
	"\x14GetUserRolesResponse\x123\n" +
	"\x05roles\x18\x01 \x03(\v2\x1d.api.user.service.v1.UserRoleR\x05roles\"\xc0\x01\n" +
	"\x16AssignUserRolesRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12'\n" +
	"\auser_id\x18\x02 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x12/\n" +
	"\brole_ids\x18\x03 \x03(\rB\x14\xbaG\x11\x92\x02\x0e角色ID列表R\aroleIdsB\x0e\n" +
	"\f_operator_id\"\xc0\x01\n" +
	"\x16RevokeUserRolesRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12'\n" +
	"\auser_id\x18\x02 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x12/\n" +
	"\brole_ids\x18\x03 \x03(\rB\x14\xbaG\x11\x92\x02\x0e角色ID列表R\aroleIdsB\x0e\n" +
	"\f_operator_id\"\xf6\x01\n" +
	"\x15ChangePasswordRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12'\n" +
	"\auser_id\x18\x02 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x122\n" +
	"\fold_password\x18\x03 \x01(\tB\x0f\xbaG\f\x92\x02\t旧密码R\voldPassword\x122\n" +
	"\fnew_password\x18\x04 \x01(\tB\x0f\xbaG\f\x92\x02\t新密码R\vnewPasswordB\x0e\n" +
	"\f_operator_id\"\x8d\x01\n" +
	"\x14ResetPasswordRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12'\n" +
	"\auser_id\x18\x02 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userIdB\x0e\n" +
	"\f_operator_id\"M\n" +
	"\x15ResetPasswordResponse\x124\n" +
	"\bpassword\x18\x01 \x01(\tB\x18\xbaG\x15\x92\x02\x12重置后的密码R\bpassword\"\x98\x01\n" +
	"\"GetUserEffectivePermissionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12(\n" +
	"\rresource_type\x18\x02 \x01(\tH\x00R\fresourceType\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"skip_cache\x18\x03 \x01(\bR\tskipCacheB\x10\n" +
	"\x0e_resource_type\"\x9e\x02\n" +
	"#GetUserEffectivePermissionsResponse\x12A\n" +
	"\vpermissions\x18\x01 \x03(\v2\x1f.api.user.service.v1.PermissionR\vpermissions\x12r\n" +
	"\x0epermission_map\x18\x02 \x03(\v2K.api.user.service.v1.GetUserEffectivePermissionsResponse.PermissionMapEntryR\rpermissionMap\x1a@\n" +
	"\x12PermissionMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"\xb1\x02\n" +
	"\x1aCheckUserPermissionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12/\n" +
	"\x13resource_identifier\x18\x02 \x01(\tR\x12resourceIdentifier\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12V\n" +
	"\acontext\x18\x04 \x03(\v2<.api.user.service.v1.CheckUserPermissionRequest.ContextEntryR\acontext\x12\x1d\n" +
	"\n" +
	"skip_cache\x18\x05 \x01(\bR\tskipCache\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb8\x01\n" +
	"\x1bCheckUserPermissionResponse\x12%\n" +
	"\x0ehas_permission\x18\x01 \x01(\bR\rhasPermission\x12\x1f\n" +
	"\vdeny_reason\x18\x02 \x01(\tR\n" +
	"denyReason\x122\n" +
	"\x15matched_permission_id\x18\x03 \x01(\rR\x13matchedPermissionId\x12\x1d\n" +
	"\n" +
	"from_cache\x18\x04 \x01(\bR\tfromCache\"\xd5\x01\n" +
	"\x1fClearUserPermissionCacheRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x02 \x01(\rH\x01R\x06userId\x88\x01\x01\x12(\n" +
	"\rresource_type\x18\x03 \x01(\tH\x02R\fresourceType\x88\x01\x01B\x0e\n" +
	"\f_operator_idB\n" +
	"\n" +
	"\b_user_idB\x10\n" +
	"\x0e_resource_type\"\xfa\x01\n" +
	"\x1aGetUserDynamicRolesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12/\n" +
	"\x13evaluate_conditions\x18\x02 \x01(\bR\x12evaluateConditions\x12V\n" +
	"\acontext\x18\x03 \x03(\v2<.api.user.service.v1.GetUserDynamicRolesRequest.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x88\x02\n" +
	"\x1bGetUserDynamicRolesResponse\x12/\n" +
	"\x05roles\x18\x01 \x03(\v2\x19.api.user.service.v1.RoleR\x05roles\x12s\n" +
	"\x11condition_results\x18\x02 \x03(\v2F.api.user.service.v1.GetUserDynamicRolesResponse.ConditionResultsEntryR\x10conditionResults\x1aC\n" +
	"\x15ConditionResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"\xcb\x02\n" +
	"!GetUserPermissionAuditLogsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12>\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\tstartTime\x88\x01\x01\x12:\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\aendTime\x88\x01\x01\x12*\n" +
	"\x0eoperation_type\x18\x04 \x01(\tH\x02R\roperationType\x88\x01\x01\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\x12\x19\n" +
	"\bpage_num\x18\x06 \x01(\x05R\apageNumB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_timeB\x11\n" +
	"\x0f_operation_type\"q\n" +
	"\"GetUserPermissionAuditLogsResponse\x125\n" +
	"\x04logs\x18\x01 \x03(\v2!.api.user.service.v1.OperationLogR\x04logs\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xc6\x01\n" +
	"\x13ActivateUserRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12'\n" +
	"\auser_id\x18\x02 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x128\n" +
	"\x0factivation_code\x18\x03 \x01(\tB\x0f\xbaG\f\x92\x02\t激活码R\x0eactivationCodeB\x0e\n" +
	"\f_operator_id\"\x82\x02\n" +
	"\x0fLockUserRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12'\n" +
	"\auser_id\x18\x02 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x12*\n" +
	"\x06reason\x18\x03 \x01(\tB\x12\xbaG\x0f\x92\x02\f锁定原因R\x06reason\x12L\n" +
	"\rlock_duration\x18\x04 \x01(\rB'\xbaG$\x92\x02!锁定时长(秒，0表示永久)R\flockDurationB\x0e\n" +
	"\f_operator_id\"\xb6\x01\n" +
	"\x11UnlockUserRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12'\n" +
	"\auser_id\x18\x02 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x12*\n" +
	"\x06reason\x18\x03 \x01(\tB\x12\xbaG\x0f\x92\x02\f解锁原因R\x06reasonB\x0e\n" +
	"\f_operator_id\"\xb7\x01\n" +
	"\x12DisableUserRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12'\n" +
	"\auser_id\x18\x02 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x12*\n" +
	"\x06reason\x18\x03 \x01(\tB\x12\xbaG\x0f\x92\x02\f禁用原因R\x06reasonB\x0e\n" +
	"\f_operator_id\"\xb6\x01\n" +
	"\x11EnableUserRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12'\n" +
	"\auser_id\x18\x02 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x12*\n" +
	"\x06reason\x18\x03 \x01(\tB\x12\xbaG\x0f\x92\x02\f启用原因R\x06reasonB\x0e\n" +
	"\f_operator_id\"I\n" +
	"\x1eVerifyUserAccountStatusRequest\x12'\n" +
	"\auser_id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\"\xb0\x02\n" +
	"\x1fVerifyUserAccountStatusResponse\x12R\n" +
	"\x06status\x18\x01 \x01(\x0e2&.api.user.service.v1.UserAccountStatusB\x12\xbaG\x0f\x92\x02\f账户状态R\x06status\x125\n" +
	"\tcan_login\x18\x02 \x01(\bB\x18\xbaG\x15\x92\x02\x12是否可以登录R\bcanLogin\x12$\n" +
	"\x06reason\x18\x03 \x01(\tB\f\xbaG\t\x92\x02\x06原因R\x06reason\x12\\\n" +
	"\x0flock_expires_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x18\xbaG\x15\x92\x02\x12锁定过期时间R\rlockExpiresAt\"\x9f\b\n" +
	"\x12UserSecurityPolicy\x12'\n" +
	"\auser_id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x12V\n" +
	"\x17password_expiry_enabled\x18\x02 \x01(\bB\x1e\xbaG\x1b\x92\x02\x18是否启用密码过期R\x15passwordExpiryEnabled\x12J\n" +
	"\x14password_expiry_days\x18\x03 \x01(\rB\x18\xbaG\x15\x92\x02\x12密码过期天数R\x12passwordExpiryDays\x12X\n" +
	"\x18password_history_enabled\x18\x04 \x01(\bB\x1e\xbaG\x1b\x92\x02\x18是否启用密码历史R\x16passwordHistoryEnabled\x12N\n" +
	"\x16password_history_count\x18\x05 \x01(\rB\x18\xbaG\x15\x92\x02\x12密码历史数量R\x14passwordHistoryCount\x12V\n" +
	"\x17account_lockout_enabled\x18\x06 \x01(\bB\x1e\xbaG\x1b\x92\x02\x18是否启用账户锁定R\x15accountLockoutEnabled\x12T\n" +
	"\x19account_lockout_threshold\x18\a \x01(\rB\x18\xbaG\x15\x92\x02\x12账户锁定阈值R\x17accountLockoutThreshold\x12W\n" +
	"\x18account_lockout_duration\x18\b \x01(\rB\x1d\xbaG\x1a\x92\x02\x17账户锁定时长(秒)R\x16accountLockoutDuration\x12Q\n" +
	"\x13two_factor_required\x18\t \x01(\bB!\xbaG\x1e\x92\x02\x1b是否要求双因素认证R\x11twoFactorRequired\x12C\n" +
	"\x11allowed_ip_ranges\x18\n" +
	" \x03(\tB\x17\xbaG\x14\x92\x02\x11允许的IP范围R\x0fallowedIpRanges\x12>\n" +
	"\x0fallowed_devices\x18\v \x03(\tB\x15\xbaG\x12\x92\x02\x0f允许的设备R\x0eallowedDevices\x12^\n" +
	"\x1bconcurrent_sessions_limited\x18\f \x01(\bB\x1e\xbaG\x1b\x92\x02\x18是否限制并发会话R\x19concurrentSessionsLimited\x12S\n" +
	"\x17max_concurrent_sessions\x18\r \x01(\rB\x1b\xbaG\x18\x92\x02\x15最大并发会话数R\x15maxConcurrentSessions\"G\n" +
	"\x1cGetUserSecurityPolicyRequest\x12'\n" +
	"\auser_id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\"\xed\x01\n" +
	"\x1fUpdateUserSecurityPolicyRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12'\n" +
	"\auser_id\x18\x02 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x12S\n" +
	"\x06policy\x18\x03 \x01(\v2'.api.user.service.v1.UserSecurityPolicyB\x12\xbaG\x0f\x92\x02\f安全策略R\x06policyB\x0e\n" +
	"\f_operator_id\"\xdf\x03\n" +
	"\x0fUserActivityLog\x12%\n" +
	"\x06log_id\x18\x01 \x01(\tB\x0e\xbaG\v\x92\x02\b日志IDR\x05logId\x12'\n" +
	"\auser_id\x18\x02 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x127\n" +
	"\ractivity_type\x18\x03 \x01(\tB\x12\xbaG\x0f\x92\x02\f活动类型R\factivityType\x12.\n" +
	"\tclient_ip\x18\x04 \x01(\tB\x11\xbaG\x0e\x92\x02\v客户端IPR\bclientIp\x121\n" +
	"\n" +
	"user_agent\x18\x05 \x01(\tB\x12\xbaG\x0f\x92\x02\f用户代理R\tuserAgent\x12I\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x0f\xbaG\f\x92\x02\t时间戳R\ttimestamp\x12Y\n" +
	"\adetails\x18\a \x03(\v21.api.user.service.v1.UserActivityLog.DetailsEntryB\f\xbaG\t\x92\x02\x06详情R\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xec\x02\n" +
	"\x1aGetUserActivityLogsRequest\x12'\n" +
	"\auser_id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x12R\n" +
	"\x06paging\x18\x02 \x01(\v2&.pkg.utils.pagination.v1.PagingRequestB\x12\xbaG\x0f\x92\x02\f分页请求R\x06paging\x127\n" +
	"\ractivity_type\x18\x03 \x01(\tB\x12\xbaG\x0f\x92\x02\f活动类型R\factivityType\x12M\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f开始时间R\tstartTime\x12I\n" +
	"\bend_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f结束时间R\aendTime\"\xc0\x01\n" +
	"\x1bGetUserActivityLogsResponse\x12S\n" +
	"\x06paging\x18\x01 \x01(\v2'.pkg.utils.pagination.v1.PagingResponseB\x12\xbaG\x0f\x92\x02\f分页响应R\x06paging\x12L\n" +
	"\x04logs\x18\x02 \x03(\v2$.api.user.service.v1.UserActivityLogB\x12\xbaG\x0f\x92\x02\f日志列表R\x04logs*h\n" +
	"\x14VerifyPasswordResult\x12\v\n" +
	"\aSUCCESS\x10\x00\x12\x16\n" +
	"\x12ACCOUNT_NOT_EXISTS\x10\x01\x12\x12\n" +
	"\x0eWRONG_PASSWORD\x10\x02\x12\n" +
	"\n" +
	"\x06FREEZE\x10\x03\x12\v\n" +
	"\aDELETED\x10\x04*e\n" +
	"\rUserAuthority\x12\r\n" +
	"\tSYS_ADMIN\x10\x00\x12\x0f\n" +
	"\vSYS_MANAGER\x10\x01\x12\x11\n" +
	"\rCUSTOMER_USER\x10\x02\x12\x0e\n" +
	"\n" +
	"GUEST_USER\x10\x03\x12\x11\n" +
	"\rREFRESH_TOKEN\x10\x04*.\n" +
	"\n" +
	"UserGender\x12\n" +
	"\n" +
	"\x06SECRET\x10\x00\x12\b\n" +
	"\x04MALE\x10\x01\x12\n" +
	"\n" +
	"\x06FEMALE\x10\x02*\\\n" +
	"\x11UserAccountStatus\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x00\x12\f\n" +
	"\bINACTIVE\x10\x01\x12\n" +
	"\n" +
	"\x06LOCKED\x10\x02\x12\f\n" +
	"\bDISABLED\x10\x03\x12\x13\n" +
	"\x0fACCOUNT_DELETED\x10\x042\xc2\x16\n" +
	"\vUserService\x12[\n" +
	"\bListUser\x12&.pkg.utils.pagination.v1.PagingRequest\x1a%.api.user.service.v1.ListUserResponse\"\x00\x12K\n" +
	"\aGetUser\x12#.api.user.service.v1.GetUserRequest\x1a\x19.api.user.service.v1.User\"\x00\x12w\n" +
	"\x12BatchGetUsersByIds\x12..api.user.service.v1.BatchGetUsersByIdsRequest\x1a/.api.user.service.v1.BatchGetUsersByIdsResponse\"\x00\x12_\n" +
	"\n" +
	"CreateUser\x12&.api.user.service.v1.CreateUserRequest\x1a'.api.user.service.v1.CreateUserResponse\"\x00\x12N\n" +
	"\n" +
	"UpdateUser\x12&.api.user.service.v1.UpdateUserRequest\x1a\x16.google.protobuf.Empty\"\x00\x12N\n" +
	"\n" +
	"DeleteUser\x12&.api.user.service.v1.DeleteUserRequest\x1a\x16.google.protobuf.Empty\"\x00\x12_\n" +
	"\x11GetUserByUserName\x12-.api.user.service.v1.GetUserByUserNameRequest\x1a\x19.api.user.service.v1.User\"\x00\x12k\n" +
	"\x0eVerifyPassword\x12*.api.user.service.v1.VerifyPasswordRequest\x1a+.api.user.service.v1.VerifyPasswordResponse\"\x00\x12_\n" +
	"\n" +
	"UserExists\x12&.api.user.service.v1.UserExistsRequest\x1a'.api.user.service.v1.UserExistsResponse\"\x00\x12e\n" +
	"\fGetUserRoles\x12(.api.user.service.v1.GetUserRolesRequest\x1a).api.user.service.v1.GetUserRolesResponse\"\x00\x12X\n" +
	"\x0fAssignUserRoles\x12+.api.user.service.v1.AssignUserRolesRequest\x1a\x16.google.protobuf.Empty\"\x00\x12X\n" +
	"\x0fRevokeUserRoles\x12+.api.user.service.v1.RevokeUserRolesRequest\x1a\x16.google.protobuf.Empty\"\x00\x12V\n" +
	"\x0eChangePassword\x12*.api.user.service.v1.ChangePasswordRequest\x1a\x16.google.protobuf.Empty\"\x00\x12h\n" +
	"\rResetPassword\x12).api.user.service.v1.ResetPasswordRequest\x1a*.api.user.service.v1.ResetPasswordResponse\"\x00\x12\x92\x01\n" +
	"\x1bGetUserEffectivePermissions\x127.api.user.service.v1.GetUserEffectivePermissionsRequest\x1a8.api.user.service.v1.GetUserEffectivePermissionsResponse\"\x00\x12z\n" +
	"\x13CheckUserPermission\x12/.api.user.service.v1.CheckUserPermissionRequest\x1a0.api.user.service.v1.CheckUserPermissionResponse\"\x00\x12j\n" +
	"\x18ClearUserPermissionCache\x124.api.user.service.v1.ClearUserPermissionCacheRequest\x1a\x16.google.protobuf.Empty\"\x00\x12z\n" +
	"\x13GetUserDynamicRoles\x12/.api.user.service.v1.GetUserDynamicRolesRequest\x1a0.api.user.service.v1.GetUserDynamicRolesResponse\"\x00\x12\x8f\x01\n" +
	"\x1aGetUserPermissionAuditLogs\x126.api.user.service.v1.GetUserPermissionAuditLogsRequest\x1a7.api.user.service.v1.GetUserPermissionAuditLogsResponse\"\x00\x12R\n" +
	"\fActivateUser\x12(.api.user.service.v1.ActivateUserRequest\x1a\x16.google.protobuf.Empty\"\x00\x12J\n" +
	"\bLockUser\x12$.api.user.service.v1.LockUserRequest\x1a\x16.google.protobuf.Empty\"\x00\x12N\n" +
	"\n" +
	"UnlockUser\x12&.api.user.service.v1.UnlockUserRequest\x1a\x16.google.protobuf.Empty\"\x00\x12P\n" +
	"\vDisableUser\x12'.api.user.service.v1.DisableUserRequest\x1a\x16.google.protobuf.Empty\"\x00\x12N\n" +
	"\n" +
	"EnableUser\x12&.api.user.service.v1.EnableUserRequest\x1a\x16.google.protobuf.Empty\"\x00\x12\x86\x01\n" +
	"\x17VerifyUserAccountStatus\x123.api.user.service.v1.VerifyUserAccountStatusRequest\x1a4.api.user.service.v1.VerifyUserAccountStatusResponse\"\x00\x12u\n" +
	"\x15GetUserSecurityPolicy\x121.api.user.service.v1.GetUserSecurityPolicyRequest\x1a'.api.user.service.v1.UserSecurityPolicy\"\x00\x12j\n" +
	"\x18UpdateUserSecurityPolicy\x124.api.user.service.v1.UpdateUserSecurityPolicyRequest\x1a\x16.google.protobuf.Empty\"\x00\x12z\n" +
	"\x13GetUserActivityLogs\x12/.api.user.service.v1.GetUserActivityLogsRequest\x1a0.api.user.service.v1.GetUserActivityLogsResponse\"\x00B;\n" +
	"\x13api.user.service.v1P\x01Z\"om-platform/api/user/service/v1;v1b\x06proto3"

var (
	file_api_user_service_v1_user_proto_rawDescOnce sync.Once
	file_api_user_service_v1_user_proto_rawDescData []byte
)

func file_api_user_service_v1_user_proto_rawDescGZIP() []byte {
	file_api_user_service_v1_user_proto_rawDescOnce.Do(func() {
		file_api_user_service_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_user_service_v1_user_proto_rawDesc), len(file_api_user_service_v1_user_proto_rawDesc)))
	})
	return file_api_user_service_v1_user_proto_rawDescData
}

var file_api_user_service_v1_user_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_user_service_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_api_user_service_v1_user_proto_goTypes = []any{
	(VerifyPasswordResult)(0),                   // 0: api.user.service.v1.VerifyPasswordResult
	(UserAuthority)(0),                          // 1: api.user.service.v1.UserAuthority
	(UserGender)(0),                             // 2: api.user.service.v1.UserGender
	(UserAccountStatus)(0),                      // 3: api.user.service.v1.UserAccountStatus
	(*User)(nil),                                // 4: api.user.service.v1.User
	(*ListUserResponse)(nil),                    // 5: api.user.service.v1.ListUserResponse
	(*GetUserRequest)(nil),                      // 6: api.user.service.v1.GetUserRequest
	(*BatchGetUsersByIdsRequest)(nil),           // 7: api.user.service.v1.BatchGetUsersByIdsRequest
	(*BatchGetUsersByIdsResponse)(nil),          // 8: api.user.service.v1.BatchGetUsersByIdsResponse
	(*GetUserByUserNameRequest)(nil),            // 9: api.user.service.v1.GetUserByUserNameRequest
	(*CreateUserRequest)(nil),                   // 10: api.user.service.v1.CreateUserRequest
	(*UpdateUserRequest)(nil),                   // 11: api.user.service.v1.UpdateUserRequest
	(*CreateUserResponse)(nil),                  // 12: api.user.service.v1.CreateUserResponse
	(*DeleteUserRequest)(nil),                   // 13: api.user.service.v1.DeleteUserRequest
	(*VerifyPasswordRequest)(nil),               // 14: api.user.service.v1.VerifyPasswordRequest
	(*VerifyPasswordResponse)(nil),              // 15: api.user.service.v1.VerifyPasswordResponse
	(*UserExistsRequest)(nil),                   // 16: api.user.service.v1.UserExistsRequest
	(*UserExistsResponse)(nil),                  // 17: api.user.service.v1.UserExistsResponse
	(*GetUserRolesRequest)(nil),                 // 18: api.user.service.v1.GetUserRolesRequest
	(*UserRole)(nil),                            // 19: api.user.service.v1.UserRole
	(*GetUserRolesResponse)(nil),                // 20: api.user.service.v1.GetUserRolesResponse
	(*AssignUserRolesRequest)(nil),              // 21: api.user.service.v1.AssignUserRolesRequest
	(*RevokeUserRolesRequest)(nil),              // 22: api.user.service.v1.RevokeUserRolesRequest
	(*ChangePasswordRequest)(nil),               // 23: api.user.service.v1.ChangePasswordRequest
	(*ResetPasswordRequest)(nil),                // 24: api.user.service.v1.ResetPasswordRequest
	(*ResetPasswordResponse)(nil),               // 25: api.user.service.v1.ResetPasswordResponse
	(*GetUserEffectivePermissionsRequest)(nil),  // 26: api.user.service.v1.GetUserEffectivePermissionsRequest
	(*GetUserEffectivePermissionsResponse)(nil), // 27: api.user.service.v1.GetUserEffectivePermissionsResponse
	(*CheckUserPermissionRequest)(nil),          // 28: api.user.service.v1.CheckUserPermissionRequest
	(*CheckUserPermissionResponse)(nil),         // 29: api.user.service.v1.CheckUserPermissionResponse
	(*ClearUserPermissionCacheRequest)(nil),     // 30: api.user.service.v1.ClearUserPermissionCacheRequest
	(*GetUserDynamicRolesRequest)(nil),          // 31: api.user.service.v1.GetUserDynamicRolesRequest
	(*GetUserDynamicRolesResponse)(nil),         // 32: api.user.service.v1.GetUserDynamicRolesResponse
	(*GetUserPermissionAuditLogsRequest)(nil),   // 33: api.user.service.v1.GetUserPermissionAuditLogsRequest
	(*GetUserPermissionAuditLogsResponse)(nil),  // 34: api.user.service.v1.GetUserPermissionAuditLogsResponse
	(*ActivateUserRequest)(nil),                 // 35: api.user.service.v1.ActivateUserRequest
	(*LockUserRequest)(nil),                     // 36: api.user.service.v1.LockUserRequest
	(*UnlockUserRequest)(nil),                   // 37: api.user.service.v1.UnlockUserRequest
	(*DisableUserRequest)(nil),                  // 38: api.user.service.v1.DisableUserRequest
	(*EnableUserRequest)(nil),                   // 39: api.user.service.v1.EnableUserRequest
	(*VerifyUserAccountStatusRequest)(nil),      // 40: api.user.service.v1.VerifyUserAccountStatusRequest
	(*VerifyUserAccountStatusResponse)(nil),     // 41: api.user.service.v1.VerifyUserAccountStatusResponse
	(*UserSecurityPolicy)(nil),                  // 42: api.user.service.v1.UserSecurityPolicy
	(*GetUserSecurityPolicyRequest)(nil),        // 43: api.user.service.v1.GetUserSecurityPolicyRequest
	(*UpdateUserSecurityPolicyRequest)(nil),     // 44: api.user.service.v1.UpdateUserSecurityPolicyRequest
	(*UserActivityLog)(nil),                     // 45: api.user.service.v1.UserActivityLog
	(*GetUserActivityLogsRequest)(nil),          // 46: api.user.service.v1.GetUserActivityLogsRequest
	(*GetUserActivityLogsResponse)(nil),         // 47: api.user.service.v1.GetUserActivityLogsResponse
	nil,                                         // 48: api.user.service.v1.User.MetadataEntry
	nil,                                         // 49: api.user.service.v1.GetUserEffectivePermissionsResponse.PermissionMapEntry
	nil,                                         // 50: api.user.service.v1.CheckUserPermissionRequest.ContextEntry
	nil,                                         // 51: api.user.service.v1.GetUserDynamicRolesRequest.ContextEntry
	nil,                                         // 52: api.user.service.v1.GetUserDynamicRolesResponse.ConditionResultsEntry
	nil,                                         // 53: api.user.service.v1.UserActivityLog.DetailsEntry
	(*timestamppb.Timestamp)(nil),               // 54: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),               // 55: google.protobuf.FieldMask
	(*Permission)(nil),                          // 56: api.user.service.v1.Permission
	(*Role)(nil),                                // 57: api.user.service.v1.Role
	(*OperationLog)(nil),                        // 58: api.user.service.v1.OperationLog
	(*v1.PagingRequest)(nil),                    // 59: pkg.utils.pagination.v1.PagingRequest
	(*v1.PagingResponse)(nil),                   // 60: pkg.utils.pagination.v1.PagingResponse
	(*emptypb.Empty)(nil),                       // 61: google.protobuf.Empty
}
var file_api_user_service_v1_user_proto_depIdxs = []int32{
	2,  // 0: api.user.service.v1.User.gender:type_name -> api.user.service.v1.UserGender
	3,  // 1: api.user.service.v1.User.status:type_name -> api.user.service.v1.UserAccountStatus
	1,  // 2: api.user.service.v1.User.authority:type_name -> api.user.service.v1.UserAuthority
	3,  // 3: api.user.service.v1.User.account_status:type_name -> api.user.service.v1.UserAccountStatus
	54, // 4: api.user.service.v1.User.last_password_change_time:type_name -> google.protobuf.Timestamp
	54, // 5: api.user.service.v1.User.lock_expires_at:type_name -> google.protobuf.Timestamp
	48, // 6: api.user.service.v1.User.metadata:type_name -> api.user.service.v1.User.MetadataEntry
	54, // 7: api.user.service.v1.User.create_time:type_name -> google.protobuf.Timestamp
	54, // 8: api.user.service.v1.User.update_time:type_name -> google.protobuf.Timestamp
	54, // 9: api.user.service.v1.User.delete_time:type_name -> google.protobuf.Timestamp
	4,  // 10: api.user.service.v1.ListUserResponse.items:type_name -> api.user.service.v1.User
	4,  // 11: api.user.service.v1.BatchGetUsersByIdsResponse.users:type_name -> api.user.service.v1.User
	4,  // 12: api.user.service.v1.CreateUserRequest.data:type_name -> api.user.service.v1.User
	3,  // 13: api.user.service.v1.CreateUserRequest.initial_status:type_name -> api.user.service.v1.UserAccountStatus
	42, // 14: api.user.service.v1.CreateUserRequest.security_policy:type_name -> api.user.service.v1.UserSecurityPolicy
	4,  // 15: api.user.service.v1.UpdateUserRequest.data:type_name -> api.user.service.v1.User
	55, // 16: api.user.service.v1.UpdateUserRequest.update_mask:type_name -> google.protobuf.FieldMask
	54, // 17: api.user.service.v1.CreateUserResponse.created_at:type_name -> google.protobuf.Timestamp
	0,  // 18: api.user.service.v1.VerifyPasswordResponse.result:type_name -> api.user.service.v1.VerifyPasswordResult
	19, // 19: api.user.service.v1.GetUserRolesResponse.roles:type_name -> api.user.service.v1.UserRole
	56, // 20: api.user.service.v1.GetUserEffectivePermissionsResponse.permissions:type_name -> api.user.service.v1.Permission
	49, // 21: api.user.service.v1.GetUserEffectivePermissionsResponse.permission_map:type_name -> api.user.service.v1.GetUserEffectivePermissionsResponse.PermissionMapEntry
	50, // 22: api.user.service.v1.CheckUserPermissionRequest.context:type_name -> api.user.service.v1.CheckUserPermissionRequest.ContextEntry
	51, // 23: api.user.service.v1.GetUserDynamicRolesRequest.context:type_name -> api.user.service.v1.GetUserDynamicRolesRequest.ContextEntry
	57, // 24: api.user.service.v1.GetUserDynamicRolesResponse.roles:type_name -> api.user.service.v1.Role
	52, // 25: api.user.service.v1.GetUserDynamicRolesResponse.condition_results:type_name -> api.user.service.v1.GetUserDynamicRolesResponse.ConditionResultsEntry
	54, // 26: api.user.service.v1.GetUserPermissionAuditLogsRequest.start_time:type_name -> google.protobuf.Timestamp
	54, // 27: api.user.service.v1.GetUserPermissionAuditLogsRequest.end_time:type_name -> google.protobuf.Timestamp
	58, // 28: api.user.service.v1.GetUserPermissionAuditLogsResponse.logs:type_name -> api.user.service.v1.OperationLog
	3,  // 29: api.user.service.v1.VerifyUserAccountStatusResponse.status:type_name -> api.user.service.v1.UserAccountStatus
	54, // 30: api.user.service.v1.VerifyUserAccountStatusResponse.lock_expires_at:type_name -> google.protobuf.Timestamp
	42, // 31: api.user.service.v1.UpdateUserSecurityPolicyRequest.policy:type_name -> api.user.service.v1.UserSecurityPolicy
	54, // 32: api.user.service.v1.UserActivityLog.timestamp:type_name -> google.protobuf.Timestamp
	53, // 33: api.user.service.v1.UserActivityLog.details:type_name -> api.user.service.v1.UserActivityLog.DetailsEntry
	59, // 34: api.user.service.v1.GetUserActivityLogsRequest.paging:type_name -> pkg.utils.pagination.v1.PagingRequest
	54, // 35: api.user.service.v1.GetUserActivityLogsRequest.start_time:type_name -> google.protobuf.Timestamp
	54, // 36: api.user.service.v1.GetUserActivityLogsRequest.end_time:type_name -> google.protobuf.Timestamp
	60, // 37: api.user.service.v1.GetUserActivityLogsResponse.paging:type_name -> pkg.utils.pagination.v1.PagingResponse
	45, // 38: api.user.service.v1.GetUserActivityLogsResponse.logs:type_name -> api.user.service.v1.UserActivityLog
	59, // 39: api.user.service.v1.UserService.ListUser:input_type -> pkg.utils.pagination.v1.PagingRequest
	6,  // 40: api.user.service.v1.UserService.GetUser:input_type -> api.user.service.v1.GetUserRequest
	7,  // 41: api.user.service.v1.UserService.BatchGetUsersByIds:input_type -> api.user.service.v1.BatchGetUsersByIdsRequest
	10, // 42: api.user.service.v1.UserService.CreateUser:input_type -> api.user.service.v1.CreateUserRequest
	11, // 43: api.user.service.v1.UserService.UpdateUser:input_type -> api.user.service.v1.UpdateUserRequest
	13, // 44: api.user.service.v1.UserService.DeleteUser:input_type -> api.user.service.v1.DeleteUserRequest
	9,  // 45: api.user.service.v1.UserService.GetUserByUserName:input_type -> api.user.service.v1.GetUserByUserNameRequest
	14, // 46: api.user.service.v1.UserService.VerifyPassword:input_type -> api.user.service.v1.VerifyPasswordRequest
	16, // 47: api.user.service.v1.UserService.UserExists:input_type -> api.user.service.v1.UserExistsRequest
	18, // 48: api.user.service.v1.UserService.GetUserRoles:input_type -> api.user.service.v1.GetUserRolesRequest
	21, // 49: api.user.service.v1.UserService.AssignUserRoles:input_type -> api.user.service.v1.AssignUserRolesRequest
	22, // 50: api.user.service.v1.UserService.RevokeUserRoles:input_type -> api.user.service.v1.RevokeUserRolesRequest
	23, // 51: api.user.service.v1.UserService.ChangePassword:input_type -> api.user.service.v1.ChangePasswordRequest
	24, // 52: api.user.service.v1.UserService.ResetPassword:input_type -> api.user.service.v1.ResetPasswordRequest
	26, // 53: api.user.service.v1.UserService.GetUserEffectivePermissions:input_type -> api.user.service.v1.GetUserEffectivePermissionsRequest
	28, // 54: api.user.service.v1.UserService.CheckUserPermission:input_type -> api.user.service.v1.CheckUserPermissionRequest
	30, // 55: api.user.service.v1.UserService.ClearUserPermissionCache:input_type -> api.user.service.v1.ClearUserPermissionCacheRequest
	31, // 56: api.user.service.v1.UserService.GetUserDynamicRoles:input_type -> api.user.service.v1.GetUserDynamicRolesRequest
	33, // 57: api.user.service.v1.UserService.GetUserPermissionAuditLogs:input_type -> api.user.service.v1.GetUserPermissionAuditLogsRequest
	35, // 58: api.user.service.v1.UserService.ActivateUser:input_type -> api.user.service.v1.ActivateUserRequest
	36, // 59: api.user.service.v1.UserService.LockUser:input_type -> api.user.service.v1.LockUserRequest
	37, // 60: api.user.service.v1.UserService.UnlockUser:input_type -> api.user.service.v1.UnlockUserRequest
	38, // 61: api.user.service.v1.UserService.DisableUser:input_type -> api.user.service.v1.DisableUserRequest
	39, // 62: api.user.service.v1.UserService.EnableUser:input_type -> api.user.service.v1.EnableUserRequest
	40, // 63: api.user.service.v1.UserService.VerifyUserAccountStatus:input_type -> api.user.service.v1.VerifyUserAccountStatusRequest
	43, // 64: api.user.service.v1.UserService.GetUserSecurityPolicy:input_type -> api.user.service.v1.GetUserSecurityPolicyRequest
	44, // 65: api.user.service.v1.UserService.UpdateUserSecurityPolicy:input_type -> api.user.service.v1.UpdateUserSecurityPolicyRequest
	46, // 66: api.user.service.v1.UserService.GetUserActivityLogs:input_type -> api.user.service.v1.GetUserActivityLogsRequest
	5,  // 67: api.user.service.v1.UserService.ListUser:output_type -> api.user.service.v1.ListUserResponse
	4,  // 68: api.user.service.v1.UserService.GetUser:output_type -> api.user.service.v1.User
	8,  // 69: api.user.service.v1.UserService.BatchGetUsersByIds:output_type -> api.user.service.v1.BatchGetUsersByIdsResponse
	12, // 70: api.user.service.v1.UserService.CreateUser:output_type -> api.user.service.v1.CreateUserResponse
	61, // 71: api.user.service.v1.UserService.UpdateUser:output_type -> google.protobuf.Empty
	61, // 72: api.user.service.v1.UserService.DeleteUser:output_type -> google.protobuf.Empty
	4,  // 73: api.user.service.v1.UserService.GetUserByUserName:output_type -> api.user.service.v1.User
	15, // 74: api.user.service.v1.UserService.VerifyPassword:output_type -> api.user.service.v1.VerifyPasswordResponse
	17, // 75: api.user.service.v1.UserService.UserExists:output_type -> api.user.service.v1.UserExistsResponse
	20, // 76: api.user.service.v1.UserService.GetUserRoles:output_type -> api.user.service.v1.GetUserRolesResponse
	61, // 77: api.user.service.v1.UserService.AssignUserRoles:output_type -> google.protobuf.Empty
	61, // 78: api.user.service.v1.UserService.RevokeUserRoles:output_type -> google.protobuf.Empty
	61, // 79: api.user.service.v1.UserService.ChangePassword:output_type -> google.protobuf.Empty
	25, // 80: api.user.service.v1.UserService.ResetPassword:output_type -> api.user.service.v1.ResetPasswordResponse
	27, // 81: api.user.service.v1.UserService.GetUserEffectivePermissions:output_type -> api.user.service.v1.GetUserEffectivePermissionsResponse
	29, // 82: api.user.service.v1.UserService.CheckUserPermission:output_type -> api.user.service.v1.CheckUserPermissionResponse
	61, // 83: api.user.service.v1.UserService.ClearUserPermissionCache:output_type -> google.protobuf.Empty
	32, // 84: api.user.service.v1.UserService.GetUserDynamicRoles:output_type -> api.user.service.v1.GetUserDynamicRolesResponse
	34, // 85: api.user.service.v1.UserService.GetUserPermissionAuditLogs:output_type -> api.user.service.v1.GetUserPermissionAuditLogsResponse
	61, // 86: api.user.service.v1.UserService.ActivateUser:output_type -> google.protobuf.Empty
	61, // 87: api.user.service.v1.UserService.LockUser:output_type -> google.protobuf.Empty
	61, // 88: api.user.service.v1.UserService.UnlockUser:output_type -> google.protobuf.Empty
	61, // 89: api.user.service.v1.UserService.DisableUser:output_type -> google.protobuf.Empty
	61, // 90: api.user.service.v1.UserService.EnableUser:output_type -> google.protobuf.Empty
	41, // 91: api.user.service.v1.UserService.VerifyUserAccountStatus:output_type -> api.user.service.v1.VerifyUserAccountStatusResponse
	42, // 92: api.user.service.v1.UserService.GetUserSecurityPolicy:output_type -> api.user.service.v1.UserSecurityPolicy
	61, // 93: api.user.service.v1.UserService.UpdateUserSecurityPolicy:output_type -> google.protobuf.Empty
	47, // 94: api.user.service.v1.UserService.GetUserActivityLogs:output_type -> api.user.service.v1.GetUserActivityLogsResponse
	67, // [67:95] is the sub-list for method output_type
	39, // [39:67] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_api_user_service_v1_user_proto_init() }
func file_api_user_service_v1_user_proto_init() {
	if File_api_user_service_v1_user_proto != nil {
		return
	}
	file_api_user_service_v1_permission_proto_init()
	file_api_user_service_v1_role_proto_init()
	file_api_user_service_v1_operation_log_proto_init()
	file_api_user_service_v1_user_proto_msgTypes[0].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[6].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[7].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[8].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[9].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[17].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[18].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[19].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[20].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[22].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[26].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[29].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[31].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[32].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[33].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[34].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[35].OneofWrappers = []any{}
	file_api_user_service_v1_user_proto_msgTypes[40].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_user_service_v1_user_proto_rawDesc), len(file_api_user_service_v1_user_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_user_service_v1_user_proto_goTypes,
		DependencyIndexes: file_api_user_service_v1_user_proto_depIdxs,
		EnumInfos:         file_api_user_service_v1_user_proto_enumTypes,
		MessageInfos:      file_api_user_service_v1_user_proto_msgTypes,
	}.Build()
	File_api_user_service_v1_user_proto = out.File
	file_api_user_service_v1_user_proto_goTypes = nil
	file_api_user_service_v1_user_proto_depIdxs = nil
}
