syntax = "proto3";

package api.user.service.v1;

import "google/protobuf/timestamp.proto";
import "gnostic/openapi/v3/annotations.proto";

option go_package = "om-platform/api/user/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.user.service.v1";

// 用户状态（基本状态）
enum UserAccountStatus {
  USER_ACCOUNT_OFF = 0; // 禁用
  USER_ACCOUNT_ON = 1;  // 启用
}

// 用户权限级别
enum UserAuthority {
  SYS_ADMIN = 0;     // 系统超级用户
  SYS_MANAGER = 1;   // 系统管理员
  CUSTOMER_USER = 2; // 普通用户
  GUEST_USER = 3;    // 游客
  REFRESH_TOKEN = 4; // 刷新令牌
}

// 用户性别
enum UserGender {
  SECRET = 0; // 未知
  MALE = 1;   // 男性
  FEMALE = 2; // 女性
}

// 基础审计信息
// 用于记录数据创建和更新的相关信息
message AuditInfo {
  uint32 create_by = 1 [json_name = "createBy", (gnostic.openapi.v3.property) = {description: "创建者ID"}];  // 创建者ID
  google.protobuf.Timestamp create_time = 2 [json_name = "createTime", (gnostic.openapi.v3.property) = {description: "创建时间"}];  // 创建时间
  uint32 update_by = 3 [json_name = "updateBy", (gnostic.openapi.v3.property) = {description: "更新者ID"}];  // 更新者ID
  google.protobuf.Timestamp update_time = 4 [json_name = "updateTime", (gnostic.openapi.v3.property) = {description: "更新时间"}];  // 更新时间
}

// 基础租户信息
// 用于多租户系统中标识租户身份
message TenantInfo {
  uint32 tenant_id = 1 [json_name = "tenantId", (gnostic.openapi.v3.property) = {description: "租户ID"}];  // 租户ID
  string tenant_name = 2 [json_name = "tenantName", (gnostic.openapi.v3.property) = {description: "租户名称"}];  // 租户名称
}

// 基础用户身份信息
// 用于在各服务间传递用户基本身份标识
message UserIdentity {
  uint32 user_id = 1 [json_name = "userId", (gnostic.openapi.v3.property) = {description: "用户ID"}];  // 用户ID
  string user_name = 2 [json_name = "userName", (gnostic.openapi.v3.property) = {description: "用户名"}];  // 用户名
  string real_name = 3 [json_name = "realName", (gnostic.openapi.v3.property) = {description: "真实姓名"}];  // 真实姓名
  UserAuthority authority = 4 [json_name = "authority", (gnostic.openapi.v3.property) = {description: "权限级别"}];  // 权限级别
}

// 操作结果状态码
enum ResultCode {
  SUCCESS = 0;                // 成功
  FAILED = 1;                 // 失败
  UNAUTHORIZED = 2;           // 未授权
  FORBIDDEN = 3;              // 禁止访问
  NOT_FOUND = 4;              // 资源不存在
  ALREADY_EXISTS = 5;         // 资源已存在
  INVALID_ARGUMENT = 6;       // 参数无效
  INTERNAL_ERROR = 7;         // 内部错误
  SERVICE_UNAVAILABLE = 8;    // 服务不可用
}

// 通用响应头
// 用于在响应消息中包含统一的元数据
message ResponseHeader {
  ResultCode code = 1 [json_name = "code", (gnostic.openapi.v3.property) = {description: "结果状态码"}];  // 结果状态码
  string message = 2 [json_name = "message", (gnostic.openapi.v3.property) = {description: "结果描述信息"}];  // 结果描述信息
  string request_id = 3 [json_name = "requestId", (gnostic.openapi.v3.property) = {description: "请求ID"}];  // 请求ID
  google.protobuf.Timestamp timestamp = 4 [json_name = "timestamp", (gnostic.openapi.v3.property) = {description: "响应时间戳"}];  // 响应时间戳
}