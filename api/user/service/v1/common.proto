syntax = "proto3";

package api.user.service.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/field_mask.proto";
import "gnostic/openapi/v3/annotations.proto";

option go_package = "om-platform/api/user/service/v1;userv1";
option java_multiple_files = true;
option java_package = "api.user.service.v1";

// 用户账户状态
// 统一用户状态定义，在UserService和AccountService中共享使用
enum UserAccountStatus {
  // 未指定状态
  USER_ACCOUNT_STATUS_UNSPECIFIED = 0 [
    (gnostic.openapi.v3.property) = {description: "未指定状态"}
  ];
  
  // 活跃状态，用户可以正常登录和使用系统
  USER_ACCOUNT_STATUS_ACTIVE = 1 [
    (gnostic.openapi.v3.property) = {description: "活跃状态，用户可以正常登录和使用系统"}
  ];
  
  // 未激活，用户账户已创建但尚未完成激活流程
  USER_ACCOUNT_STATUS_INACTIVE = 2 [
    (gnostic.openapi.v3.property) = {description: "未激活，用户账户已创建但尚未完成激活流程"}
  ];
  
  // 已锁定，由于安全原因（如多次密码错误）临时锁定
  USER_ACCOUNT_STATUS_LOCKED = 3 [
    (gnostic.openapi.v3.property) = {description: "已锁定，由于安全原因（如多次密码错误）临时锁定"}
  ];
  
  // 已禁用，管理员手动禁用的账户
  USER_ACCOUNT_STATUS_DISABLED = 4 [
    (gnostic.openapi.v3.property) = {description: "已禁用，管理员手动禁用的账户"}
  ];
  
  // 已删除，标记为已删除但未物理删除的账户
  USER_ACCOUNT_STATUS_DELETED = 5 [
    (gnostic.openapi.v3.property) = {description: "已删除，标记为已删除但未物理删除的账户"}
  ];
  
  // 已过期，账户有效期已过
  USER_ACCOUNT_STATUS_EXPIRED = 6 [
    (gnostic.openapi.v3.property) = {description: "已过期，账户有效期已过"}
  ];
}

// 用户权限级别
// 定义用户在系统中的权限等级，用于基础的权限控制
enum UserAuthority {
  // 未指定权限
  USER_AUTHORITY_UNSPECIFIED = 0 [
    (gnostic.openapi.v3.property) = {description: "未指定权限"}
  ];
  
  // 系统超级管理员，拥有所有权限
  USER_AUTHORITY_SUPER_ADMIN = 1 [
    (gnostic.openapi.v3.property) = {description: "系统超级管理员，拥有所有权限"}
  ];
  
  // 系统管理员，拥有大部分管理权限
  USER_AUTHORITY_ADMIN = 2 [
    (gnostic.openapi.v3.property) = {description: "系统管理员，拥有大部分管理权限"}
  ];
  
  // 普通用户，拥有基本操作权限
  USER_AUTHORITY_USER = 3 [
    (gnostic.openapi.v3.property) = {description: "普通用户，拥有基本操作权限"}
  ];
  
  // 游客，仅拥有只读权限
  USER_AUTHORITY_GUEST = 4 [
    (gnostic.openapi.v3.property) = {description: "游客，仅拥有只读权限"}
  ];
  
  // 刷新令牌，仅用于刷新访问令牌
  USER_AUTHORITY_REFRESH_TOKEN = 5 [
    (gnostic.openapi.v3.property) = {description: "刷新令牌，仅用于刷新访问令牌"}
  ];
  
  // 服务账户，用于系统间集成
  USER_AUTHORITY_SERVICE_ACCOUNT = 6 [
    (gnostic.openapi.v3.property) = {description: "服务账户，用于系统间集成"}
  ];
}

// 用户性别
enum UserGender {
  // 未指定
  USER_GENDER_UNSPECIFIED = 0 [
    (gnostic.openapi.v3.property) = {description: "未指定"}
  ];
  
  // 保密
  USER_GENDER_SECRET = 1 [
    (gnostic.openapi.v3.property) = {description: "保密"}
  ];
  
  // 男性
  USER_GENDER_MALE = 2 [
    (gnostic.openapi.v3.property) = {description: "男性"}
  ];
  
  // 女性
  USER_GENDER_FEMALE = 3 [
    (gnostic.openapi.v3.property) = {description: "女性"}
  ];
  
  // 其他
  USER_GENDER_OTHER = 4 [
    (gnostic.openapi.v3.property) = {description: "其他"}
  ];
}

// 基础审计信息
// 用于记录数据创建和更新的相关信息，可被其他消息类型复用
message AuditInfo {
  // 创建者ID
  optional uint32 create_by = 1 [
    json_name = "createBy", 
    (gnostic.openapi.v3.property) = {description: "创建者ID"}
  ];
  
  // 创建时间
  optional google.protobuf.Timestamp create_time = 2 [
    json_name = "createTime", 
    (gnostic.openapi.v3.property) = {description: "创建时间"}
  ];
  
  // 更新者ID
  optional uint32 update_by = 3 [
    json_name = "updateBy", 
    (gnostic.openapi.v3.property) = {description: "更新者ID"}
  ];
  
  // 更新时间
  optional google.protobuf.Timestamp update_time = 4 [
    json_name = "updateTime", 
    (gnostic.openapi.v3.property) = {description: "更新时间"}
  ];
}

// 基础租户信息
// 用于多租户系统中标识租户身份，支持SaaS模式下的租户隔离
message TenantInfo {
  // 租户ID
  optional uint32 tenant_id = 1 [
    json_name = "tenantId", 
    (gnostic.openapi.v3.property) = {description: "租户ID"}
  ];
  
  // 租户名称
  optional string tenant_name = 2 [
    json_name = "tenantName", 
    (gnostic.openapi.v3.property) = {description: "租户名称"}
  ];
  
  // 租户代码，唯一标识符
  optional string tenant_code = 3 [
    json_name = "tenantCode", 
    (gnostic.openapi.v3.property) = {description: "租户代码，唯一标识符"}
  ];
}

// 分页响应包装器
// 用于包装分页查询的响应结果，提供统一的分页信息
message PaginatedResponse {
  // 总记录数
  uint64 total = 1 [
    json_name = "total",
    (gnostic.openapi.v3.property) = {description: "总记录数"}
  ];
  
  // 当前页码
  uint32 page = 2 [
    json_name = "page",
    (gnostic.openapi.v3.property) = {description: "当前页码"}
  ];
  
  // 每页记录数
  uint32 page_size = 3 [
    json_name = "pageSize",
    (gnostic.openapi.v3.property) = {description: "每页记录数"}
  ];
  
  // 总页数
  uint32 total_pages = 4 [
    json_name = "totalPages",
    (gnostic.openapi.v3.property) = {description: "总页数"}
  ];
  
  // 是否有下一页
  bool has_next = 5 [
    json_name = "hasNext",
    (gnostic.openapi.v3.property) = {description: "是否有下一页"}
  ];
  
  // 是否有上一页
  bool has_previous = 6 [
    json_name = "hasPrevious",
    (gnostic.openapi.v3.property) = {description: "是否有上一页"}
  ];
}

// 排序选项
// 用于指定查询结果的排序方式
message SortOption {
  // 排序字段
  string field = 1 [
    json_name = "field",
    (gnostic.openapi.v3.property) = {description: "排序字段"}
  ];
  
  // 排序方向：ASC（升序）或DESC（降序）
  string direction = 2 [
    json_name = "direction",
    (gnostic.openapi.v3.property) = {description: "排序方向：ASC（升序）或DESC（降序）"}
  ];
}

// 通用分页请求
// 用于所有需要分页的列表查询接口
message PagingRequest {
  // 页码，从1开始
  uint32 page = 1 [
    json_name = "page",
    (gnostic.openapi.v3.property) = {description: "页码，从1开始"}
  ];
  
  // 每页记录数
  uint32 page_size = 2 [
    json_name = "pageSize",
    (gnostic.openapi.v3.property) = {description: "每页记录数"}
  ];
  
  // 排序选项
  repeated SortOption sort = 3 [
    json_name = "sort",
    (gnostic.openapi.v3.property) = {description: "排序选项"}
  ];
  
  // 查询条件，使用JSON格式的过滤条件
  google.protobuf.Struct filter = 4 [
    json_name = "filter",
    (gnostic.openapi.v3.property) = {description: "查询条件，使用JSON格式的过滤条件"}
  ];
  
  // 字段掩码，指定需要返回的字段
  google.protobuf.FieldMask field_mask = 5 [
    json_name = "fieldMask",
    (gnostic.openapi.v3.property) = {description: "字段掩码，指定需要返回的字段"}
  ];
  
  // 租户ID，用于多租户系统
  optional uint32 tenant_id = 6 [
    json_name = "tenantId",
    (gnostic.openapi.v3.property) = {description: "租户ID，用于多租户系统"}
  ];
}

// 批量操作结果
// 用于返回批量操作的详细结果
message BatchOperationResult {
  // 成功处理的记录数
  uint32 success_count = 1 [
    json_name = "successCount",
    (gnostic.openapi.v3.property) = {description: "成功处理的记录数"}
  ];
  
  // 失败的记录数
  uint32 failure_count = 2 [
    json_name = "failureCount",
    (gnostic.openapi.v3.property) = {description: "失败的记录数"}
  ];
  
  // 详细的失败记录
  message FailureDetail {
    // 记录ID或索引
    string id = 1 [
      json_name = "id",
      (gnostic.openapi.v3.property) = {description: "记录ID或索引"}
    ];
    
    // 错误码
    int32 error_code = 2 [
      json_name = "errorCode",
      (gnostic.openapi.v3.property) = {description: "错误码"}
    ];
    
    // 错误消息
    string error_message = 3 [
      json_name = "errorMessage",
      (gnostic.openapi.v3.property) = {description: "错误消息"}
    ];
  }
  
  // 失败详情列表
  repeated FailureDetail failures = 3 [
    json_name = "failures",
    (gnostic.openapi.v3.property) = {description: "失败详情列表"}
  ];
}