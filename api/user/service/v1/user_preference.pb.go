// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.27.3
// source: api/user/service/v1/user_preference.proto

package v1

import (
	_ "github.com/google/gnostic/openapiv3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户偏好设置
type UserPreference struct {
	state                protoimpl.MessageState    `protogen:"open.v1"`
	UserId               uint32                    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                          // 用户ID
	InterfaceSettings    *UserInterfaceSettings    `protobuf:"bytes,2,opt,name=interface_settings,json=interfaceSettings,proto3" json:"interface_settings,omitempty"`          // 界面设置
	NotificationSettings *UserNotificationSettings `protobuf:"bytes,3,opt,name=notification_settings,json=notificationSettings,proto3" json:"notification_settings,omitempty"` // 通知设置
	LocaleSettings       *UserLocaleSettings       `protobuf:"bytes,4,opt,name=locale_settings,json=localeSettings,proto3" json:"locale_settings,omitempty"`                   // 区域设置
	SecuritySettings     *UserSecuritySettings     `protobuf:"bytes,5,opt,name=security_settings,json=securitySettings,proto3" json:"security_settings,omitempty"`             // 安全设置
	CustomSettings       *structpb.Struct          `protobuf:"bytes,6,opt,name=custom_settings,json=customSettings,proto3" json:"custom_settings,omitempty"`                   // 自定义设置(JSON格式)
	UpdateTime           *timestamppb.Timestamp    `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                               // 更新时间
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UserPreference) Reset() {
	*x = UserPreference{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPreference) ProtoMessage() {}

func (x *UserPreference) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPreference.ProtoReflect.Descriptor instead.
func (*UserPreference) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{0}
}

func (x *UserPreference) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserPreference) GetInterfaceSettings() *UserInterfaceSettings {
	if x != nil {
		return x.InterfaceSettings
	}
	return nil
}

func (x *UserPreference) GetNotificationSettings() *UserNotificationSettings {
	if x != nil {
		return x.NotificationSettings
	}
	return nil
}

func (x *UserPreference) GetLocaleSettings() *UserLocaleSettings {
	if x != nil {
		return x.LocaleSettings
	}
	return nil
}

func (x *UserPreference) GetSecuritySettings() *UserSecuritySettings {
	if x != nil {
		return x.SecuritySettings
	}
	return nil
}

func (x *UserPreference) GetCustomSettings() *structpb.Struct {
	if x != nil {
		return x.CustomSettings
	}
	return nil
}

func (x *UserPreference) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// 用户界面设置
type UserInterfaceSettings struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Theme             string                 `protobuf:"bytes,1,opt,name=theme,proto3" json:"theme,omitempty"`                                                                                                                             // 主题(LIGHT/DARK/SYSTEM)
	Layout            string                 `protobuf:"bytes,2,opt,name=layout,proto3" json:"layout,omitempty"`                                                                                                                           // 布局(DEFAULT/COMPACT/COMFORTABLE)
	PrimaryColor      string                 `protobuf:"bytes,3,opt,name=primary_color,json=primaryColor,proto3" json:"primary_color,omitempty"`                                                                                           // 主色调
	EnableAnimations  bool                   `protobuf:"varint,4,opt,name=enable_animations,json=enableAnimations,proto3" json:"enable_animations,omitempty"`                                                                              // 启用动画
	DefaultView       string                 `protobuf:"bytes,5,opt,name=default_view,json=defaultView,proto3" json:"default_view,omitempty"`                                                                                              // 默认视图
	ItemsPerPage      uint32                 `protobuf:"varint,6,opt,name=items_per_page,json=itemsPerPage,proto3" json:"items_per_page,omitempty"`                                                                                        // 每页项目数
	ShowWelcomeScreen bool                   `protobuf:"varint,7,opt,name=show_welcome_screen,json=showWelcomeScreen,proto3" json:"show_welcome_screen,omitempty"`                                                                         // 显示欢迎屏幕
	FavoriteMenus     []string               `protobuf:"bytes,8,rep,name=favorite_menus,json=favoriteMenus,proto3" json:"favorite_menus,omitempty"`                                                                                        // 收藏菜单
	RecentItems       []string               `protobuf:"bytes,9,rep,name=recent_items,json=recentItems,proto3" json:"recent_items,omitempty"`                                                                                              // 最近访问项目
	ComponentSettings map[string]string      `protobuf:"bytes,10,rep,name=component_settings,json=componentSettings,proto3" json:"component_settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 组件设置
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UserInterfaceSettings) Reset() {
	*x = UserInterfaceSettings{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInterfaceSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInterfaceSettings) ProtoMessage() {}

func (x *UserInterfaceSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInterfaceSettings.ProtoReflect.Descriptor instead.
func (*UserInterfaceSettings) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{1}
}

func (x *UserInterfaceSettings) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *UserInterfaceSettings) GetLayout() string {
	if x != nil {
		return x.Layout
	}
	return ""
}

func (x *UserInterfaceSettings) GetPrimaryColor() string {
	if x != nil {
		return x.PrimaryColor
	}
	return ""
}

func (x *UserInterfaceSettings) GetEnableAnimations() bool {
	if x != nil {
		return x.EnableAnimations
	}
	return false
}

func (x *UserInterfaceSettings) GetDefaultView() string {
	if x != nil {
		return x.DefaultView
	}
	return ""
}

func (x *UserInterfaceSettings) GetItemsPerPage() uint32 {
	if x != nil {
		return x.ItemsPerPage
	}
	return 0
}

func (x *UserInterfaceSettings) GetShowWelcomeScreen() bool {
	if x != nil {
		return x.ShowWelcomeScreen
	}
	return false
}

func (x *UserInterfaceSettings) GetFavoriteMenus() []string {
	if x != nil {
		return x.FavoriteMenus
	}
	return nil
}

func (x *UserInterfaceSettings) GetRecentItems() []string {
	if x != nil {
		return x.RecentItems
	}
	return nil
}

func (x *UserInterfaceSettings) GetComponentSettings() map[string]string {
	if x != nil {
		return x.ComponentSettings
	}
	return nil
}

// 用户通知设置
type UserNotificationSettings struct {
	state                     protoimpl.MessageState                                        `protogen:"open.v1"`
	EnableEmailNotifications  bool                                                          `protobuf:"varint,1,opt,name=enable_email_notifications,json=enableEmailNotifications,proto3" json:"enable_email_notifications,omitempty"`                                                   // 启用邮件通知
	EnableSmsNotifications    bool                                                          `protobuf:"varint,2,opt,name=enable_sms_notifications,json=enableSmsNotifications,proto3" json:"enable_sms_notifications,omitempty"`                                                         // 启用短信通知
	EnablePushNotifications   bool                                                          `protobuf:"varint,3,opt,name=enable_push_notifications,json=enablePushNotifications,proto3" json:"enable_push_notifications,omitempty"`                                                      // 启用推送通知
	EnableSystemNotifications bool                                                          `protobuf:"varint,4,opt,name=enable_system_notifications,json=enableSystemNotifications,proto3" json:"enable_system_notifications,omitempty"`                                                // 启用系统通知
	NotificationTypes         map[string]*UserNotificationSettings_NotificationTypeSettings `protobuf:"bytes,5,rep,name=notification_types,json=notificationTypes,proto3" json:"notification_types,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 通知类型设置
	MutedTopics               []string                                                      `protobuf:"bytes,6,rep,name=muted_topics,json=mutedTopics,proto3" json:"muted_topics,omitempty"`                                                                                             // 已静音主题
	NotificationFrequency     string                                                        `protobuf:"bytes,7,opt,name=notification_frequency,json=notificationFrequency,proto3" json:"notification_frequency,omitempty"`                                                               // 通知频率(IMMEDIATE/DAILY/WEEKLY)
	QuietHoursStart           string                                                        `protobuf:"bytes,8,opt,name=quiet_hours_start,json=quietHoursStart,proto3" json:"quiet_hours_start,omitempty"`                                                                               // 免打扰时段开始
	QuietHoursEnd             string                                                        `protobuf:"bytes,9,opt,name=quiet_hours_end,json=quietHoursEnd,proto3" json:"quiet_hours_end,omitempty"`                                                                                     // 免打扰时段结束
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UserNotificationSettings) Reset() {
	*x = UserNotificationSettings{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserNotificationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNotificationSettings) ProtoMessage() {}

func (x *UserNotificationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNotificationSettings.ProtoReflect.Descriptor instead.
func (*UserNotificationSettings) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{2}
}

func (x *UserNotificationSettings) GetEnableEmailNotifications() bool {
	if x != nil {
		return x.EnableEmailNotifications
	}
	return false
}

func (x *UserNotificationSettings) GetEnableSmsNotifications() bool {
	if x != nil {
		return x.EnableSmsNotifications
	}
	return false
}

func (x *UserNotificationSettings) GetEnablePushNotifications() bool {
	if x != nil {
		return x.EnablePushNotifications
	}
	return false
}

func (x *UserNotificationSettings) GetEnableSystemNotifications() bool {
	if x != nil {
		return x.EnableSystemNotifications
	}
	return false
}

func (x *UserNotificationSettings) GetNotificationTypes() map[string]*UserNotificationSettings_NotificationTypeSettings {
	if x != nil {
		return x.NotificationTypes
	}
	return nil
}

func (x *UserNotificationSettings) GetMutedTopics() []string {
	if x != nil {
		return x.MutedTopics
	}
	return nil
}

func (x *UserNotificationSettings) GetNotificationFrequency() string {
	if x != nil {
		return x.NotificationFrequency
	}
	return ""
}

func (x *UserNotificationSettings) GetQuietHoursStart() string {
	if x != nil {
		return x.QuietHoursStart
	}
	return ""
}

func (x *UserNotificationSettings) GetQuietHoursEnd() string {
	if x != nil {
		return x.QuietHoursEnd
	}
	return ""
}

// 用户区域设置
type UserLocaleSettings struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Language       string                 `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`                                       // 语言
	Timezone       string                 `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"`                                       // 时区
	DateFormat     string                 `protobuf:"bytes,3,opt,name=date_format,json=dateFormat,proto3" json:"date_format,omitempty"`                 // 日期格式
	TimeFormat     string                 `protobuf:"bytes,4,opt,name=time_format,json=timeFormat,proto3" json:"time_format,omitempty"`                 // 时间格式
	FirstDayOfWeek string                 `protobuf:"bytes,5,opt,name=first_day_of_week,json=firstDayOfWeek,proto3" json:"first_day_of_week,omitempty"` // 每周第一天
	NumberFormat   string                 `protobuf:"bytes,6,opt,name=number_format,json=numberFormat,proto3" json:"number_format,omitempty"`           // 数字格式
	Currency       string                 `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`                                       // 货币
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UserLocaleSettings) Reset() {
	*x = UserLocaleSettings{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserLocaleSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLocaleSettings) ProtoMessage() {}

func (x *UserLocaleSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLocaleSettings.ProtoReflect.Descriptor instead.
func (*UserLocaleSettings) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{3}
}

func (x *UserLocaleSettings) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UserLocaleSettings) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *UserLocaleSettings) GetDateFormat() string {
	if x != nil {
		return x.DateFormat
	}
	return ""
}

func (x *UserLocaleSettings) GetTimeFormat() string {
	if x != nil {
		return x.TimeFormat
	}
	return ""
}

func (x *UserLocaleSettings) GetFirstDayOfWeek() string {
	if x != nil {
		return x.FirstDayOfWeek
	}
	return ""
}

func (x *UserLocaleSettings) GetNumberFormat() string {
	if x != nil {
		return x.NumberFormat
	}
	return ""
}

func (x *UserLocaleSettings) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

// 用户安全设置
type UserSecuritySettings struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	EnableLoginNotification bool                   `protobuf:"varint,1,opt,name=enable_login_notification,json=enableLoginNotification,proto3" json:"enable_login_notification,omitempty"` // 启用登录通知
	EnableTwoFactorAuth     bool                   `protobuf:"varint,2,opt,name=enable_two_factor_auth,json=enableTwoFactorAuth,proto3" json:"enable_two_factor_auth,omitempty"`           // 启用双因素认证
	TwoFactorAuthType       string                 `protobuf:"bytes,3,opt,name=two_factor_auth_type,json=twoFactorAuthType,proto3" json:"two_factor_auth_type,omitempty"`                  // 双因素认证类型(TOTP/SMS/EMAIL)
	EnableLoginVerification bool                   `protobuf:"varint,4,opt,name=enable_login_verification,json=enableLoginVerification,proto3" json:"enable_login_verification,omitempty"` // 启用登录验证
	EnableIpRestriction     bool                   `protobuf:"varint,5,opt,name=enable_ip_restriction,json=enableIpRestriction,proto3" json:"enable_ip_restriction,omitempty"`             // 启用IP限制
	AllowedIps              []string               `protobuf:"bytes,6,rep,name=allowed_ips,json=allowedIps,proto3" json:"allowed_ips,omitempty"`                                           // 允许的IP
	SessionTimeoutMinutes   uint32                 `protobuf:"varint,7,opt,name=session_timeout_minutes,json=sessionTimeoutMinutes,proto3" json:"session_timeout_minutes,omitempty"`       // 会话超时时间(分钟)
	EnableConcurrentLogin   bool                   `protobuf:"varint,8,opt,name=enable_concurrent_login,json=enableConcurrentLogin,proto3" json:"enable_concurrent_login,omitempty"`       // 允许并发登录
	MaxConcurrentSessions   uint32                 `protobuf:"varint,9,opt,name=max_concurrent_sessions,json=maxConcurrentSessions,proto3" json:"max_concurrent_sessions,omitempty"`       // 最大并发会话数
	EnablePasswordExpiry    bool                   `protobuf:"varint,10,opt,name=enable_password_expiry,json=enablePasswordExpiry,proto3" json:"enable_password_expiry,omitempty"`         // 启用密码过期
	PasswordExpiryDays      uint32                 `protobuf:"varint,11,opt,name=password_expiry_days,json=passwordExpiryDays,proto3" json:"password_expiry_days,omitempty"`               // 密码过期天数
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UserSecuritySettings) Reset() {
	*x = UserSecuritySettings{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSecuritySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSecuritySettings) ProtoMessage() {}

func (x *UserSecuritySettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSecuritySettings.ProtoReflect.Descriptor instead.
func (*UserSecuritySettings) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{4}
}

func (x *UserSecuritySettings) GetEnableLoginNotification() bool {
	if x != nil {
		return x.EnableLoginNotification
	}
	return false
}

func (x *UserSecuritySettings) GetEnableTwoFactorAuth() bool {
	if x != nil {
		return x.EnableTwoFactorAuth
	}
	return false
}

func (x *UserSecuritySettings) GetTwoFactorAuthType() string {
	if x != nil {
		return x.TwoFactorAuthType
	}
	return ""
}

func (x *UserSecuritySettings) GetEnableLoginVerification() bool {
	if x != nil {
		return x.EnableLoginVerification
	}
	return false
}

func (x *UserSecuritySettings) GetEnableIpRestriction() bool {
	if x != nil {
		return x.EnableIpRestriction
	}
	return false
}

func (x *UserSecuritySettings) GetAllowedIps() []string {
	if x != nil {
		return x.AllowedIps
	}
	return nil
}

func (x *UserSecuritySettings) GetSessionTimeoutMinutes() uint32 {
	if x != nil {
		return x.SessionTimeoutMinutes
	}
	return 0
}

func (x *UserSecuritySettings) GetEnableConcurrentLogin() bool {
	if x != nil {
		return x.EnableConcurrentLogin
	}
	return false
}

func (x *UserSecuritySettings) GetMaxConcurrentSessions() uint32 {
	if x != nil {
		return x.MaxConcurrentSessions
	}
	return 0
}

func (x *UserSecuritySettings) GetEnablePasswordExpiry() bool {
	if x != nil {
		return x.EnablePasswordExpiry
	}
	return false
}

func (x *UserSecuritySettings) GetPasswordExpiryDays() uint32 {
	if x != nil {
		return x.PasswordExpiryDays
	}
	return 0
}

// 获取用户偏好设置请求
type GetUserPreferenceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserPreferenceRequest) Reset() {
	*x = GetUserPreferenceRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserPreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPreferenceRequest) ProtoMessage() {}

func (x *GetUserPreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPreferenceRequest.ProtoReflect.Descriptor instead.
func (*GetUserPreferenceRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserPreferenceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 更新用户偏好设置请求
type UpdateUserPreferenceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	Preference    *UserPreference        `protobuf:"bytes,2,opt,name=preference,proto3" json:"preference,omitempty"`        // 偏好设置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserPreferenceRequest) Reset() {
	*x = UpdateUserPreferenceRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserPreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPreferenceRequest) ProtoMessage() {}

func (x *UpdateUserPreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPreferenceRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserPreferenceRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateUserPreferenceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserPreferenceRequest) GetPreference() *UserPreference {
	if x != nil {
		return x.Preference
	}
	return nil
}

// 重置用户偏好设置请求
type ResetUserPreferenceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 用户ID
	ResetSections []string               `protobuf:"bytes,2,rep,name=reset_sections,json=resetSections,proto3" json:"reset_sections,omitempty"` // 重置部分(INTERFACE/NOTIFICATION/LOCALE/SECURITY/CUSTOM/ALL)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetUserPreferenceRequest) Reset() {
	*x = ResetUserPreferenceRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetUserPreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetUserPreferenceRequest) ProtoMessage() {}

func (x *ResetUserPreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetUserPreferenceRequest.ProtoReflect.Descriptor instead.
func (*ResetUserPreferenceRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{7}
}

func (x *ResetUserPreferenceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ResetUserPreferenceRequest) GetResetSections() []string {
	if x != nil {
		return x.ResetSections
	}
	return nil
}

// 获取用户界面设置请求
type GetUserInterfaceSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserInterfaceSettingsRequest) Reset() {
	*x = GetUserInterfaceSettingsRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserInterfaceSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInterfaceSettingsRequest) ProtoMessage() {}

func (x *GetUserInterfaceSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInterfaceSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetUserInterfaceSettingsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserInterfaceSettingsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 更新用户界面设置请求
type UpdateUserInterfaceSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	Settings      *UserInterfaceSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`            // 界面设置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserInterfaceSettingsRequest) Reset() {
	*x = UpdateUserInterfaceSettingsRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserInterfaceSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInterfaceSettingsRequest) ProtoMessage() {}

func (x *UpdateUserInterfaceSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInterfaceSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserInterfaceSettingsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserInterfaceSettingsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserInterfaceSettingsRequest) GetSettings() *UserInterfaceSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// 获取用户通知设置请求
type GetUserNotificationSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserNotificationSettingsRequest) Reset() {
	*x = GetUserNotificationSettingsRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserNotificationSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNotificationSettingsRequest) ProtoMessage() {}

func (x *GetUserNotificationSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNotificationSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetUserNotificationSettingsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserNotificationSettingsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 更新用户通知设置请求
type UpdateUserNotificationSettingsRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	UserId        uint32                    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	Settings      *UserNotificationSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`            // 通知设置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserNotificationSettingsRequest) Reset() {
	*x = UpdateUserNotificationSettingsRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserNotificationSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserNotificationSettingsRequest) ProtoMessage() {}

func (x *UpdateUserNotificationSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserNotificationSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserNotificationSettingsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateUserNotificationSettingsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserNotificationSettingsRequest) GetSettings() *UserNotificationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// 获取用户区域设置请求
type GetUserLocaleSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserLocaleSettingsRequest) Reset() {
	*x = GetUserLocaleSettingsRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserLocaleSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLocaleSettingsRequest) ProtoMessage() {}

func (x *GetUserLocaleSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLocaleSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetUserLocaleSettingsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserLocaleSettingsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 更新用户区域设置请求
type UpdateUserLocaleSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	Settings      *UserLocaleSettings    `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`            // 区域设置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserLocaleSettingsRequest) Reset() {
	*x = UpdateUserLocaleSettingsRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserLocaleSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserLocaleSettingsRequest) ProtoMessage() {}

func (x *UpdateUserLocaleSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserLocaleSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserLocaleSettingsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateUserLocaleSettingsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserLocaleSettingsRequest) GetSettings() *UserLocaleSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// 获取用户安全设置请求
type GetUserSecuritySettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserSecuritySettingsRequest) Reset() {
	*x = GetUserSecuritySettingsRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserSecuritySettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSecuritySettingsRequest) ProtoMessage() {}

func (x *GetUserSecuritySettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSecuritySettingsRequest.ProtoReflect.Descriptor instead.
func (*GetUserSecuritySettingsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserSecuritySettingsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 更新用户安全设置请求
type UpdateUserSecuritySettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	Settings      *UserSecuritySettings  `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`            // 安全设置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserSecuritySettingsRequest) Reset() {
	*x = UpdateUserSecuritySettingsRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserSecuritySettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserSecuritySettingsRequest) ProtoMessage() {}

func (x *UpdateUserSecuritySettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserSecuritySettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserSecuritySettingsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateUserSecuritySettingsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserSecuritySettingsRequest) GetSettings() *UserSecuritySettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// 导出用户偏好设置请求
type ExportUserPreferenceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                        // 用户ID
	ExportSections []string               `protobuf:"bytes,2,rep,name=export_sections,json=exportSections,proto3" json:"export_sections,omitempty"` // 导出部分(INTERFACE/NOTIFICATION/LOCALE/SECURITY/CUSTOM/ALL)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExportUserPreferenceRequest) Reset() {
	*x = ExportUserPreferenceRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportUserPreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserPreferenceRequest) ProtoMessage() {}

func (x *ExportUserPreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserPreferenceRequest.ProtoReflect.Descriptor instead.
func (*ExportUserPreferenceRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{16}
}

func (x *ExportUserPreferenceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ExportUserPreferenceRequest) GetExportSections() []string {
	if x != nil {
		return x.ExportSections
	}
	return nil
}

// 导出用户偏好设置响应
type ExportUserPreferenceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExportData    string                 `protobuf:"bytes,1,opt,name=export_data,json=exportData,proto3" json:"export_data,omitempty"` // 导出数据(JSON格式)
	ExportTime    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=export_time,json=exportTime,proto3" json:"export_time,omitempty"` // 导出时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportUserPreferenceResponse) Reset() {
	*x = ExportUserPreferenceResponse{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportUserPreferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUserPreferenceResponse) ProtoMessage() {}

func (x *ExportUserPreferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUserPreferenceResponse.ProtoReflect.Descriptor instead.
func (*ExportUserPreferenceResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{17}
}

func (x *ExportUserPreferenceResponse) GetExportData() string {
	if x != nil {
		return x.ExportData
	}
	return ""
}

func (x *ExportUserPreferenceResponse) GetExportTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExportTime
	}
	return nil
}

// 导入用户偏好设置请求
type ImportUserPreferenceRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UserId           uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                               // 用户ID
	ImportData       string                 `protobuf:"bytes,2,opt,name=import_data,json=importData,proto3" json:"import_data,omitempty"`                    // 导入数据(JSON格式)
	ImportSections   []string               `protobuf:"bytes,3,rep,name=import_sections,json=importSections,proto3" json:"import_sections,omitempty"`        // 导入部分(INTERFACE/NOTIFICATION/LOCALE/SECURITY/CUSTOM/ALL)
	OverrideExisting bool                   `protobuf:"varint,4,opt,name=override_existing,json=overrideExisting,proto3" json:"override_existing,omitempty"` // 覆盖现有设置
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ImportUserPreferenceRequest) Reset() {
	*x = ImportUserPreferenceRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportUserPreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportUserPreferenceRequest) ProtoMessage() {}

func (x *ImportUserPreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportUserPreferenceRequest.ProtoReflect.Descriptor instead.
func (*ImportUserPreferenceRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{18}
}

func (x *ImportUserPreferenceRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ImportUserPreferenceRequest) GetImportData() string {
	if x != nil {
		return x.ImportData
	}
	return ""
}

func (x *ImportUserPreferenceRequest) GetImportSections() []string {
	if x != nil {
		return x.ImportSections
	}
	return nil
}

func (x *ImportUserPreferenceRequest) GetOverrideExisting() bool {
	if x != nil {
		return x.OverrideExisting
	}
	return false
}

// 批量获取用户偏好设置请求
type BatchGetUserPreferenceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIds       []uint32               `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"` // 用户ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetUserPreferenceRequest) Reset() {
	*x = BatchGetUserPreferenceRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUserPreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUserPreferenceRequest) ProtoMessage() {}

func (x *BatchGetUserPreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUserPreferenceRequest.ProtoReflect.Descriptor instead.
func (*BatchGetUserPreferenceRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{19}
}

func (x *BatchGetUserPreferenceRequest) GetUserIds() []uint32 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

// 批量获取用户偏好设置响应
type BatchGetUserPreferenceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*UserPreference      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // 用户偏好设置列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetUserPreferenceResponse) Reset() {
	*x = BatchGetUserPreferenceResponse{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUserPreferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUserPreferenceResponse) ProtoMessage() {}

func (x *BatchGetUserPreferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUserPreferenceResponse.ProtoReflect.Descriptor instead.
func (*BatchGetUserPreferenceResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{20}
}

func (x *BatchGetUserPreferenceResponse) GetItems() []*UserPreference {
	if x != nil {
		return x.Items
	}
	return nil
}

// 批量更新用户偏好设置请求
type BatchUpdateUserPreferenceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	Items         []*UserPreference      `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`                                    // 要更新的用户偏好设置列表
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`        // 要更新的字段列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateUserPreferenceRequest) Reset() {
	*x = BatchUpdateUserPreferenceRequest{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateUserPreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateUserPreferenceRequest) ProtoMessage() {}

func (x *BatchUpdateUserPreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateUserPreferenceRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateUserPreferenceRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{21}
}

func (x *BatchUpdateUserPreferenceRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *BatchUpdateUserPreferenceRequest) GetItems() []*UserPreference {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BatchUpdateUserPreferenceRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UserNotificationSettings_NotificationTypeSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`  // 是否启用
	Channels      []string               `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"` // 通知渠道(EMAIL/SMS/PUSH/SYSTEM)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserNotificationSettings_NotificationTypeSettings) Reset() {
	*x = UserNotificationSettings_NotificationTypeSettings{}
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserNotificationSettings_NotificationTypeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNotificationSettings_NotificationTypeSettings) ProtoMessage() {}

func (x *UserNotificationSettings_NotificationTypeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_user_preference_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNotificationSettings_NotificationTypeSettings.ProtoReflect.Descriptor instead.
func (*UserNotificationSettings_NotificationTypeSettings) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_user_preference_proto_rawDescGZIP(), []int{2, 0}
}

func (x *UserNotificationSettings_NotificationTypeSettings) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UserNotificationSettings_NotificationTypeSettings) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

var File_api_user_service_v1_user_preference_proto protoreflect.FileDescriptor

const file_api_user_service_v1_user_preference_proto_rawDesc = "" +
	"\n" +
	")api/user/service/v1/user_preference.proto\x12\x13api.user.service.v1\x1a$gnostic/openapi/v3/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a google/protobuf/field_mask.proto\"\xa8\x05\n" +
	"\x0eUserPreference\x12'\n" +
	"\auser_id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x12m\n" +
	"\x12interface_settings\x18\x02 \x01(\v2*.api.user.service.v1.UserInterfaceSettingsB\x12\xbaG\x0f\x92\x02\f界面设置R\x11interfaceSettings\x12v\n" +
	"\x15notification_settings\x18\x03 \x01(\v2-.api.user.service.v1.UserNotificationSettingsB\x12\xbaG\x0f\x92\x02\f通知设置R\x14notificationSettings\x12d\n" +
	"\x0flocale_settings\x18\x04 \x01(\v2'.api.user.service.v1.UserLocaleSettingsB\x12\xbaG\x0f\x92\x02\f区域设置R\x0elocaleSettings\x12j\n" +
	"\x11security_settings\x18\x05 \x01(\v2).api.user.service.v1.UserSecuritySettingsB\x12\xbaG\x0f\x92\x02\f安全设置R\x10securitySettings\x12c\n" +
	"\x0fcustom_settings\x18\x06 \x01(\v2\x17.google.protobuf.StructB!\xbaG\x1e\x92\x02\x1b自定义设置(JSON格式)R\x0ecustomSettings\x12O\n" +
	"\vupdate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f更新时间R\n" +
	"updateTime\"\x92\x04\n" +
	"\x15UserInterfaceSettings\x12\x14\n" +
	"\x05theme\x18\x01 \x01(\tR\x05theme\x12\x16\n" +
	"\x06layout\x18\x02 \x01(\tR\x06layout\x12#\n" +
	"\rprimary_color\x18\x03 \x01(\tR\fprimaryColor\x12+\n" +
	"\x11enable_animations\x18\x04 \x01(\bR\x10enableAnimations\x12!\n" +
	"\fdefault_view\x18\x05 \x01(\tR\vdefaultView\x12$\n" +
	"\x0eitems_per_page\x18\x06 \x01(\rR\fitemsPerPage\x12.\n" +
	"\x13show_welcome_screen\x18\a \x01(\bR\x11showWelcomeScreen\x12%\n" +
	"\x0efavorite_menus\x18\b \x03(\tR\rfavoriteMenus\x12!\n" +
	"\frecent_items\x18\t \x03(\tR\vrecentItems\x12p\n" +
	"\x12component_settings\x18\n" +
	" \x03(\v2A.api.user.service.v1.UserInterfaceSettings.ComponentSettingsEntryR\x11componentSettings\x1aD\n" +
	"\x16ComponentSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x92\x06\n" +
	"\x18UserNotificationSettings\x12<\n" +
	"\x1aenable_email_notifications\x18\x01 \x01(\bR\x18enableEmailNotifications\x128\n" +
	"\x18enable_sms_notifications\x18\x02 \x01(\bR\x16enableSmsNotifications\x12:\n" +
	"\x19enable_push_notifications\x18\x03 \x01(\bR\x17enablePushNotifications\x12>\n" +
	"\x1benable_system_notifications\x18\x04 \x01(\bR\x19enableSystemNotifications\x12s\n" +
	"\x12notification_types\x18\x05 \x03(\v2D.api.user.service.v1.UserNotificationSettings.NotificationTypesEntryR\x11notificationTypes\x12!\n" +
	"\fmuted_topics\x18\x06 \x03(\tR\vmutedTopics\x125\n" +
	"\x16notification_frequency\x18\a \x01(\tR\x15notificationFrequency\x12*\n" +
	"\x11quiet_hours_start\x18\b \x01(\tR\x0fquietHoursStart\x12&\n" +
	"\x0fquiet_hours_end\x18\t \x01(\tR\rquietHoursEnd\x1aP\n" +
	"\x18NotificationTypeSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1a\n" +
	"\bchannels\x18\x02 \x03(\tR\bchannels\x1a\x8c\x01\n" +
	"\x16NotificationTypesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\\\n" +
	"\x05value\x18\x02 \x01(\v2F.api.user.service.v1.UserNotificationSettings.NotificationTypeSettingsR\x05value:\x028\x01\"\xfa\x01\n" +
	"\x12UserLocaleSettings\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x1a\n" +
	"\btimezone\x18\x02 \x01(\tR\btimezone\x12\x1f\n" +
	"\vdate_format\x18\x03 \x01(\tR\n" +
	"dateFormat\x12\x1f\n" +
	"\vtime_format\x18\x04 \x01(\tR\n" +
	"timeFormat\x12)\n" +
	"\x11first_day_of_week\x18\x05 \x01(\tR\x0efirstDayOfWeek\x12#\n" +
	"\rnumber_format\x18\x06 \x01(\tR\fnumberFormat\x12\x1a\n" +
	"\bcurrency\x18\a \x01(\tR\bcurrency\"\xd9\x04\n" +
	"\x14UserSecuritySettings\x12:\n" +
	"\x19enable_login_notification\x18\x01 \x01(\bR\x17enableLoginNotification\x123\n" +
	"\x16enable_two_factor_auth\x18\x02 \x01(\bR\x13enableTwoFactorAuth\x12/\n" +
	"\x14two_factor_auth_type\x18\x03 \x01(\tR\x11twoFactorAuthType\x12:\n" +
	"\x19enable_login_verification\x18\x04 \x01(\bR\x17enableLoginVerification\x122\n" +
	"\x15enable_ip_restriction\x18\x05 \x01(\bR\x13enableIpRestriction\x12\x1f\n" +
	"\vallowed_ips\x18\x06 \x03(\tR\n" +
	"allowedIps\x126\n" +
	"\x17session_timeout_minutes\x18\a \x01(\rR\x15sessionTimeoutMinutes\x126\n" +
	"\x17enable_concurrent_login\x18\b \x01(\bR\x15enableConcurrentLogin\x126\n" +
	"\x17max_concurrent_sessions\x18\t \x01(\rR\x15maxConcurrentSessions\x124\n" +
	"\x16enable_password_expiry\x18\n" +
	" \x01(\bR\x14enablePasswordExpiry\x120\n" +
	"\x14password_expiry_days\x18\v \x01(\rR\x12passwordExpiryDays\"3\n" +
	"\x18GetUserPreferenceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\"{\n" +
	"\x1bUpdateUserPreferenceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12C\n" +
	"\n" +
	"preference\x18\x02 \x01(\v2#.api.user.service.v1.UserPreferenceR\n" +
	"preference\"\\\n" +
	"\x1aResetUserPreferenceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12%\n" +
	"\x0ereset_sections\x18\x02 \x03(\tR\rresetSections\":\n" +
	"\x1fGetUserInterfaceSettingsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\"\x85\x01\n" +
	"\"UpdateUserInterfaceSettingsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12F\n" +
	"\bsettings\x18\x02 \x01(\v2*.api.user.service.v1.UserInterfaceSettingsR\bsettings\"=\n" +
	"\"GetUserNotificationSettingsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\"\x8b\x01\n" +
	"%UpdateUserNotificationSettingsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12I\n" +
	"\bsettings\x18\x02 \x01(\v2-.api.user.service.v1.UserNotificationSettingsR\bsettings\"7\n" +
	"\x1cGetUserLocaleSettingsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\"\x7f\n" +
	"\x1fUpdateUserLocaleSettingsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12C\n" +
	"\bsettings\x18\x02 \x01(\v2'.api.user.service.v1.UserLocaleSettingsR\bsettings\"9\n" +
	"\x1eGetUserSecuritySettingsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\"\x83\x01\n" +
	"!UpdateUserSecuritySettingsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12E\n" +
	"\bsettings\x18\x02 \x01(\v2).api.user.service.v1.UserSecuritySettingsR\bsettings\"_\n" +
	"\x1bExportUserPreferenceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12'\n" +
	"\x0fexport_sections\x18\x02 \x03(\tR\x0eexportSections\"|\n" +
	"\x1cExportUserPreferenceResponse\x12\x1f\n" +
	"\vexport_data\x18\x01 \x01(\tR\n" +
	"exportData\x12;\n" +
	"\vexport_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"exportTime\"\xbe\x02\n" +
	"\x1bImportUserPreferenceRequest\x12'\n" +
	"\auser_id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b用户IDR\x06userId\x12?\n" +
	"\vimport_data\x18\x02 \x01(\tB\x1e\xbaG\x1b\x92\x02\x18导入数据(JSON格式)R\n" +
	"importData\x12n\n" +
	"\x0fimport_sections\x18\x03 \x03(\tBE\xbaGB\x92\x02?导入部分(INTERFACE/NOTIFICATION/LOCALE/SECURITY/CUSTOM/ALL)R\x0eimportSections\x12E\n" +
	"\x11override_existing\x18\x04 \x01(\bB\x18\xbaG\x15\x92\x02\x12覆盖现有设置R\x10overrideExisting\"P\n" +
	"\x1dBatchGetUserPreferenceRequest\x12/\n" +
	"\buser_ids\x18\x01 \x03(\rB\x14\xbaG\x11\x92\x02\x0e用户ID列表R\auserIds\"{\n" +
	"\x1eBatchGetUserPreferenceResponse\x12Y\n" +
	"\x05items\x18\x01 \x03(\v2#.api.user.service.v1.UserPreferenceB\x1e\xbaG\x1b\x92\x02\x18用户偏好设置列表R\x05items\"\xe9\x02\n" +
	" BatchUpdateUserPreferenceRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12e\n" +
	"\x05items\x18\x02 \x03(\v2#.api.user.service.v1.UserPreferenceB*\xbaG'\x92\x02$要更新的用户偏好设置列表R\x05items\x12\x8f\x01\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskBR\xbaGO:2\x120user_id,interface_settings,notification_settings\x92\x02\x18要更新的字段列表R\n" +
	"updateMaskB\x0e\n" +
	"\f_operator_id2\xe3\r\n" +
	"\x15UserPreferenceService\x12i\n" +
	"\x11GetUserPreference\x12-.api.user.service.v1.GetUserPreferenceRequest\x1a#.api.user.service.v1.UserPreference\"\x00\x12b\n" +
	"\x14UpdateUserPreference\x120.api.user.service.v1.UpdateUserPreferenceRequest\x1a\x16.google.protobuf.Empty\"\x00\x12`\n" +
	"\x13ResetUserPreference\x12/.api.user.service.v1.ResetUserPreferenceRequest\x1a\x16.google.protobuf.Empty\"\x00\x12~\n" +
	"\x18GetUserInterfaceSettings\x124.api.user.service.v1.GetUserInterfaceSettingsRequest\x1a*.api.user.service.v1.UserInterfaceSettings\"\x00\x12p\n" +
	"\x1bUpdateUserInterfaceSettings\x127.api.user.service.v1.UpdateUserInterfaceSettingsRequest\x1a\x16.google.protobuf.Empty\"\x00\x12\x87\x01\n" +
	"\x1bGetUserNotificationSettings\x127.api.user.service.v1.GetUserNotificationSettingsRequest\x1a-.api.user.service.v1.UserNotificationSettings\"\x00\x12v\n" +
	"\x1eUpdateUserNotificationSettings\x12:.api.user.service.v1.UpdateUserNotificationSettingsRequest\x1a\x16.google.protobuf.Empty\"\x00\x12u\n" +
	"\x15GetUserLocaleSettings\x121.api.user.service.v1.GetUserLocaleSettingsRequest\x1a'.api.user.service.v1.UserLocaleSettings\"\x00\x12j\n" +
	"\x18UpdateUserLocaleSettings\x124.api.user.service.v1.UpdateUserLocaleSettingsRequest\x1a\x16.google.protobuf.Empty\"\x00\x12{\n" +
	"\x17GetUserSecuritySettings\x123.api.user.service.v1.GetUserSecuritySettingsRequest\x1a).api.user.service.v1.UserSecuritySettings\"\x00\x12n\n" +
	"\x1aUpdateUserSecuritySettings\x126.api.user.service.v1.UpdateUserSecuritySettingsRequest\x1a\x16.google.protobuf.Empty\"\x00\x12}\n" +
	"\x14ExportUserPreference\x120.api.user.service.v1.ExportUserPreferenceRequest\x1a1.api.user.service.v1.ExportUserPreferenceResponse\"\x00\x12b\n" +
	"\x14ImportUserPreference\x120.api.user.service.v1.ImportUserPreferenceRequest\x1a\x16.google.protobuf.Empty\"\x00\x12\x83\x01\n" +
	"\x16BatchGetUserPreference\x122.api.user.service.v1.BatchGetUserPreferenceRequest\x1a3.api.user.service.v1.BatchGetUserPreferenceResponse\"\x00\x12l\n" +
	"\x19BatchUpdateUserPreference\x125.api.user.service.v1.BatchUpdateUserPreferenceRequest\x1a\x16.google.protobuf.Empty\"\x00B;\n" +
	"\x13api.user.service.v1P\x01Z\"om-platform/api/user/service/v1;v1b\x06proto3"

var (
	file_api_user_service_v1_user_preference_proto_rawDescOnce sync.Once
	file_api_user_service_v1_user_preference_proto_rawDescData []byte
)

func file_api_user_service_v1_user_preference_proto_rawDescGZIP() []byte {
	file_api_user_service_v1_user_preference_proto_rawDescOnce.Do(func() {
		file_api_user_service_v1_user_preference_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_user_service_v1_user_preference_proto_rawDesc), len(file_api_user_service_v1_user_preference_proto_rawDesc)))
	})
	return file_api_user_service_v1_user_preference_proto_rawDescData
}

var file_api_user_service_v1_user_preference_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_api_user_service_v1_user_preference_proto_goTypes = []any{
	(*UserPreference)(nil),                                    // 0: api.user.service.v1.UserPreference
	(*UserInterfaceSettings)(nil),                             // 1: api.user.service.v1.UserInterfaceSettings
	(*UserNotificationSettings)(nil),                          // 2: api.user.service.v1.UserNotificationSettings
	(*UserLocaleSettings)(nil),                                // 3: api.user.service.v1.UserLocaleSettings
	(*UserSecuritySettings)(nil),                              // 4: api.user.service.v1.UserSecuritySettings
	(*GetUserPreferenceRequest)(nil),                          // 5: api.user.service.v1.GetUserPreferenceRequest
	(*UpdateUserPreferenceRequest)(nil),                       // 6: api.user.service.v1.UpdateUserPreferenceRequest
	(*ResetUserPreferenceRequest)(nil),                        // 7: api.user.service.v1.ResetUserPreferenceRequest
	(*GetUserInterfaceSettingsRequest)(nil),                   // 8: api.user.service.v1.GetUserInterfaceSettingsRequest
	(*UpdateUserInterfaceSettingsRequest)(nil),                // 9: api.user.service.v1.UpdateUserInterfaceSettingsRequest
	(*GetUserNotificationSettingsRequest)(nil),                // 10: api.user.service.v1.GetUserNotificationSettingsRequest
	(*UpdateUserNotificationSettingsRequest)(nil),             // 11: api.user.service.v1.UpdateUserNotificationSettingsRequest
	(*GetUserLocaleSettingsRequest)(nil),                      // 12: api.user.service.v1.GetUserLocaleSettingsRequest
	(*UpdateUserLocaleSettingsRequest)(nil),                   // 13: api.user.service.v1.UpdateUserLocaleSettingsRequest
	(*GetUserSecuritySettingsRequest)(nil),                    // 14: api.user.service.v1.GetUserSecuritySettingsRequest
	(*UpdateUserSecuritySettingsRequest)(nil),                 // 15: api.user.service.v1.UpdateUserSecuritySettingsRequest
	(*ExportUserPreferenceRequest)(nil),                       // 16: api.user.service.v1.ExportUserPreferenceRequest
	(*ExportUserPreferenceResponse)(nil),                      // 17: api.user.service.v1.ExportUserPreferenceResponse
	(*ImportUserPreferenceRequest)(nil),                       // 18: api.user.service.v1.ImportUserPreferenceRequest
	(*BatchGetUserPreferenceRequest)(nil),                     // 19: api.user.service.v1.BatchGetUserPreferenceRequest
	(*BatchGetUserPreferenceResponse)(nil),                    // 20: api.user.service.v1.BatchGetUserPreferenceResponse
	(*BatchUpdateUserPreferenceRequest)(nil),                  // 21: api.user.service.v1.BatchUpdateUserPreferenceRequest
	nil,                                                       // 22: api.user.service.v1.UserInterfaceSettings.ComponentSettingsEntry
	(*UserNotificationSettings_NotificationTypeSettings)(nil), // 23: api.user.service.v1.UserNotificationSettings.NotificationTypeSettings
	nil,                           // 24: api.user.service.v1.UserNotificationSettings.NotificationTypesEntry
	(*structpb.Struct)(nil),       // 25: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 26: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil), // 27: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),         // 28: google.protobuf.Empty
}
var file_api_user_service_v1_user_preference_proto_depIdxs = []int32{
	1,  // 0: api.user.service.v1.UserPreference.interface_settings:type_name -> api.user.service.v1.UserInterfaceSettings
	2,  // 1: api.user.service.v1.UserPreference.notification_settings:type_name -> api.user.service.v1.UserNotificationSettings
	3,  // 2: api.user.service.v1.UserPreference.locale_settings:type_name -> api.user.service.v1.UserLocaleSettings
	4,  // 3: api.user.service.v1.UserPreference.security_settings:type_name -> api.user.service.v1.UserSecuritySettings
	25, // 4: api.user.service.v1.UserPreference.custom_settings:type_name -> google.protobuf.Struct
	26, // 5: api.user.service.v1.UserPreference.update_time:type_name -> google.protobuf.Timestamp
	22, // 6: api.user.service.v1.UserInterfaceSettings.component_settings:type_name -> api.user.service.v1.UserInterfaceSettings.ComponentSettingsEntry
	24, // 7: api.user.service.v1.UserNotificationSettings.notification_types:type_name -> api.user.service.v1.UserNotificationSettings.NotificationTypesEntry
	0,  // 8: api.user.service.v1.UpdateUserPreferenceRequest.preference:type_name -> api.user.service.v1.UserPreference
	1,  // 9: api.user.service.v1.UpdateUserInterfaceSettingsRequest.settings:type_name -> api.user.service.v1.UserInterfaceSettings
	2,  // 10: api.user.service.v1.UpdateUserNotificationSettingsRequest.settings:type_name -> api.user.service.v1.UserNotificationSettings
	3,  // 11: api.user.service.v1.UpdateUserLocaleSettingsRequest.settings:type_name -> api.user.service.v1.UserLocaleSettings
	4,  // 12: api.user.service.v1.UpdateUserSecuritySettingsRequest.settings:type_name -> api.user.service.v1.UserSecuritySettings
	26, // 13: api.user.service.v1.ExportUserPreferenceResponse.export_time:type_name -> google.protobuf.Timestamp
	0,  // 14: api.user.service.v1.BatchGetUserPreferenceResponse.items:type_name -> api.user.service.v1.UserPreference
	0,  // 15: api.user.service.v1.BatchUpdateUserPreferenceRequest.items:type_name -> api.user.service.v1.UserPreference
	27, // 16: api.user.service.v1.BatchUpdateUserPreferenceRequest.update_mask:type_name -> google.protobuf.FieldMask
	23, // 17: api.user.service.v1.UserNotificationSettings.NotificationTypesEntry.value:type_name -> api.user.service.v1.UserNotificationSettings.NotificationTypeSettings
	5,  // 18: api.user.service.v1.UserPreferenceService.GetUserPreference:input_type -> api.user.service.v1.GetUserPreferenceRequest
	6,  // 19: api.user.service.v1.UserPreferenceService.UpdateUserPreference:input_type -> api.user.service.v1.UpdateUserPreferenceRequest
	7,  // 20: api.user.service.v1.UserPreferenceService.ResetUserPreference:input_type -> api.user.service.v1.ResetUserPreferenceRequest
	8,  // 21: api.user.service.v1.UserPreferenceService.GetUserInterfaceSettings:input_type -> api.user.service.v1.GetUserInterfaceSettingsRequest
	9,  // 22: api.user.service.v1.UserPreferenceService.UpdateUserInterfaceSettings:input_type -> api.user.service.v1.UpdateUserInterfaceSettingsRequest
	10, // 23: api.user.service.v1.UserPreferenceService.GetUserNotificationSettings:input_type -> api.user.service.v1.GetUserNotificationSettingsRequest
	11, // 24: api.user.service.v1.UserPreferenceService.UpdateUserNotificationSettings:input_type -> api.user.service.v1.UpdateUserNotificationSettingsRequest
	12, // 25: api.user.service.v1.UserPreferenceService.GetUserLocaleSettings:input_type -> api.user.service.v1.GetUserLocaleSettingsRequest
	13, // 26: api.user.service.v1.UserPreferenceService.UpdateUserLocaleSettings:input_type -> api.user.service.v1.UpdateUserLocaleSettingsRequest
	14, // 27: api.user.service.v1.UserPreferenceService.GetUserSecuritySettings:input_type -> api.user.service.v1.GetUserSecuritySettingsRequest
	15, // 28: api.user.service.v1.UserPreferenceService.UpdateUserSecuritySettings:input_type -> api.user.service.v1.UpdateUserSecuritySettingsRequest
	16, // 29: api.user.service.v1.UserPreferenceService.ExportUserPreference:input_type -> api.user.service.v1.ExportUserPreferenceRequest
	18, // 30: api.user.service.v1.UserPreferenceService.ImportUserPreference:input_type -> api.user.service.v1.ImportUserPreferenceRequest
	19, // 31: api.user.service.v1.UserPreferenceService.BatchGetUserPreference:input_type -> api.user.service.v1.BatchGetUserPreferenceRequest
	21, // 32: api.user.service.v1.UserPreferenceService.BatchUpdateUserPreference:input_type -> api.user.service.v1.BatchUpdateUserPreferenceRequest
	0,  // 33: api.user.service.v1.UserPreferenceService.GetUserPreference:output_type -> api.user.service.v1.UserPreference
	28, // 34: api.user.service.v1.UserPreferenceService.UpdateUserPreference:output_type -> google.protobuf.Empty
	28, // 35: api.user.service.v1.UserPreferenceService.ResetUserPreference:output_type -> google.protobuf.Empty
	1,  // 36: api.user.service.v1.UserPreferenceService.GetUserInterfaceSettings:output_type -> api.user.service.v1.UserInterfaceSettings
	28, // 37: api.user.service.v1.UserPreferenceService.UpdateUserInterfaceSettings:output_type -> google.protobuf.Empty
	2,  // 38: api.user.service.v1.UserPreferenceService.GetUserNotificationSettings:output_type -> api.user.service.v1.UserNotificationSettings
	28, // 39: api.user.service.v1.UserPreferenceService.UpdateUserNotificationSettings:output_type -> google.protobuf.Empty
	3,  // 40: api.user.service.v1.UserPreferenceService.GetUserLocaleSettings:output_type -> api.user.service.v1.UserLocaleSettings
	28, // 41: api.user.service.v1.UserPreferenceService.UpdateUserLocaleSettings:output_type -> google.protobuf.Empty
	4,  // 42: api.user.service.v1.UserPreferenceService.GetUserSecuritySettings:output_type -> api.user.service.v1.UserSecuritySettings
	28, // 43: api.user.service.v1.UserPreferenceService.UpdateUserSecuritySettings:output_type -> google.protobuf.Empty
	17, // 44: api.user.service.v1.UserPreferenceService.ExportUserPreference:output_type -> api.user.service.v1.ExportUserPreferenceResponse
	28, // 45: api.user.service.v1.UserPreferenceService.ImportUserPreference:output_type -> google.protobuf.Empty
	20, // 46: api.user.service.v1.UserPreferenceService.BatchGetUserPreference:output_type -> api.user.service.v1.BatchGetUserPreferenceResponse
	28, // 47: api.user.service.v1.UserPreferenceService.BatchUpdateUserPreference:output_type -> google.protobuf.Empty
	33, // [33:48] is the sub-list for method output_type
	18, // [18:33] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_user_service_v1_user_preference_proto_init() }
func file_api_user_service_v1_user_preference_proto_init() {
	if File_api_user_service_v1_user_preference_proto != nil {
		return
	}
	file_api_user_service_v1_user_preference_proto_msgTypes[21].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_user_service_v1_user_preference_proto_rawDesc), len(file_api_user_service_v1_user_preference_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_user_service_v1_user_preference_proto_goTypes,
		DependencyIndexes: file_api_user_service_v1_user_preference_proto_depIdxs,
		MessageInfos:      file_api_user_service_v1_user_preference_proto_msgTypes,
	}.Build()
	File_api_user_service_v1_user_preference_proto = out.File
	file_api_user_service_v1_user_preference_proto_goTypes = nil
	file_api_user_service_v1_user_preference_proto_depIdxs = nil
}
