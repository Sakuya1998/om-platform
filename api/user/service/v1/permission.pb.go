// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.27.3
// source: api/user/service/v1/permission.proto

package v1

import (
	_ "github.com/google/gnostic/openapiv3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	v1 "om-platform/pkg/utils/pagination/v1"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 权限类型
type PermissionType int32

const (
	PermissionType_MENU      PermissionType = 0 // 菜单权限
	PermissionType_OPERATION PermissionType = 1 // 操作权限
	PermissionType_API       PermissionType = 2 // API权限
	PermissionType_DATA      PermissionType = 3 // 数据权限
	PermissionType_FUNCTION  PermissionType = 4 // 功能权限
	PermissionType_RESOURCE  PermissionType = 5 // 资源权限
)

// Enum value maps for PermissionType.
var (
	PermissionType_name = map[int32]string{
		0: "MENU",
		1: "OPERATION",
		2: "API",
		3: "DATA",
		4: "FUNCTION",
		5: "RESOURCE",
	}
	PermissionType_value = map[string]int32{
		"MENU":      0,
		"OPERATION": 1,
		"API":       2,
		"DATA":      3,
		"FUNCTION":  4,
		"RESOURCE":  5,
	}
)

func (x PermissionType) Enum() *PermissionType {
	p := new(PermissionType)
	*p = x
	return p
}

func (x PermissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_user_service_v1_permission_proto_enumTypes[0].Descriptor()
}

func (PermissionType) Type() protoreflect.EnumType {
	return &file_api_user_service_v1_permission_proto_enumTypes[0]
}

func (x PermissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionType.Descriptor instead.
func (PermissionType) EnumDescriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{0}
}

// 权限继承规则
type InheritanceRule int32

const (
	InheritanceRule_INHERIT_ALL       InheritanceRule = 0 // 继承所有权限
	InheritanceRule_INHERIT_SPECIFIED InheritanceRule = 1 // 继承指定权限
	InheritanceRule_NO_INHERITANCE    InheritanceRule = 2 // 不继承
)

// Enum value maps for InheritanceRule.
var (
	InheritanceRule_name = map[int32]string{
		0: "INHERIT_ALL",
		1: "INHERIT_SPECIFIED",
		2: "NO_INHERITANCE",
	}
	InheritanceRule_value = map[string]int32{
		"INHERIT_ALL":       0,
		"INHERIT_SPECIFIED": 1,
		"NO_INHERITANCE":    2,
	}
)

func (x InheritanceRule) Enum() *InheritanceRule {
	p := new(InheritanceRule)
	*p = x
	return p
}

func (x InheritanceRule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InheritanceRule) Descriptor() protoreflect.EnumDescriptor {
	return file_api_user_service_v1_permission_proto_enumTypes[1].Descriptor()
}

func (InheritanceRule) Type() protoreflect.EnumType {
	return &file_api_user_service_v1_permission_proto_enumTypes[1]
}

func (x InheritanceRule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InheritanceRule.Descriptor instead.
func (InheritanceRule) EnumDescriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{1}
}

type PermissionCondition_ConditionOperator int32

const (
	PermissionCondition_EQUALS       PermissionCondition_ConditionOperator = 0 // 等于
	PermissionCondition_NOT_EQUALS   PermissionCondition_ConditionOperator = 1 // 不等于
	PermissionCondition_GREATER_THAN PermissionCondition_ConditionOperator = 2 // 大于
	PermissionCondition_LESS_THAN    PermissionCondition_ConditionOperator = 3 // 小于
	PermissionCondition_IN           PermissionCondition_ConditionOperator = 4 // 在列表中
	PermissionCondition_NOT_IN       PermissionCondition_ConditionOperator = 5 // 不在列表中
	PermissionCondition_CONTAINS     PermissionCondition_ConditionOperator = 6 // 包含
	PermissionCondition_STARTS_WITH  PermissionCondition_ConditionOperator = 7 // 以...开始
	PermissionCondition_ENDS_WITH    PermissionCondition_ConditionOperator = 8 // 以...结束
)

// Enum value maps for PermissionCondition_ConditionOperator.
var (
	PermissionCondition_ConditionOperator_name = map[int32]string{
		0: "EQUALS",
		1: "NOT_EQUALS",
		2: "GREATER_THAN",
		3: "LESS_THAN",
		4: "IN",
		5: "NOT_IN",
		6: "CONTAINS",
		7: "STARTS_WITH",
		8: "ENDS_WITH",
	}
	PermissionCondition_ConditionOperator_value = map[string]int32{
		"EQUALS":       0,
		"NOT_EQUALS":   1,
		"GREATER_THAN": 2,
		"LESS_THAN":    3,
		"IN":           4,
		"NOT_IN":       5,
		"CONTAINS":     6,
		"STARTS_WITH":  7,
		"ENDS_WITH":    8,
	}
)

func (x PermissionCondition_ConditionOperator) Enum() *PermissionCondition_ConditionOperator {
	p := new(PermissionCondition_ConditionOperator)
	*p = x
	return p
}

func (x PermissionCondition_ConditionOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionCondition_ConditionOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_api_user_service_v1_permission_proto_enumTypes[2].Descriptor()
}

func (PermissionCondition_ConditionOperator) Type() protoreflect.EnumType {
	return &file_api_user_service_v1_permission_proto_enumTypes[2]
}

func (x PermissionCondition_ConditionOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionCondition_ConditionOperator.Descriptor instead.
func (PermissionCondition_ConditionOperator) EnumDescriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{0, 0}
}

// 权限条件表达式
type PermissionCondition struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Field         string                                `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`                                                                       // 条件字段
	Operator      PermissionCondition_ConditionOperator `protobuf:"varint,2,opt,name=operator,proto3,enum=api.user.service.v1.PermissionCondition_ConditionOperator" json:"operator,omitempty"` // 操作符
	Value         string                                `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`                                                                       // 条件值
	Values        []string                              `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`                                                                     // 条件值列表(用于IN/NOT_IN操作符)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionCondition) Reset() {
	*x = PermissionCondition{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionCondition) ProtoMessage() {}

func (x *PermissionCondition) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionCondition.ProtoReflect.Descriptor instead.
func (*PermissionCondition) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{0}
}

func (x *PermissionCondition) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *PermissionCondition) GetOperator() PermissionCondition_ConditionOperator {
	if x != nil {
		return x.Operator
	}
	return PermissionCondition_EQUALS
}

func (x *PermissionCondition) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PermissionCondition) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// 权限
type Permission struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`                                                                                            // 权限ID
	Name               *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`                                                                                         // 权限名称
	Code               *string                `protobuf:"bytes,3,opt,name=code,proto3,oneof" json:"code,omitempty"`                                                                                         // 权限编码
	Type               *PermissionType        `protobuf:"varint,4,opt,name=type,proto3,enum=api.user.service.v1.PermissionType,oneof" json:"type,omitempty"`                                                // 权限类型
	ResourceIdentifier *string                `protobuf:"bytes,5,opt,name=resource_identifier,json=resourceIdentifier,proto3,oneof" json:"resource_identifier,omitempty"`                                   // 资源标识符
	Action             *string                `protobuf:"bytes,6,opt,name=action,proto3,oneof" json:"action,omitempty"`                                                                                     // 操作类型
	Status             *string                `protobuf:"bytes,7,opt,name=status,proto3,oneof" json:"status,omitempty"`                                                                                     // 状态
	Remark             *string                `protobuf:"bytes,8,opt,name=remark,proto3,oneof" json:"remark,omitempty"`                                                                                     // 备注
	Conditions         []*PermissionCondition `protobuf:"bytes,9,rep,name=conditions,proto3" json:"conditions,omitempty"`                                                                                   // 权限条件表达式
	Priority           *uint32                `protobuf:"varint,10,opt,name=priority,proto3,oneof" json:"priority,omitempty"`                                                                               // 优先级
	InheritanceRule    *InheritanceRule       `protobuf:"varint,11,opt,name=inheritance_rule,json=inheritanceRule,proto3,enum=api.user.service.v1.InheritanceRule,oneof" json:"inheritance_rule,omitempty"` // 继承规则
	Ttl                *uint32                `protobuf:"varint,12,opt,name=ttl,proto3,oneof" json:"ttl,omitempty"`                                                                                         // 缓存生存时间
	CreateBy           *uint32                `protobuf:"varint,13,opt,name=create_by,json=createBy,proto3,oneof" json:"create_by,omitempty"`                                                               // 创建者ID
	UpdateBy           *uint32                `protobuf:"varint,14,opt,name=update_by,json=updateBy,proto3,oneof" json:"update_by,omitempty"`                                                               // 更新者ID
	ParentId           *uint32                `protobuf:"varint,100,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`                                                              // 父节点ID
	Children           []*Permission          `protobuf:"bytes,101,rep,name=children,proto3" json:"children,omitempty"`                                                                                     // 子节点树
	CreateTime         *timestamppb.Timestamp `protobuf:"bytes,200,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`                                                         // 创建时间
	UpdateTime         *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=update_time,json=updateTime,proto3,oneof" json:"update_time,omitempty"`                                                         // 更新时间
	DeleteTime         *timestamppb.Timestamp `protobuf:"bytes,202,opt,name=delete_time,json=deleteTime,proto3,oneof" json:"delete_time,omitempty"`                                                         // 删除时间
	ExpireTime         *timestamppb.Timestamp `protobuf:"bytes,203,opt,name=expire_time,json=expireTime,proto3,oneof" json:"expire_time,omitempty"`                                                         // 过期时间
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{1}
}

func (x *Permission) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Permission) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Permission) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *Permission) GetType() PermissionType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return PermissionType_MENU
}

func (x *Permission) GetResourceIdentifier() string {
	if x != nil && x.ResourceIdentifier != nil {
		return *x.ResourceIdentifier
	}
	return ""
}

func (x *Permission) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *Permission) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *Permission) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *Permission) GetConditions() []*PermissionCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Permission) GetPriority() uint32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *Permission) GetInheritanceRule() InheritanceRule {
	if x != nil && x.InheritanceRule != nil {
		return *x.InheritanceRule
	}
	return InheritanceRule_INHERIT_ALL
}

func (x *Permission) GetTtl() uint32 {
	if x != nil && x.Ttl != nil {
		return *x.Ttl
	}
	return 0
}

func (x *Permission) GetCreateBy() uint32 {
	if x != nil && x.CreateBy != nil {
		return *x.CreateBy
	}
	return 0
}

func (x *Permission) GetUpdateBy() uint32 {
	if x != nil && x.UpdateBy != nil {
		return *x.UpdateBy
	}
	return 0
}

func (x *Permission) GetParentId() uint32 {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return 0
}

func (x *Permission) GetChildren() []*Permission {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *Permission) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Permission) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Permission) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

func (x *Permission) GetExpireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

// 权限树
type PermissionTree struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*PermissionTreeNode  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionTree) Reset() {
	*x = PermissionTree{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionTree) ProtoMessage() {}

func (x *PermissionTree) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionTree.ProtoReflect.Descriptor instead.
func (*PermissionTree) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{2}
}

func (x *PermissionTree) GetNodes() []*PermissionTreeNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// 权限树节点
type PermissionTreeNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Type          PermissionType         `protobuf:"varint,4,opt,name=type,proto3,enum=api.user.service.v1.PermissionType" json:"type,omitempty"`
	ParentId      uint32                 `protobuf:"varint,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Children      []*PermissionTreeNode  `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionTreeNode) Reset() {
	*x = PermissionTreeNode{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionTreeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionTreeNode) ProtoMessage() {}

func (x *PermissionTreeNode) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionTreeNode.ProtoReflect.Descriptor instead.
func (*PermissionTreeNode) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{3}
}

func (x *PermissionTreeNode) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PermissionTreeNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionTreeNode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PermissionTreeNode) GetType() PermissionType {
	if x != nil {
		return x.Type
	}
	return PermissionType_MENU
}

func (x *PermissionTreeNode) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *PermissionTreeNode) GetChildren() []*PermissionTreeNode {
	if x != nil {
		return x.Children
	}
	return nil
}

// 权限列表 - 答复
type ListPermissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Permission          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPermissionResponse) Reset() {
	*x = ListPermissionResponse{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionResponse) ProtoMessage() {}

func (x *ListPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionResponse.ProtoReflect.Descriptor instead.
func (*ListPermissionResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{4}
}

func (x *ListPermissionResponse) GetItems() []*Permission {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListPermissionResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 权限数据 - 请求
type GetPermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPermissionRequest) Reset() {
	*x = GetPermissionRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionRequest) ProtoMessage() {}

func (x *GetPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{5}
}

func (x *GetPermissionRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 创建权限 - 请求
type CreatePermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	Data          *Permission            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePermissionRequest) Reset() {
	*x = CreatePermissionRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePermissionRequest) ProtoMessage() {}

func (x *CreatePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePermissionRequest.ProtoReflect.Descriptor instead.
func (*CreatePermissionRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePermissionRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *CreatePermissionRequest) GetData() *Permission {
	if x != nil {
		return x.Data
	}
	return nil
}

// 更新权限 - 请求
type UpdatePermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	Data          *Permission            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`              // 要更新的字段列表
	AllowMissing  *bool                  `protobuf:"varint,4,opt,name=allow_missing,json=allowMissing,proto3,oneof" json:"allow_missing,omitempty"` // 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePermissionRequest) Reset() {
	*x = UpdatePermissionRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePermissionRequest) ProtoMessage() {}

func (x *UpdatePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePermissionRequest.ProtoReflect.Descriptor instead.
func (*UpdatePermissionRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePermissionRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *UpdatePermissionRequest) GetData() *Permission {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdatePermissionRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdatePermissionRequest) GetAllowMissing() bool {
	if x != nil && x.AllowMissing != nil {
		return *x.AllowMissing
	}
	return false
}

// 删除权限 - 请求
type DeletePermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	Id            uint32                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePermissionRequest) Reset() {
	*x = DeletePermissionRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePermissionRequest) ProtoMessage() {}

func (x *DeletePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePermissionRequest.ProtoReflect.Descriptor instead.
func (*DeletePermissionRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePermissionRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *DeletePermissionRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取权限树节点 - 请求
type GetPermissionTreeNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPermissionTreeNodeRequest) Reset() {
	*x = GetPermissionTreeNodeRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermissionTreeNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionTreeNodeRequest) ProtoMessage() {}

func (x *GetPermissionTreeNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionTreeNodeRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionTreeNodeRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{9}
}

func (x *GetPermissionTreeNodeRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取权限树节点列表 - 请求
type ListPermissionTreeNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentId      *uint32                `protobuf:"varint,1,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPermissionTreeNodeRequest) Reset() {
	*x = ListPermissionTreeNodeRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionTreeNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionTreeNodeRequest) ProtoMessage() {}

func (x *ListPermissionTreeNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionTreeNodeRequest.ProtoReflect.Descriptor instead.
func (*ListPermissionTreeNodeRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{10}
}

func (x *ListPermissionTreeNodeRequest) GetParentId() uint32 {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return 0
}

// 获取权限树节点列表 - 响应
type ListPermissionTreeNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*PermissionTreeNode  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPermissionTreeNodeResponse) Reset() {
	*x = ListPermissionTreeNodeResponse{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionTreeNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionTreeNodeResponse) ProtoMessage() {}

func (x *ListPermissionTreeNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionTreeNodeResponse.ProtoReflect.Descriptor instead.
func (*ListPermissionTreeNodeResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{11}
}

func (x *ListPermissionTreeNodeResponse) GetItems() []*PermissionTreeNode {
	if x != nil {
		return x.Items
	}
	return nil
}

// 批量分配权限 - 请求
type BatchAssignPermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	PermissionIds []uint32               `protobuf:"varint,2,rep,packed,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
	RoleIds       []uint32               `protobuf:"varint,3,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAssignPermissionRequest) Reset() {
	*x = BatchAssignPermissionRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAssignPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAssignPermissionRequest) ProtoMessage() {}

func (x *BatchAssignPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAssignPermissionRequest.ProtoReflect.Descriptor instead.
func (*BatchAssignPermissionRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{12}
}

func (x *BatchAssignPermissionRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *BatchAssignPermissionRequest) GetPermissionIds() []uint32 {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

func (x *BatchAssignPermissionRequest) GetRoleIds() []uint32 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

// 批量撤销权限 - 请求
type BatchRevokePermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	PermissionIds []uint32               `protobuf:"varint,2,rep,packed,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
	RoleIds       []uint32               `protobuf:"varint,3,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRevokePermissionRequest) Reset() {
	*x = BatchRevokePermissionRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRevokePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRevokePermissionRequest) ProtoMessage() {}

func (x *BatchRevokePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRevokePermissionRequest.ProtoReflect.Descriptor instead.
func (*BatchRevokePermissionRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{13}
}

func (x *BatchRevokePermissionRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *BatchRevokePermissionRequest) GetPermissionIds() []uint32 {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

func (x *BatchRevokePermissionRequest) GetRoleIds() []uint32 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

// 检查权限 - 请求
type CheckPermissionRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserId             uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceIdentifier string                 `protobuf:"bytes,2,opt,name=resource_identifier,json=resourceIdentifier,proto3" json:"resource_identifier,omitempty"`
	Action             string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Context            map[string]string      `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 上下文信息，用于条件表达式求值
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CheckPermissionRequest) Reset() {
	*x = CheckPermissionRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionRequest) ProtoMessage() {}

func (x *CheckPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionRequest.ProtoReflect.Descriptor instead.
func (*CheckPermissionRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{14}
}

func (x *CheckPermissionRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckPermissionRequest) GetResourceIdentifier() string {
	if x != nil {
		return x.ResourceIdentifier
	}
	return ""
}

func (x *CheckPermissionRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *CheckPermissionRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

// 检查权限 - 响应
type CheckPermissionResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	HasPermission       bool                   `protobuf:"varint,1,opt,name=has_permission,json=hasPermission,proto3" json:"has_permission,omitempty"`
	DenyReason          string                 `protobuf:"bytes,2,opt,name=deny_reason,json=denyReason,proto3" json:"deny_reason,omitempty"`
	MatchedPermissionId uint32                 `protobuf:"varint,3,opt,name=matched_permission_id,json=matchedPermissionId,proto3" json:"matched_permission_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CheckPermissionResponse) Reset() {
	*x = CheckPermissionResponse{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionResponse) ProtoMessage() {}

func (x *CheckPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionResponse.ProtoReflect.Descriptor instead.
func (*CheckPermissionResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{15}
}

func (x *CheckPermissionResponse) GetHasPermission() bool {
	if x != nil {
		return x.HasPermission
	}
	return false
}

func (x *CheckPermissionResponse) GetDenyReason() string {
	if x != nil {
		return x.DenyReason
	}
	return ""
}

func (x *CheckPermissionResponse) GetMatchedPermissionId() uint32 {
	if x != nil {
		return x.MatchedPermissionId
	}
	return 0
}

// 权限模板
type PermissionTemplate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Permissions   []*Permission          `protobuf:"bytes,4,rep,name=permissions,proto3" json:"permissions,omitempty"`
	CreateBy      *uint32                `protobuf:"varint,5,opt,name=create_by,json=createBy,proto3,oneof" json:"create_by,omitempty"`
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3,oneof" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionTemplate) Reset() {
	*x = PermissionTemplate{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionTemplate) ProtoMessage() {}

func (x *PermissionTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionTemplate.ProtoReflect.Descriptor instead.
func (*PermissionTemplate) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{16}
}

func (x *PermissionTemplate) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PermissionTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PermissionTemplate) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *PermissionTemplate) GetCreateBy() uint32 {
	if x != nil && x.CreateBy != nil {
		return *x.CreateBy
	}
	return 0
}

func (x *PermissionTemplate) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *PermissionTemplate) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// 创建权限模板 - 请求
type CreatePermissionTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PermissionIds []uint32               `protobuf:"varint,4,rep,packed,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePermissionTemplateRequest) Reset() {
	*x = CreatePermissionTemplateRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePermissionTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePermissionTemplateRequest) ProtoMessage() {}

func (x *CreatePermissionTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePermissionTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreatePermissionTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{17}
}

func (x *CreatePermissionTemplateRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *CreatePermissionTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePermissionTemplateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePermissionTemplateRequest) GetPermissionIds() []uint32 {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

// 应用权限模板 - 请求
type ApplyPermissionTemplateRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OperatorId       *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	TemplateId       uint32                 `protobuf:"varint,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	RoleIds          []uint32               `protobuf:"varint,3,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	OverrideExisting bool                   `protobuf:"varint,4,opt,name=override_existing,json=overrideExisting,proto3" json:"override_existing,omitempty"` // 是否覆盖现有权限
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ApplyPermissionTemplateRequest) Reset() {
	*x = ApplyPermissionTemplateRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyPermissionTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyPermissionTemplateRequest) ProtoMessage() {}

func (x *ApplyPermissionTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyPermissionTemplateRequest.ProtoReflect.Descriptor instead.
func (*ApplyPermissionTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{18}
}

func (x *ApplyPermissionTemplateRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *ApplyPermissionTemplateRequest) GetTemplateId() uint32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *ApplyPermissionTemplateRequest) GetRoleIds() []uint32 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *ApplyPermissionTemplateRequest) GetOverrideExisting() bool {
	if x != nil {
		return x.OverrideExisting
	}
	return false
}

// 获取有效权限列表 - 请求
type GetEffectivePermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceType  *string                `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3,oneof" json:"resource_type,omitempty"` // 可选，按资源类型过滤
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEffectivePermissionsRequest) Reset() {
	*x = GetEffectivePermissionsRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEffectivePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEffectivePermissionsRequest) ProtoMessage() {}

func (x *GetEffectivePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEffectivePermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetEffectivePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{19}
}

func (x *GetEffectivePermissionsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetEffectivePermissionsRequest) GetResourceType() string {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return ""
}

// 获取有效权限列表 - 响应
type GetEffectivePermissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permissions   []*Permission          `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	PermissionMap map[string]bool        `protobuf:"bytes,2,rep,name=permission_map,json=permissionMap,proto3" json:"permission_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 权限编码到布尔值的映射，方便客户端快速查询
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEffectivePermissionsResponse) Reset() {
	*x = GetEffectivePermissionsResponse{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEffectivePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEffectivePermissionsResponse) ProtoMessage() {}

func (x *GetEffectivePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEffectivePermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetEffectivePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{20}
}

func (x *GetEffectivePermissionsResponse) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *GetEffectivePermissionsResponse) GetPermissionMap() map[string]bool {
	if x != nil {
		return x.PermissionMap
	}
	return nil
}

// 清除权限缓存 - 请求
type ClearPermissionCacheRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"` // 操作用户ID
	UserId        *uint32                `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`             // 指定用户ID，为空则清除所有用户的权限缓存
	RoleId        *uint32                `protobuf:"varint,3,opt,name=role_id,json=roleId,proto3,oneof" json:"role_id,omitempty"`             // 指定角色ID，为空则不按角色过滤
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearPermissionCacheRequest) Reset() {
	*x = ClearPermissionCacheRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearPermissionCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearPermissionCacheRequest) ProtoMessage() {}

func (x *ClearPermissionCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearPermissionCacheRequest.ProtoReflect.Descriptor instead.
func (*ClearPermissionCacheRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{21}
}

func (x *ClearPermissionCacheRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *ClearPermissionCacheRequest) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ClearPermissionCacheRequest) GetRoleId() uint32 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

// 导出权限配置 - 请求
type ExportPermissionConfigRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OperatorId       *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"`             // 操作用户ID
	PermissionIds    []uint32               `protobuf:"varint,2,rep,packed,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`   // 为空则导出所有权限
	IncludeTemplates bool                   `protobuf:"varint,3,opt,name=include_templates,json=includeTemplates,proto3" json:"include_templates,omitempty"` // 是否包含权限模板
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExportPermissionConfigRequest) Reset() {
	*x = ExportPermissionConfigRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportPermissionConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPermissionConfigRequest) ProtoMessage() {}

func (x *ExportPermissionConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportPermissionConfigRequest.ProtoReflect.Descriptor instead.
func (*ExportPermissionConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{22}
}

func (x *ExportPermissionConfigRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *ExportPermissionConfigRequest) GetPermissionIds() []uint32 {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

func (x *ExportPermissionConfigRequest) GetIncludeTemplates() bool {
	if x != nil {
		return x.IncludeTemplates
	}
	return false
}

// 导出权限配置 - 响应
type ExportPermissionConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigData    string                 `protobuf:"bytes,1,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"` // JSON格式的配置数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportPermissionConfigResponse) Reset() {
	*x = ExportPermissionConfigResponse{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportPermissionConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPermissionConfigResponse) ProtoMessage() {}

func (x *ExportPermissionConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportPermissionConfigResponse.ProtoReflect.Descriptor instead.
func (*ExportPermissionConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{23}
}

func (x *ExportPermissionConfigResponse) GetConfigData() string {
	if x != nil {
		return x.ConfigData
	}
	return ""
}

// 导入权限配置 - 请求
type ImportPermissionConfigRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OperatorId       *uint32                `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"`             // 操作用户ID
	ConfigData       string                 `protobuf:"bytes,2,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`                    // JSON格式的配置数据
	OverrideExisting bool                   `protobuf:"varint,3,opt,name=override_existing,json=overrideExisting,proto3" json:"override_existing,omitempty"` // 是否覆盖现有配置
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ImportPermissionConfigRequest) Reset() {
	*x = ImportPermissionConfigRequest{}
	mi := &file_api_user_service_v1_permission_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportPermissionConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPermissionConfigRequest) ProtoMessage() {}

func (x *ImportPermissionConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_service_v1_permission_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPermissionConfigRequest.ProtoReflect.Descriptor instead.
func (*ImportPermissionConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_user_service_v1_permission_proto_rawDescGZIP(), []int{24}
}

func (x *ImportPermissionConfigRequest) GetOperatorId() uint32 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *ImportPermissionConfigRequest) GetConfigData() string {
	if x != nil {
		return x.ConfigData
	}
	return ""
}

func (x *ImportPermissionConfigRequest) GetOverrideExisting() bool {
	if x != nil {
		return x.OverrideExisting
	}
	return false
}

var File_api_user_service_v1_permission_proto protoreflect.FileDescriptor

const file_api_user_service_v1_permission_proto_rawDesc = "" +
	"\n" +
	"$api/user/service/v1/permission.proto\x12\x13api.user.service.v1\x1a$gnostic/openapi/v3/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a google/protobuf/field_mask.proto\x1a(pkg/utils/pagination/v1/pagination.proto\"\xc6\x02\n" +
	"\x13PermissionCondition\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12V\n" +
	"\boperator\x18\x02 \x01(\x0e2:.api.user.service.v1.PermissionCondition.ConditionOperatorR\boperator\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12\x16\n" +
	"\x06values\x18\x04 \x03(\tR\x06values\"\x92\x01\n" +
	"\x11ConditionOperator\x12\n" +
	"\n" +
	"\x06EQUALS\x10\x00\x12\x0e\n" +
	"\n" +
	"NOT_EQUALS\x10\x01\x12\x10\n" +
	"\fGREATER_THAN\x10\x02\x12\r\n" +
	"\tLESS_THAN\x10\x03\x12\x06\n" +
	"\x02IN\x10\x04\x12\n" +
	"\n" +
	"\x06NOT_IN\x10\x05\x12\f\n" +
	"\bCONTAINS\x10\x06\x12\x0f\n" +
	"\vSTARTS_WITH\x10\a\x12\r\n" +
	"\tENDS_WITH\x10\b\"\xf3\f\n" +
	"\n" +
	"Permission\x12#\n" +
	"\x02id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b权限IDH\x00R\x02id\x88\x01\x01\x12+\n" +
	"\x04name\x18\x02 \x01(\tB\x12\xbaG\x0f\x92\x02\f权限名称H\x01R\x04name\x88\x01\x01\x12+\n" +
	"\x04code\x18\x03 \x01(\tB\x12\xbaG\x0f\x92\x02\f权限编码H\x02R\x04code\x88\x01\x01\x12P\n" +
	"\x04type\x18\x04 \x01(\x0e2#.api.user.service.v1.PermissionTypeB\x12\xbaG\x0f\x92\x02\f权限类型H\x03R\x04type\x88\x01\x01\x12K\n" +
	"\x13resource_identifier\x18\x05 \x01(\tB\x15\xbaG\x12\x92\x02\x0f资源标识符H\x04R\x12resourceIdentifier\x88\x01\x01\x12J\n" +
	"\x06action\x18\x06 \x01(\tB-\xbaG*\x92\x02'操作类型(如:read,write,execute等)H\x05R\x06action\x88\x01\x01\x12?\n" +
	"\x06status\x18\a \x01(\tB\"\xbaG\x1f\xc2\x01\x04\x12\x02ON\xc2\x01\x05\x12\x03OFF\x8a\x02\x04\x1a\x02ON\x92\x02\x06状态H\x06R\x06status\x88\x01\x01\x12)\n" +
	"\x06remark\x18\b \x01(\tB\f\xbaG\t\x92\x02\x06备注H\aR\x06remark\x88\x01\x01\x12e\n" +
	"\n" +
	"conditions\x18\t \x03(\v2(.api.user.service.v1.PermissionConditionB\x1b\xbaG\x18\x92\x02\x15权限条件表达式R\n" +
	"conditions\x12M\n" +
	"\bpriority\x18\n" +
	" \x01(\rB,\xbaG)\x92\x02&优先级(数值越大优先级越高)H\bR\bpriority\x88\x01\x01\x12h\n" +
	"\x10inheritance_rule\x18\v \x01(\x0e2$.api.user.service.v1.InheritanceRuleB\x12\xbaG\x0f\x92\x02\f继承规则H\tR\x0finheritanceRule\x88\x01\x01\x124\n" +
	"\x03ttl\x18\f \x01(\rB\x1d\xbaG\x1a\x92\x02\x17缓存生存时间(秒)H\n" +
	"R\x03ttl\x88\x01\x01\x123\n" +
	"\tcreate_by\x18\r \x01(\rB\x11\xbaG\x0e\x92\x02\v创建者IDH\vR\bcreateBy\x88\x01\x01\x123\n" +
	"\tupdate_by\x18\x0e \x01(\rB\x11\xbaG\x0e\x92\x02\v更新者IDH\fR\bupdateBy\x88\x01\x01\x123\n" +
	"\tparent_id\x18d \x01(\rB\x11\xbaG\x0e\x92\x02\v父节点IDH\rR\bparentId\x88\x01\x01\x12O\n" +
	"\bchildren\x18e \x03(\v2\x1f.api.user.service.v1.PermissionB\x12\xbaG\x0f\x92\x02\f子节点树R\bchildren\x12U\n" +
	"\vcreate_time\x18\xc8\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f创建时间H\x0eR\n" +
	"createTime\x88\x01\x01\x12U\n" +
	"\vupdate_time\x18\xc9\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f更新时间H\x0fR\n" +
	"updateTime\x88\x01\x01\x12U\n" +
	"\vdelete_time\x18\xca\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f删除时间H\x10R\n" +
	"deleteTime\x88\x01\x01\x12U\n" +
	"\vexpire_time\x18\xcb\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f过期时间H\x11R\n" +
	"expireTime\x88\x01\x01B\x05\n" +
	"\x03_idB\a\n" +
	"\x05_nameB\a\n" +
	"\x05_codeB\a\n" +
	"\x05_typeB\x16\n" +
	"\x14_resource_identifierB\t\n" +
	"\a_actionB\t\n" +
	"\a_statusB\t\n" +
	"\a_remarkB\v\n" +
	"\t_priorityB\x13\n" +
	"\x11_inheritance_ruleB\x06\n" +
	"\x04_ttlB\f\n" +
	"\n" +
	"_create_byB\f\n" +
	"\n" +
	"_update_byB\f\n" +
	"\n" +
	"_parent_idB\x0e\n" +
	"\f_create_timeB\x0e\n" +
	"\f_update_timeB\x0e\n" +
	"\f_delete_timeB\x0e\n" +
	"\f_expire_time\"O\n" +
	"\x0ePermissionTree\x12=\n" +
	"\x05nodes\x18\x01 \x03(\v2'.api.user.service.v1.PermissionTreeNodeR\x05nodes\"\xe7\x01\n" +
	"\x12PermissionTreeNode\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x127\n" +
	"\x04type\x18\x04 \x01(\x0e2#.api.user.service.v1.PermissionTypeR\x04type\x12\x1b\n" +
	"\tparent_id\x18\x05 \x01(\rR\bparentId\x12C\n" +
	"\bchildren\x18\x06 \x03(\v2'.api.user.service.v1.PermissionTreeNodeR\bchildren\"e\n" +
	"\x16ListPermissionResponse\x125\n" +
	"\x05items\x18\x01 \x03(\v2\x1f.api.user.service.v1.PermissionR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"&\n" +
	"\x14GetPermissionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"\x9c\x01\n" +
	"\x17CreatePermissionRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x123\n" +
	"\x04data\x18\x02 \x01(\v2\x1f.api.user.service.v1.PermissionR\x04dataB\x0e\n" +
	"\f_operator_id\"\xd2\x03\n" +
	"\x17UpdatePermissionRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x123\n" +
	"\x04data\x18\x02 \x01(\v2\x1f.api.user.service.v1.PermissionR\x04data\x12k\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskB.\xbaG+:\x0e\x12\fid,name,code\x92\x02\x18要更新的字段列表R\n" +
	"updateMask\x12\xb4\x01\n" +
	"\rallow_missing\x18\x04 \x01(\bB\x89\x01\xbaG\x85\x01\x92\x02\x81\x01如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。H\x01R\fallowMissing\x88\x01\x01B\x0e\n" +
	"\f_operator_idB\x10\n" +
	"\x0e_allow_missing\"w\n" +
	"\x17DeletePermissionRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\rR\x02idB\x0e\n" +
	"\f_operator_id\".\n" +
	"\x1cGetPermissionTreeNodeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"O\n" +
	"\x1dListPermissionTreeNodeRequest\x12 \n" +
	"\tparent_id\x18\x01 \x01(\rH\x00R\bparentId\x88\x01\x01B\f\n" +
	"\n" +
	"_parent_id\"_\n" +
	"\x1eListPermissionTreeNodeResponse\x12=\n" +
	"\x05items\x18\x01 \x03(\v2'.api.user.service.v1.PermissionTreeNodeR\x05items\"\xae\x01\n" +
	"\x1cBatchAssignPermissionRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12%\n" +
	"\x0epermission_ids\x18\x02 \x03(\rR\rpermissionIds\x12\x19\n" +
	"\brole_ids\x18\x03 \x03(\rR\aroleIdsB\x0e\n" +
	"\f_operator_id\"\xae\x01\n" +
	"\x1cBatchRevokePermissionRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12%\n" +
	"\x0epermission_ids\x18\x02 \x03(\rR\rpermissionIds\x12\x19\n" +
	"\brole_ids\x18\x03 \x03(\rR\aroleIdsB\x0e\n" +
	"\f_operator_id\"\x8a\x02\n" +
	"\x16CheckPermissionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12/\n" +
	"\x13resource_identifier\x18\x02 \x01(\tR\x12resourceIdentifier\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12R\n" +
	"\acontext\x18\x04 \x03(\v28.api.user.service.v1.CheckPermissionRequest.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x95\x01\n" +
	"\x17CheckPermissionResponse\x12%\n" +
	"\x0ehas_permission\x18\x01 \x01(\bR\rhasPermission\x12\x1f\n" +
	"\vdeny_reason\x18\x02 \x01(\tR\n" +
	"denyReason\x122\n" +
	"\x15matched_permission_id\x18\x03 \x01(\rR\x13matchedPermissionId\"\xf1\x02\n" +
	"\x12PermissionTemplate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12A\n" +
	"\vpermissions\x18\x04 \x03(\v2\x1f.api.user.service.v1.PermissionR\vpermissions\x12 \n" +
	"\tcreate_by\x18\x05 \x01(\rH\x00R\bcreateBy\x88\x01\x01\x12@\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\n" +
	"createTime\x88\x01\x01\x12@\n" +
	"\vupdate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampH\x02R\n" +
	"updateTime\x88\x01\x01B\f\n" +
	"\n" +
	"_create_byB\x0e\n" +
	"\f_create_timeB\x0e\n" +
	"\f_update_time\"\xcc\x01\n" +
	"\x1fCreatePermissionTemplateRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12%\n" +
	"\x0epermission_ids\x18\x04 \x03(\rR\rpermissionIdsB\x0e\n" +
	"\f_operator_id\"\xd7\x01\n" +
	"\x1eApplyPermissionTemplateRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12\x1f\n" +
	"\vtemplate_id\x18\x02 \x01(\rR\n" +
	"templateId\x12\x19\n" +
	"\brole_ids\x18\x03 \x03(\rR\aroleIds\x12+\n" +
	"\x11override_existing\x18\x04 \x01(\bR\x10overrideExistingB\x0e\n" +
	"\f_operator_id\"u\n" +
	"\x1eGetEffectivePermissionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12(\n" +
	"\rresource_type\x18\x02 \x01(\tH\x00R\fresourceType\x88\x01\x01B\x10\n" +
	"\x0e_resource_type\"\x96\x02\n" +
	"\x1fGetEffectivePermissionsResponse\x12A\n" +
	"\vpermissions\x18\x01 \x03(\v2\x1f.api.user.service.v1.PermissionR\vpermissions\x12n\n" +
	"\x0epermission_map\x18\x02 \x03(\v2G.api.user.service.v1.GetEffectivePermissionsResponse.PermissionMapEntryR\rpermissionMap\x1a@\n" +
	"\x12PermissionMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"\xbf\x01\n" +
	"\x1bClearPermissionCacheRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x02 \x01(\rH\x01R\x06userId\x88\x01\x01\x12\x1c\n" +
	"\arole_id\x18\x03 \x01(\rH\x02R\x06roleId\x88\x01\x01B\x0e\n" +
	"\f_operator_idB\n" +
	"\n" +
	"\b_user_idB\n" +
	"\n" +
	"\b_role_id\"\xc1\x01\n" +
	"\x1dExportPermissionConfigRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12%\n" +
	"\x0epermission_ids\x18\x02 \x03(\rR\rpermissionIds\x12+\n" +
	"\x11include_templates\x18\x03 \x01(\bR\x10includeTemplatesB\x0e\n" +
	"\f_operator_id\"A\n" +
	"\x1eExportPermissionConfigResponse\x12\x1f\n" +
	"\vconfig_data\x18\x01 \x01(\tR\n" +
	"configData\"\xbb\x01\n" +
	"\x1dImportPermissionConfigRequest\x12<\n" +
	"\voperator_id\x18\x01 \x01(\rB\x16\xbaG\x13\x18\x01\x92\x02\x0e操作用户IDH\x00R\n" +
	"operatorId\x88\x01\x01\x12\x1f\n" +
	"\vconfig_data\x18\x02 \x01(\tR\n" +
	"configData\x12+\n" +
	"\x11override_existing\x18\x03 \x01(\bR\x10overrideExistingB\x0e\n" +
	"\f_operator_id*X\n" +
	"\x0ePermissionType\x12\b\n" +
	"\x04MENU\x10\x00\x12\r\n" +
	"\tOPERATION\x10\x01\x12\a\n" +
	"\x03API\x10\x02\x12\b\n" +
	"\x04DATA\x10\x03\x12\f\n" +
	"\bFUNCTION\x10\x04\x12\f\n" +
	"\bRESOURCE\x10\x05*M\n" +
	"\x0fInheritanceRule\x12\x0f\n" +
	"\vINHERIT_ALL\x10\x00\x12\x15\n" +
	"\x11INHERIT_SPECIFIED\x10\x01\x12\x12\n" +
	"\x0eNO_INHERITANCE\x10\x022\xbe\x0e\n" +
	"\x11PermissionService\x12g\n" +
	"\x0eListPermission\x12&.pkg.utils.pagination.v1.PagingRequest\x1a+.api.user.service.v1.ListPermissionResponse\"\x00\x12]\n" +
	"\rGetPermission\x12).api.user.service.v1.GetPermissionRequest\x1a\x1f.api.user.service.v1.Permission\"\x00\x12Z\n" +
	"\x10CreatePermission\x12,.api.user.service.v1.CreatePermissionRequest\x1a\x16.google.protobuf.Empty\"\x00\x12Z\n" +
	"\x10UpdatePermission\x12,.api.user.service.v1.UpdatePermissionRequest\x1a\x16.google.protobuf.Empty\"\x00\x12Z\n" +
	"\x10DeletePermission\x12,.api.user.service.v1.DeletePermissionRequest\x1a\x16.google.protobuf.Empty\"\x00\x12R\n" +
	"\x11GetPermissionTree\x12\x16.google.protobuf.Empty\x1a#.api.user.service.v1.PermissionTree\"\x00\x12u\n" +
	"\x15GetPermissionTreeNode\x121.api.user.service.v1.GetPermissionTreeNodeRequest\x1a'.api.user.service.v1.PermissionTreeNode\"\x00\x12\x83\x01\n" +
	"\x16ListPermissionTreeNode\x122.api.user.service.v1.ListPermissionTreeNodeRequest\x1a3.api.user.service.v1.ListPermissionTreeNodeResponse\"\x00\x12d\n" +
	"\x15BatchAssignPermission\x121.api.user.service.v1.BatchAssignPermissionRequest\x1a\x16.google.protobuf.Empty\"\x00\x12d\n" +
	"\x15BatchRevokePermission\x121.api.user.service.v1.BatchRevokePermissionRequest\x1a\x16.google.protobuf.Empty\"\x00\x12n\n" +
	"\x0fCheckPermission\x12+.api.user.service.v1.CheckPermissionRequest\x1a,.api.user.service.v1.CheckPermissionResponse\"\x00\x12{\n" +
	"\x18CreatePermissionTemplate\x124.api.user.service.v1.CreatePermissionTemplateRequest\x1a'.api.user.service.v1.PermissionTemplate\"\x00\x12h\n" +
	"\x17ApplyPermissionTemplate\x123.api.user.service.v1.ApplyPermissionTemplateRequest\x1a\x16.google.protobuf.Empty\"\x00\x12\x86\x01\n" +
	"\x17GetEffectivePermissions\x123.api.user.service.v1.GetEffectivePermissionsRequest\x1a4.api.user.service.v1.GetEffectivePermissionsResponse\"\x00\x12b\n" +
	"\x14ClearPermissionCache\x120.api.user.service.v1.ClearPermissionCacheRequest\x1a\x16.google.protobuf.Empty\"\x00\x12\x83\x01\n" +
	"\x16ExportPermissionConfig\x122.api.user.service.v1.ExportPermissionConfigRequest\x1a3.api.user.service.v1.ExportPermissionConfigResponse\"\x00\x12f\n" +
	"\x16ImportPermissionConfig\x122.api.user.service.v1.ImportPermissionConfigRequest\x1a\x16.google.protobuf.Empty\"\x00B;\n" +
	"\x13api.user.service.v1P\x01Z\"om-platform/api/user/service/v1;v1b\x06proto3"

var (
	file_api_user_service_v1_permission_proto_rawDescOnce sync.Once
	file_api_user_service_v1_permission_proto_rawDescData []byte
)

func file_api_user_service_v1_permission_proto_rawDescGZIP() []byte {
	file_api_user_service_v1_permission_proto_rawDescOnce.Do(func() {
		file_api_user_service_v1_permission_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_user_service_v1_permission_proto_rawDesc), len(file_api_user_service_v1_permission_proto_rawDesc)))
	})
	return file_api_user_service_v1_permission_proto_rawDescData
}

var file_api_user_service_v1_permission_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_user_service_v1_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_api_user_service_v1_permission_proto_goTypes = []any{
	(PermissionType)(0),                        // 0: api.user.service.v1.PermissionType
	(InheritanceRule)(0),                       // 1: api.user.service.v1.InheritanceRule
	(PermissionCondition_ConditionOperator)(0), // 2: api.user.service.v1.PermissionCondition.ConditionOperator
	(*PermissionCondition)(nil),                // 3: api.user.service.v1.PermissionCondition
	(*Permission)(nil),                         // 4: api.user.service.v1.Permission
	(*PermissionTree)(nil),                     // 5: api.user.service.v1.PermissionTree
	(*PermissionTreeNode)(nil),                 // 6: api.user.service.v1.PermissionTreeNode
	(*ListPermissionResponse)(nil),             // 7: api.user.service.v1.ListPermissionResponse
	(*GetPermissionRequest)(nil),               // 8: api.user.service.v1.GetPermissionRequest
	(*CreatePermissionRequest)(nil),            // 9: api.user.service.v1.CreatePermissionRequest
	(*UpdatePermissionRequest)(nil),            // 10: api.user.service.v1.UpdatePermissionRequest
	(*DeletePermissionRequest)(nil),            // 11: api.user.service.v1.DeletePermissionRequest
	(*GetPermissionTreeNodeRequest)(nil),       // 12: api.user.service.v1.GetPermissionTreeNodeRequest
	(*ListPermissionTreeNodeRequest)(nil),      // 13: api.user.service.v1.ListPermissionTreeNodeRequest
	(*ListPermissionTreeNodeResponse)(nil),     // 14: api.user.service.v1.ListPermissionTreeNodeResponse
	(*BatchAssignPermissionRequest)(nil),       // 15: api.user.service.v1.BatchAssignPermissionRequest
	(*BatchRevokePermissionRequest)(nil),       // 16: api.user.service.v1.BatchRevokePermissionRequest
	(*CheckPermissionRequest)(nil),             // 17: api.user.service.v1.CheckPermissionRequest
	(*CheckPermissionResponse)(nil),            // 18: api.user.service.v1.CheckPermissionResponse
	(*PermissionTemplate)(nil),                 // 19: api.user.service.v1.PermissionTemplate
	(*CreatePermissionTemplateRequest)(nil),    // 20: api.user.service.v1.CreatePermissionTemplateRequest
	(*ApplyPermissionTemplateRequest)(nil),     // 21: api.user.service.v1.ApplyPermissionTemplateRequest
	(*GetEffectivePermissionsRequest)(nil),     // 22: api.user.service.v1.GetEffectivePermissionsRequest
	(*GetEffectivePermissionsResponse)(nil),    // 23: api.user.service.v1.GetEffectivePermissionsResponse
	(*ClearPermissionCacheRequest)(nil),        // 24: api.user.service.v1.ClearPermissionCacheRequest
	(*ExportPermissionConfigRequest)(nil),      // 25: api.user.service.v1.ExportPermissionConfigRequest
	(*ExportPermissionConfigResponse)(nil),     // 26: api.user.service.v1.ExportPermissionConfigResponse
	(*ImportPermissionConfigRequest)(nil),      // 27: api.user.service.v1.ImportPermissionConfigRequest
	nil,                                        // 28: api.user.service.v1.CheckPermissionRequest.ContextEntry
	nil,                                        // 29: api.user.service.v1.GetEffectivePermissionsResponse.PermissionMapEntry
	(*timestamppb.Timestamp)(nil),              // 30: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),              // 31: google.protobuf.FieldMask
	(*v1.PagingRequest)(nil),                   // 32: pkg.utils.pagination.v1.PagingRequest
	(*emptypb.Empty)(nil),                      // 33: google.protobuf.Empty
}
var file_api_user_service_v1_permission_proto_depIdxs = []int32{
	2,  // 0: api.user.service.v1.PermissionCondition.operator:type_name -> api.user.service.v1.PermissionCondition.ConditionOperator
	0,  // 1: api.user.service.v1.Permission.type:type_name -> api.user.service.v1.PermissionType
	3,  // 2: api.user.service.v1.Permission.conditions:type_name -> api.user.service.v1.PermissionCondition
	1,  // 3: api.user.service.v1.Permission.inheritance_rule:type_name -> api.user.service.v1.InheritanceRule
	4,  // 4: api.user.service.v1.Permission.children:type_name -> api.user.service.v1.Permission
	30, // 5: api.user.service.v1.Permission.create_time:type_name -> google.protobuf.Timestamp
	30, // 6: api.user.service.v1.Permission.update_time:type_name -> google.protobuf.Timestamp
	30, // 7: api.user.service.v1.Permission.delete_time:type_name -> google.protobuf.Timestamp
	30, // 8: api.user.service.v1.Permission.expire_time:type_name -> google.protobuf.Timestamp
	6,  // 9: api.user.service.v1.PermissionTree.nodes:type_name -> api.user.service.v1.PermissionTreeNode
	0,  // 10: api.user.service.v1.PermissionTreeNode.type:type_name -> api.user.service.v1.PermissionType
	6,  // 11: api.user.service.v1.PermissionTreeNode.children:type_name -> api.user.service.v1.PermissionTreeNode
	4,  // 12: api.user.service.v1.ListPermissionResponse.items:type_name -> api.user.service.v1.Permission
	4,  // 13: api.user.service.v1.CreatePermissionRequest.data:type_name -> api.user.service.v1.Permission
	4,  // 14: api.user.service.v1.UpdatePermissionRequest.data:type_name -> api.user.service.v1.Permission
	31, // 15: api.user.service.v1.UpdatePermissionRequest.update_mask:type_name -> google.protobuf.FieldMask
	6,  // 16: api.user.service.v1.ListPermissionTreeNodeResponse.items:type_name -> api.user.service.v1.PermissionTreeNode
	28, // 17: api.user.service.v1.CheckPermissionRequest.context:type_name -> api.user.service.v1.CheckPermissionRequest.ContextEntry
	4,  // 18: api.user.service.v1.PermissionTemplate.permissions:type_name -> api.user.service.v1.Permission
	30, // 19: api.user.service.v1.PermissionTemplate.create_time:type_name -> google.protobuf.Timestamp
	30, // 20: api.user.service.v1.PermissionTemplate.update_time:type_name -> google.protobuf.Timestamp
	4,  // 21: api.user.service.v1.GetEffectivePermissionsResponse.permissions:type_name -> api.user.service.v1.Permission
	29, // 22: api.user.service.v1.GetEffectivePermissionsResponse.permission_map:type_name -> api.user.service.v1.GetEffectivePermissionsResponse.PermissionMapEntry
	32, // 23: api.user.service.v1.PermissionService.ListPermission:input_type -> pkg.utils.pagination.v1.PagingRequest
	8,  // 24: api.user.service.v1.PermissionService.GetPermission:input_type -> api.user.service.v1.GetPermissionRequest
	9,  // 25: api.user.service.v1.PermissionService.CreatePermission:input_type -> api.user.service.v1.CreatePermissionRequest
	10, // 26: api.user.service.v1.PermissionService.UpdatePermission:input_type -> api.user.service.v1.UpdatePermissionRequest
	11, // 27: api.user.service.v1.PermissionService.DeletePermission:input_type -> api.user.service.v1.DeletePermissionRequest
	33, // 28: api.user.service.v1.PermissionService.GetPermissionTree:input_type -> google.protobuf.Empty
	12, // 29: api.user.service.v1.PermissionService.GetPermissionTreeNode:input_type -> api.user.service.v1.GetPermissionTreeNodeRequest
	13, // 30: api.user.service.v1.PermissionService.ListPermissionTreeNode:input_type -> api.user.service.v1.ListPermissionTreeNodeRequest
	15, // 31: api.user.service.v1.PermissionService.BatchAssignPermission:input_type -> api.user.service.v1.BatchAssignPermissionRequest
	16, // 32: api.user.service.v1.PermissionService.BatchRevokePermission:input_type -> api.user.service.v1.BatchRevokePermissionRequest
	17, // 33: api.user.service.v1.PermissionService.CheckPermission:input_type -> api.user.service.v1.CheckPermissionRequest
	20, // 34: api.user.service.v1.PermissionService.CreatePermissionTemplate:input_type -> api.user.service.v1.CreatePermissionTemplateRequest
	21, // 35: api.user.service.v1.PermissionService.ApplyPermissionTemplate:input_type -> api.user.service.v1.ApplyPermissionTemplateRequest
	22, // 36: api.user.service.v1.PermissionService.GetEffectivePermissions:input_type -> api.user.service.v1.GetEffectivePermissionsRequest
	24, // 37: api.user.service.v1.PermissionService.ClearPermissionCache:input_type -> api.user.service.v1.ClearPermissionCacheRequest
	25, // 38: api.user.service.v1.PermissionService.ExportPermissionConfig:input_type -> api.user.service.v1.ExportPermissionConfigRequest
	27, // 39: api.user.service.v1.PermissionService.ImportPermissionConfig:input_type -> api.user.service.v1.ImportPermissionConfigRequest
	7,  // 40: api.user.service.v1.PermissionService.ListPermission:output_type -> api.user.service.v1.ListPermissionResponse
	4,  // 41: api.user.service.v1.PermissionService.GetPermission:output_type -> api.user.service.v1.Permission
	33, // 42: api.user.service.v1.PermissionService.CreatePermission:output_type -> google.protobuf.Empty
	33, // 43: api.user.service.v1.PermissionService.UpdatePermission:output_type -> google.protobuf.Empty
	33, // 44: api.user.service.v1.PermissionService.DeletePermission:output_type -> google.protobuf.Empty
	5,  // 45: api.user.service.v1.PermissionService.GetPermissionTree:output_type -> api.user.service.v1.PermissionTree
	6,  // 46: api.user.service.v1.PermissionService.GetPermissionTreeNode:output_type -> api.user.service.v1.PermissionTreeNode
	14, // 47: api.user.service.v1.PermissionService.ListPermissionTreeNode:output_type -> api.user.service.v1.ListPermissionTreeNodeResponse
	33, // 48: api.user.service.v1.PermissionService.BatchAssignPermission:output_type -> google.protobuf.Empty
	33, // 49: api.user.service.v1.PermissionService.BatchRevokePermission:output_type -> google.protobuf.Empty
	18, // 50: api.user.service.v1.PermissionService.CheckPermission:output_type -> api.user.service.v1.CheckPermissionResponse
	19, // 51: api.user.service.v1.PermissionService.CreatePermissionTemplate:output_type -> api.user.service.v1.PermissionTemplate
	33, // 52: api.user.service.v1.PermissionService.ApplyPermissionTemplate:output_type -> google.protobuf.Empty
	23, // 53: api.user.service.v1.PermissionService.GetEffectivePermissions:output_type -> api.user.service.v1.GetEffectivePermissionsResponse
	33, // 54: api.user.service.v1.PermissionService.ClearPermissionCache:output_type -> google.protobuf.Empty
	26, // 55: api.user.service.v1.PermissionService.ExportPermissionConfig:output_type -> api.user.service.v1.ExportPermissionConfigResponse
	33, // 56: api.user.service.v1.PermissionService.ImportPermissionConfig:output_type -> google.protobuf.Empty
	40, // [40:57] is the sub-list for method output_type
	23, // [23:40] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_api_user_service_v1_permission_proto_init() }
func file_api_user_service_v1_permission_proto_init() {
	if File_api_user_service_v1_permission_proto != nil {
		return
	}
	file_api_user_service_v1_permission_proto_msgTypes[1].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[6].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[7].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[8].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[10].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[12].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[13].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[16].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[17].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[18].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[19].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[21].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[22].OneofWrappers = []any{}
	file_api_user_service_v1_permission_proto_msgTypes[24].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_user_service_v1_permission_proto_rawDesc), len(file_api_user_service_v1_permission_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_user_service_v1_permission_proto_goTypes,
		DependencyIndexes: file_api_user_service_v1_permission_proto_depIdxs,
		EnumInfos:         file_api_user_service_v1_permission_proto_enumTypes,
		MessageInfos:      file_api_user_service_v1_permission_proto_msgTypes,
	}.Build()
	File_api_user_service_v1_permission_proto = out.File
	file_api_user_service_v1_permission_proto_goTypes = nil
	file_api_user_service_v1_permission_proto_depIdxs = nil
}
