syntax = "proto3";

package api.user.service.v1;

import "gnostic/openapi/v3/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

import "om-platform/pkg/utils/pagination/v1";

option go_package = "om-platform/api/user/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.user.service.v1";

// 用户偏好设置服务
service UserPreferenceService {
  // 获取用户偏好设置
  rpc GetUserPreference (GetUserPreferenceRequest) returns (UserPreference) {}
  
  // 更新用户偏好设置
  rpc UpdateUserPreference (UpdateUserPreferenceRequest) returns (google.protobuf.Empty) {}
  
  // 重置用户偏好设置
  rpc ResetUserPreference (ResetUserPreferenceRequest) returns (google.protobuf.Empty) {}
  
  // 获取用户界面设置
  rpc GetUserInterfaceSettings (GetUserInterfaceSettingsRequest) returns (UserInterfaceSettings) {}

  
  // 更新用户界面设置
  rpc UpdateUserInterfaceSettings (UpdateUserInterfaceSettingsRequest) returns (google.protobuf.Empty) {}
  
  // 获取用户通知设置
  rpc GetUserNotificationSettings (GetUserNotificationSettingsRequest) returns (UserNotificationSettings) {}
  
  // 更新用户通知设置
  rpc UpdateUserNotificationSettings (UpdateUserNotificationSettingsRequest) returns (google.protobuf.Empty) {}
  
  // 获取用户区域设置
  rpc GetUserLocaleSettings (GetUserLocaleSettingsRequest) returns (UserLocaleSettings) {}
  
  // 更新用户区域设置
  rpc UpdateUserLocaleSettings (UpdateUserLocaleSettingsRequest) returns (google.protobuf.Empty) {}
  
  // 获取用户安全设置
  rpc GetUserSecuritySettings (GetUserSecuritySettingsRequest) returns (UserSecuritySettings) {}
  
  // 更新用户安全设置
  rpc UpdateUserSecuritySettings (UpdateUserSecuritySettingsRequest) returns (google.protobuf.Empty) {}
  
  // 导出用户偏好设置
  rpc ExportUserPreference (ExportUserPreferenceRequest) returns (ExportUserPreferenceResponse) {}
  
  // 导入用户偏好设置
  rpc ImportUserPreference (ImportUserPreferenceRequest) returns (google.protobuf.Empty) {}
  
  // 批量获取用户偏好设置
  rpc BatchGetUserPreference (BatchGetUserPreferenceRequest) returns (BatchGetUserPreferenceResponse) {}
  
  // 批量更新用户偏好设置
  rpc BatchUpdateUserPreference (BatchUpdateUserPreferenceRequest) returns (google.protobuf.Empty) {}
}

// 用户偏好设置
message UserPreference {
  uint32 user_id = 1 [
    json_name = "userId",
    (gnostic.openapi.v3.property) = {description: "用户ID"}
  ]; // 用户ID
  
  UserInterfaceSettings interface_settings = 2 [
    json_name = "interfaceSettings",
    (gnostic.openapi.v3.property) = {description: "界面设置"}
  ]; // 界面设置
  
  UserNotificationSettings notification_settings = 3 [
    json_name = "notificationSettings",
    (gnostic.openapi.v3.property) = {description: "通知设置"}
  ]; // 通知设置
  
  UserLocaleSettings locale_settings = 4 [
    json_name = "localeSettings",
    (gnostic.openapi.v3.property) = {description: "区域设置"}
  ]; // 区域设置
  
  UserSecuritySettings security_settings = 5 [
    json_name = "securitySettings",
    (gnostic.openapi.v3.property) = {description: "安全设置"}
  ]; // 安全设置
  
  google.protobuf.Struct custom_settings = 6 [
    json_name = "customSettings",
    (gnostic.openapi.v3.property) = {description: "自定义设置(JSON格式)"}
  ]; // 自定义设置(JSON格式)
  
  google.protobuf.Timestamp update_time = 7 [
    json_name = "updateTime",
    (gnostic.openapi.v3.property) = {description: "更新时间"}
  ]; // 更新时间
}

// 用户界面设置
message UserInterfaceSettings {
  string theme = 1; // 主题(LIGHT/DARK/SYSTEM)
  string layout = 2; // 布局(DEFAULT/COMPACT/COMFORTABLE)
  string primary_color = 3; // 主色调
  bool enable_animations = 4; // 启用动画
  string default_view = 5; // 默认视图
  uint32 items_per_page = 6; // 每页项目数
  bool show_welcome_screen = 7; // 显示欢迎屏幕
  repeated string favorite_menus = 8; // 收藏菜单
  repeated string recent_items = 9; // 最近访问项目
  map<string, string> component_settings = 10; // 组件设置
}

// 用户通知设置
message UserNotificationSettings {
  bool enable_email_notifications = 1; // 启用邮件通知
  bool enable_sms_notifications = 2; // 启用短信通知
  bool enable_push_notifications = 3; // 启用推送通知
  bool enable_system_notifications = 4; // 启用系统通知
  
  message NotificationTypeSettings {
    bool enabled = 1; // 是否启用
    repeated string channels = 2; // 通知渠道(EMAIL/SMS/PUSH/SYSTEM)
  }
  
  map<string, NotificationTypeSettings> notification_types = 5; // 通知类型设置
  repeated string muted_topics = 6; // 已静音主题
  string notification_frequency = 7; // 通知频率(IMMEDIATE/DAILY/WEEKLY)
  string quiet_hours_start = 8; // 免打扰时段开始
  string quiet_hours_end = 9; // 免打扰时段结束
}

// 用户区域设置
message UserLocaleSettings {
  string language = 1; // 语言
  string timezone = 2; // 时区
  string date_format = 3; // 日期格式
  string time_format = 4; // 时间格式
  string first_day_of_week = 5; // 每周第一天
  string number_format = 6; // 数字格式
  string currency = 7; // 货币
}

// 用户安全设置
message UserSecuritySettings {
  bool enable_login_notification = 1; // 启用登录通知
  bool enable_two_factor_auth = 2; // 启用双因素认证
  string two_factor_auth_type = 3; // 双因素认证类型(TOTP/SMS/EMAIL)
  bool enable_login_verification = 4; // 启用登录验证
  bool enable_ip_restriction = 5; // 启用IP限制
  repeated string allowed_ips = 6; // 允许的IP
  uint32 session_timeout_minutes = 7; // 会话超时时间(分钟)
  bool enable_concurrent_login = 8; // 允许并发登录
  uint32 max_concurrent_sessions = 9; // 最大并发会话数
  bool enable_password_expiry = 10; // 启用密码过期
  uint32 password_expiry_days = 11; // 密码过期天数
}

// 获取用户偏好设置请求
message GetUserPreferenceRequest {
  uint32 user_id = 1; // 用户ID
}

// 更新用户偏好设置请求
message UpdateUserPreferenceRequest {
  uint32 user_id = 1; // 用户ID
  UserPreference preference = 2; // 偏好设置
}

// 重置用户偏好设置请求
message ResetUserPreferenceRequest {
  uint32 user_id = 1; // 用户ID
  repeated string reset_sections = 2; // 重置部分(INTERFACE/NOTIFICATION/LOCALE/SECURITY/CUSTOM/ALL)
}

// 获取用户界面设置请求
message GetUserInterfaceSettingsRequest {
  uint32 user_id = 1; // 用户ID
}

// 更新用户界面设置请求
message UpdateUserInterfaceSettingsRequest {
  uint32 user_id = 1; // 用户ID
  UserInterfaceSettings settings = 2; // 界面设置
}

// 获取用户通知设置请求
message GetUserNotificationSettingsRequest {
  uint32 user_id = 1; // 用户ID
}

// 更新用户通知设置请求
message UpdateUserNotificationSettingsRequest {
  uint32 user_id = 1; // 用户ID
  UserNotificationSettings settings = 2; // 通知设置
}

// 获取用户区域设置请求
message GetUserLocaleSettingsRequest {
  uint32 user_id = 1; // 用户ID
}

// 更新用户区域设置请求
message UpdateUserLocaleSettingsRequest {
  uint32 user_id = 1; // 用户ID
  UserLocaleSettings settings = 2; // 区域设置
}

// 获取用户安全设置请求
message GetUserSecuritySettingsRequest {
  uint32 user_id = 1; // 用户ID
}

// 更新用户安全设置请求
message UpdateUserSecuritySettingsRequest {
  uint32 user_id = 1; // 用户ID
  UserSecuritySettings settings = 2; // 安全设置
}

// 导出用户偏好设置请求
message ExportUserPreferenceRequest {
  uint32 user_id = 1; // 用户ID
  repeated string export_sections = 2; // 导出部分(INTERFACE/NOTIFICATION/LOCALE/SECURITY/CUSTOM/ALL)
}

// 导出用户偏好设置响应
message ExportUserPreferenceResponse {
  string export_data = 1; // 导出数据(JSON格式)
  google.protobuf.Timestamp export_time = 2; // 导出时间
}

// 导入用户偏好设置请求
message ImportUserPreferenceRequest {
  uint32 user_id = 1 [
    json_name = "userId",
    (gnostic.openapi.v3.property) = {description: "用户ID"}
  ]; // 用户ID
  
  string import_data = 2 [
    json_name = "importData",
    (gnostic.openapi.v3.property) = {description: "导入数据(JSON格式)"}
  ]; // 导入数据(JSON格式)
  
  repeated string import_sections = 3 [
    json_name = "importSections",
    (gnostic.openapi.v3.property) = {description: "导入部分(INTERFACE/NOTIFICATION/LOCALE/SECURITY/CUSTOM/ALL)"}
  ]; // 导入部分(INTERFACE/NOTIFICATION/LOCALE/SECURITY/CUSTOM/ALL)
  
  bool override_existing = 4 [
    json_name = "overrideExisting",
    (gnostic.openapi.v3.property) = {description: "覆盖现有设置"}
  ]; // 覆盖现有设置
}

// 批量获取用户偏好设置请求
message BatchGetUserPreferenceRequest {
  repeated uint32 user_ids = 1 [
    json_name = "userIds",
    (gnostic.openapi.v3.property) = {description: "用户ID列表"}
  ]; // 用户ID列表
}

// 批量获取用户偏好设置响应
message BatchGetUserPreferenceResponse {
  repeated UserPreference items = 1 [
    (gnostic.openapi.v3.property) = {description: "用户偏好设置列表"}
  ]; // 用户偏好设置列表
}

// 批量更新用户偏好设置请求
message BatchUpdateUserPreferenceRequest {
  optional uint32 operator_id = 1 [
    (gnostic.openapi.v3.property) = {description: "操作用户ID", read_only: true},
    json_name = "operatorId"
  ]; // 操作用户ID
  
  repeated UserPreference items = 2 [
    (gnostic.openapi.v3.property) = {description: "要更新的用户偏好设置列表"}
  ]; // 要更新的用户偏好设置列表
  
  google.protobuf.FieldMask update_mask = 3 [
    (gnostic.openapi.v3.property) = {
      description: "要更新的字段列表",
      example: {yaml : "user_id,interface_settings,notification_settings"}
    },
    json_name = "updateMask"
  ]; // 要更新的字段列表
}