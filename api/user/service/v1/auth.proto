syntax = "proto3";

package api.user.service.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "gnostic/openapi/v3/annotations.proto";

import "pkg/utils/pagination/v1/pagination.proto";

option go_package = "om-platform/api/user/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.user.service.v1";

// 认证与会话管理服务
// 提供用户认证、令牌管理、会话控制和安全相关功能
service AuthService {
  // ===== 认证核心接口 =====
  // 用户登录
  // 支持多种认证方式，包括密码、LDAP、SSO和OAuth2
  rpc Login (LoginRequest) returns (LoginResponse) {}
  
  // 用户登出
  // 终止当前会话并使相关令牌失效
  rpc Logout (LogoutRequest) returns (google.protobuf.Empty) {}
  
  // 刷新令牌
  // 使用刷新令牌获取新的访问令牌，延长会话有效期
  rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse) {}
  
  // 验证令牌
  // 检查令牌有效性并返回关联的用户信息和权限
  rpc ValidateToken (ValidateTokenRequest) returns (ValidateTokenResponse) {}
  
  // ===== 密码管理接口 =====
  // 修改密码
  // 用户主动修改自己的密码，需要提供旧密码验证
  rpc ChangePassword (ChangePasswordRequest) returns (google.protobuf.Empty) {}
  
  // 重置密码
  // 管理员或通过重置流程重置用户密码，无需旧密码
  rpc ResetPassword (ResetPasswordRequest) returns (ResetPasswordResponse) {}
  
  // ===== 会话管理接口 =====
  // 创建会话
  // 为用户创建新的会话，通常在认证成功后自动创建
  rpc CreateSession (CreateSessionRequest) returns (CreateSessionResponse) {}
  
  // 获取会话详情
  // 根据会话ID获取会话完整信息
  rpc GetSession (GetSessionRequest) returns (SessionInfo) {}
  
  // 获取当前会话信息
  // 根据当前令牌获取关联的会话信息
  rpc GetCurrentSession (GetCurrentSessionRequest) returns (SessionInfo) {}
  
  // 更新会话
  // 更新会话元数据或延长会话有效期
  rpc UpdateSession (UpdateSessionRequest) returns (google.protobuf.Empty) {}
  
  // 终止会话
  // 主动终止指定会话
  rpc TerminateSession (TerminateSessionRequest) returns (google.protobuf.Empty) {}
  
  // 批量终止会话
  // 支持按用户、租户或会话类型批量终止会话
  rpc BatchTerminateSessions (BatchTerminateSessionsRequest) returns (BatchTerminateSessionsResponse) {}
  
  // 查询会话列表
  // 支持多种过滤条件查询会话
  rpc ListSessions (ListSessionsRequest) returns (ListSessionsResponse) {}
  
  // 验证会话有效性
  // 检查会话是否有效并返回相关信息
  rpc ValidateSession (ValidateSessionRequest) returns (ValidateSessionResponse) {}
  
  // 延长会话有效期
  // 延长指定会话的过期时间
  rpc ExtendSession (ExtendSessionRequest) returns (ExtendSessionResponse) {}
  
  // 获取会话统计信息
  // 获取系统会话的统计数据，支持多种维度
  rpc GetSessionStats (GetSessionStatsRequest) returns (GetSessionStatsResponse) {}
  
  // 获取会话活动日志
  // 获取特定会话的活动历史记录
  rpc GetSessionActivityLogs (GetSessionActivityLogsRequest) returns (GetSessionActivityLogsResponse) {}
  
  // 会话属性管理
  // 统一管理会话的自定义属性
  rpc ManageSessionAttribute (ManageSessionAttributeRequest) returns (ManageSessionAttributeResponse) {}
  
  // ===== 安全与审计接口 =====
  // 获取登录历史记录
  // 查询用户的登录历史，包括成功和失败的尝试
  rpc GetLoginHistory (GetLoginHistoryRequest) returns (GetLoginHistoryResponse) {}
  
  // 双因素认证管理
  // 统一管理双因素认证的启用、验证和禁用
  rpc Manage2FA (Manage2FARequest) returns (Manage2FAResponse) {}
  
  // 验证码管理
  // 统一管理各类验证码的生成和验证
  rpc ManageCaptcha (ManageCaptchaRequest) returns (ManageCaptchaResponse) {}
}

// ===== 共享基础类型 =====
// 基础请求信息
// 包含通用的客户端环境信息，可被多种请求复用
message BaseRequestInfo {
  string client_ip = 1;    // 客户端IP地址
  string user_agent = 2;   // 用户代理字符串
  string device_info = 3;  // 设备详细信息
}

// 基础会话信息
// 包含会话的核心标识信息，可被多种响应复用
message BaseSessionInfo {
  string session_id = 1;  // 会话唯一标识
  uint32 user_id = 2;     // 关联的用户ID
  string username = 3;    // 用户名
}

// ===== 认证相关消息 =====
// 登录请求
message LoginRequest {
  string username = 1;     // 用户名
  string password = 2;     // 密码
  string captcha_id = 3;   // 验证码ID
  string captcha_code = 4; // 验证码内容
  string tenant_code = 5;  // 租户编码(可选)
  string client_ip = 6;    // 客户端IP
  string user_agent = 7;   // 用户代理
  string device_info = 8;  // 设备信息
  string login_type = 9;   // 登录类型(PASSWORD/LDAP/SSO/OAUTH2)
}

// 登录响应
message LoginResponse {
  string access_token = 1;       // 访问令牌
  string refresh_token = 2;      // 刷新令牌
  uint32 expires_in = 3;         // 过期时间(秒)
  string token_type = 4;         // 令牌类型
  uint32 user_id = 5;            // 用户ID
  string username = 6;           // 用户名
  string real_name = 7;          // 真实姓名
  string avatar = 8;             // 头像URL
  repeated string permissions = 9; // 权限列表
  repeated string roles = 10;     // 角色列表
  bool require_2fa = 11;         // 是否需要双因素认证
  string session_id = 12;        // 会话ID
}

// 登出请求
message LogoutRequest {
  string session_id = 1; // 会话ID
}

// 令牌相关
message RefreshTokenRequest {
  string refresh_token = 1; // 刷新令牌
}

message RefreshTokenResponse {
  string access_token = 1;  // 新的访问令牌
  string refresh_token = 2; // 新的刷新令牌
  uint32 expires_in = 3;    // 过期时间(秒)
  string token_type = 4;    // 令牌类型
}

message ValidateTokenRequest {
  string token = 1; // 待验证的令牌
}

message ValidateTokenResponse {
  bool valid = 1;                // 是否有效
  uint32 user_id = 2;           // 用户ID
  string username = 3;          // 用户名
  repeated string permissions = 4; // 权限列表
  repeated string roles = 5;     // 角色列表
  uint32 tenant_id = 6;         // 租户ID
}

// 密码管理
message ChangePasswordRequest {
  optional uint32 operator_id = 1 [
    (gnostic.openapi.v3.property) = {description: "操作用户ID", read_only: true},
    json_name = "operatorId"
  ]; // 操作用户ID
  uint32 user_id = 2;      // 用户ID
  string old_password = 3; // 旧密码
  string new_password = 4; // 新密码
}

message ResetPasswordRequest {
  optional uint32 operator_id = 1 [
    (gnostic.openapi.v3.property) = {description: "操作用户ID", read_only: true},
    json_name = "operatorId"
  ]; // 操作用户ID
  uint32 user_id = 2;     // 用户ID
  string new_password = 3; // 新密码(可选，如果不提供则自动生成)
  string reset_token = 4;  // 重置令牌(可选，用于自助重置流程)
}

// 重置密码响应
message ResetPasswordResponse {
  string password = 1 [json_name = "password", (gnostic.openapi.v3.property) = {description: "重置后的密码"}]; // 重置后的密码
}

// ===== 会话管理相关消息 =====
// 会话信息
message SessionInfo {
  string session_id = 1;       // 会话ID
  uint32 user_id = 2;          // 用户ID
  string username = 3;         // 用户名
  string client_ip = 4;        // 客户端IP
  string user_agent = 5;       // 用户代理
  string device_info = 6;      // 设备信息
  string login_type = 7;       // 登录类型
  uint32 tenant_id = 8;        // 租户ID
  string tenant_name = 9;      // 租户名称
  google.protobuf.Timestamp created_at = 10;      // 创建时间
  google.protobuf.Timestamp last_activity_at = 11; // 最后活动时间
  google.protobuf.Timestamp expires_at = 12;      // 过期时间
  bool is_active = 13;         // 是否活跃
  map<string, string> metadata = 14; // 元数据
  repeated string permissions = 15;   // 权限列表
  repeated string roles = 16;         // 角色列表
  bool is_current = 17;        // 是否为当前会话
}

// 创建会话
message CreateSessionRequest {
  uint32 user_id = 1;         // 用户ID
  string client_ip = 2;       // 客户端IP
  string user_agent = 3;      // 用户代理
  string device_info = 4;     // 设备信息
  string session_type = 5;    // 会话类型(WEB/MOBILE/API/CLI)
  uint32 tenant_id = 6;       // 租户ID
  map<string, string> metadata = 7; // 元数据
  uint32 ttl = 8;             // 生存时间(秒)
}

message CreateSessionResponse {
  string session_id = 1;       // 会话ID
  google.protobuf.Timestamp created_at = 2; // 创建时间
  google.protobuf.Timestamp expires_at = 3; // 过期时间
  string token = 4;           // 会话令牌
}

// 获取会话
message GetSessionRequest {
  string session_id = 1; // 会话ID
}

message GetCurrentSessionRequest {
  string token = 1; // 访问令牌
}

// 更新会话
message UpdateSessionRequest {
  string session_id = 1;       // 会话ID
  map<string, string> metadata = 2; // 元数据
  uint32 ttl = 3;             // 生存时间(秒)
}

// 终止会话
message TerminateSessionRequest {
  string session_id = 1; // 会话ID
  string reason = 2;     // 终止原因(可选)
}

// 批量终止会话
message BatchTerminateSessionsRequest {
  repeated string session_ids = 1; // 会话ID列表
  uint32 user_id = 2;             // 用户ID(可选，终止指定用户的所有会话)
  uint32 tenant_id = 3;           // 租户ID(可选，终止指定租户的所有会话)
  string session_type = 4;        // 会话类型(可选，终止指定类型的所有会话)
  string reason = 5;              // 终止原因
  string current_session_id = 6;  // 当前会话ID(保留，不终止)
}

message BatchTerminateSessionsResponse {
  uint32 terminated_count = 1;           // 终止数量
  repeated string failed_session_ids = 2; // 失败的会话ID列表
}

// 查询会话列表
message ListSessionsRequest {
  pkg.utils.pagination.v1.PagingRequest paging = 1; // 分页请求
  uint32 user_id = 2;       // 用户ID(可选)
  uint32 tenant_id = 3;     // 租户ID(可选)
  string session_type = 4;  // 会话类型(可选)
  bool active_only = 5;     // 仅活跃会话
  google.protobuf.Timestamp start_time = 6; // 开始时间
  google.protobuf.Timestamp end_time = 7;   // 结束时间
}

message ListSessionsResponse {
  pkg.utils.pagination.v1.PagingResponse paging = 1; // 分页响应
  repeated SessionInfo sessions = 2; // 会话列表
}

// 验证会话有效性
message ValidateSessionRequest {
  string session_id = 1; // 会话ID
  string token = 2;      // 会话令牌
}

message ValidateSessionResponse {
  bool valid = 1;         // 是否有效
  string reason = 2;      // 无效原因
  SessionInfo session = 3; // 会话信息
}

// 延长会话有效期
message ExtendSessionRequest {
  string session_id = 1; // 会话ID
  uint32 ttl = 2;        // 延长时间(秒)
}

message ExtendSessionResponse {
  google.protobuf.Timestamp new_expires_at = 1; // 新的过期时间
}

// 获取会话统计信息
message GetSessionStatsRequest {
  uint32 tenant_id = 1;    // 租户ID(可选)
  string session_type = 2; // 会话类型(可选)
  google.protobuf.Timestamp start_time = 3; // 开始时间
  google.protobuf.Timestamp end_time = 4;   // 结束时间
}

message GetSessionStatsResponse {
  uint32 total_sessions = 1;      // 总会话数
  uint32 active_sessions = 2;     // 活跃会话数
  uint32 expired_sessions = 3;    // 过期会话数
  uint32 terminated_sessions = 4; // 终止会话数
  map<string, uint32> sessions_by_type = 5;   // 按类型统计
  map<uint32, uint32> sessions_by_tenant = 6; // 按租户统计
  repeated SessionTimeSeriesData time_series = 7; // 时间序列数据
}

// 会话时间序列数据
message SessionTimeSeriesData {
  google.protobuf.Timestamp timestamp = 1; // 时间戳
  uint32 active_count = 2;  // 活跃数量
  uint32 new_count = 3;     // 新增数量
  uint32 expired_count = 4; // 过期数量
}

// 获取会话活动日志
message GetSessionActivityLogsRequest {
  string session_id = 1; // 会话ID
  pkg.utils.pagination.v1.PagingRequest paging = 2; // 分页请求
  google.protobuf.Timestamp start_time = 3; // 开始时间
  google.protobuf.Timestamp end_time = 4;   // 结束时间
}

message GetSessionActivityLogsResponse {
  pkg.utils.pagination.v1.PagingResponse paging = 1; // 分页响应
  repeated SessionActivityLog logs = 2; // 日志列表
}

// 会话活动日志
message SessionActivityLog {
  string log_id = 1;       // 日志ID
  string session_id = 2;   // 会话ID
  uint32 user_id = 3;      // 用户ID
  string activity_type = 4; // 活动类型
  string resource_type = 5; // 资源类型
  string resource_id = 6;   // 资源ID
  string client_ip = 7;     // 客户端IP
  google.protobuf.Timestamp timestamp = 8; // 时间戳
  google.protobuf.Struct details = 9;      // 详情
}

// 会话属性管理
message ManageSessionAttributeRequest {
  string session_id = 1; // 会话ID
  string key = 2;        // 键
  string value = 3;      // 值(设置时使用，为空时表示获取，null时表示删除)
  string operation = 4;  // 操作类型(SET/GET/DELETE)
}

message ManageSessionAttributeResponse {
  string value = 1;  // 值(GET操作时返回)
  bool success = 2;  // 操作是否成功
}

// ===== 登录历史相关消息 =====
message GetLoginHistoryRequest {
  uint32 user_id = 1; // 用户ID
  pkg.utils.pagination.v1.PagingRequest paging = 2; // 分页请求
}

message GetLoginHistoryResponse {
  repeated LoginHistoryEntry items = 1; // 登录历史记录
  uint32 total = 2;                    // 总数
}

// 登录历史记录条目
message LoginHistoryEntry {
  uint32 id = 1;                      // 记录ID
  uint32 user_id = 2;                 // 用户ID
  string username = 3;                // 用户名
  string client_ip = 4;               // 客户端IP
  string user_agent = 5;              // 用户代理
  string device_info = 6;             // 设备信息
  string login_type = 7;              // 登录类型
  string login_status = 8;            // 登录状态(SUCCESS/FAILED)
  string failure_reason = 9;          // 失败原因
  google.protobuf.Timestamp login_time = 10; // 登录时间
}

// ===== 双因素认证相关消息 =====
message Manage2FARequest {
  uint32 user_id = 1;  // 用户ID
  string operation = 2; // 操作类型(ENABLE/VERIFY/DISABLE)
  string type = 3;      // 类型(TOTP/SMS/EMAIL)
  string code = 4;      // 验证码(VERIFY/DISABLE操作时使用)
}

message Manage2FAResponse {
  bool success = 1;           // 是否成功
  string secret_key = 2;      // 密钥(TOTP, ENABLE操作时返回)
  string qr_code = 3;         // 二维码(TOTP, ENABLE操作时返回)
  string verification_code = 4; // 验证码(SMS/EMAIL, ENABLE操作时返回)
  string backup_codes = 5;     // 备用码(VERIFY操作成功时返回)
}

// ===== 验证码相关消息 =====
message ManageCaptchaRequest {
  string operation = 1;    // 操作类型(GET/VERIFY)
  string type = 2;         // 类型(IMAGE/SMS/EMAIL)
  string target = 3;       // 目标(手机号/邮箱，GET操作时使用)
  string captcha_id = 4;   // 验证码ID(VERIFY操作时使用)
  string captcha_code = 5; // 验证码(VERIFY操作时使用)
}

message ManageCaptchaResponse {
  bool success = 1;         // 是否成功(VERIFY操作时返回)
  string captcha_id = 2;    // 验证码ID(GET操作时返回)
  string captcha_image = 3; // 验证码图片(Base64, GET操作时返回)
  uint32 expires_in = 4;    // 过期时间(秒, GET操作时返回)
}